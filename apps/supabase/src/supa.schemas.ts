// Generated by ts-to-zod
import { z } from "zod";
import { Json } from "./supa.types";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const categoryRowSchema = z.object({
  category_id: z.number(),
  name: z.string(),
});

export const categoryInsertSchema = z.object({
  category_id: z.number().optional(),
  name: z.string(),
});

export const categoryUpdateSchema = z.object({
  category_id: z.number().optional(),
  name: z.string().optional(),
});

export const chatRowSchema = z.object({
  added_by: z.string().nullable(),
  chat_id: z.number(),
  chatbot_id: z.number(),
  conversation_link: z.string(),
});

export const chatInsertSchema = z.object({
  added_by: z.string().optional().nullable(),
  chat_id: z.number().optional(),
  chatbot_id: z.number(),
  conversation_link: z.string(),
});

export const chatUpdateSchema = z.object({
  added_by: z.string().optional().nullable(),
  chat_id: z.number().optional(),
  chatbot_id: z.number().optional(),
  conversation_link: z.string().optional(),
});

export const chatbotRowSchema = z.object({
  avatar: z.string().nullable(),
  chatbot_id: z.number(),
  created_by: z.string(),
  default_complexity: z.string().nullable(),
  default_length: z.string().nullable(),
  default_tone: z.string().nullable(),
  default_type: z.string().nullable(),
  description: z.string().nullable(),
  name: z.string(),
});

export const chatbotInsertSchema = z.object({
  avatar: z.string().optional().nullable(),
  chatbot_id: z.number().optional(),
  created_by: z.string(),
  default_complexity: z.string().optional().nullable(),
  default_length: z.string().optional().nullable(),
  default_tone: z.string().optional().nullable(),
  default_type: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  name: z.string(),
});

export const chatbotUpdateSchema = z.object({
  avatar: z.string().optional().nullable(),
  chatbot_id: z.number().optional(),
  created_by: z.string().optional(),
  default_complexity: z.string().optional().nullable(),
  default_length: z.string().optional().nullable(),
  default_tone: z.string().optional().nullable(),
  default_type: z.string().optional().nullable(),
  description: z.string().optional().nullable(),
  name: z.string().optional(),
});

export const chatbotCategoryRowSchema = z.object({
  category_id: z.number(),
  chatbot_id: z.number(),
});

export const chatbotCategoryInsertSchema = z.object({
  category_id: z.number(),
  chatbot_id: z.number(),
});

export const chatbotCategoryUpdateSchema = z.object({
  category_id: z.number().optional(),
  chatbot_id: z.number().optional(),
});

export const complexityEnumRowSchema = z.object({
  value: z.string(),
});

export const complexityEnumInsertSchema = z.object({
  value: z.string(),
});

export const complexityEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const lengthEnumRowSchema = z.object({
  value: z.string(),
});

export const lengthEnumInsertSchema = z.object({
  value: z.string(),
});

export const lengthEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const messageRowSchema = z.object({
  content: z.string(),
  created_at: z.string(),
  id: z.string(),
  role: z.string(),
  thread_id: z.string().nullable(),
});

export const messageInsertSchema = z.object({
  content: z.string(),
  created_at: z.string().optional(),
  id: z.string().optional(),
  role: z.string(),
  thread_id: z.string().optional().nullable(),
});

export const messageUpdateSchema = z.object({
  content: z.string().optional(),
  created_at: z.string().optional(),
  id: z.string().optional(),
  role: z.string().optional(),
  thread_id: z.string().optional().nullable(),
});

export const messageTypeEnumRowSchema = z.object({
  value: z.string(),
});

export const messageTypeEnumInsertSchema = z.object({
  value: z.string(),
});

export const messageTypeEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const preferenceRowSchema = z.object({
  chatbot_id: z.number(),
  favorite: z.boolean().nullable(),
  preference_id: z.number(),
  preferred_complexity: z.string(),
  preferred_length: z.string(),
  preferred_tone: z.string(),
  preferred_type: z.string(),
  user_id: z.string().nullable(),
});

export const preferenceInsertSchema = z.object({
  chatbot_id: z.number(),
  favorite: z.boolean().optional().nullable(),
  preference_id: z.number().optional(),
  preferred_complexity: z.string(),
  preferred_length: z.string(),
  preferred_tone: z.string(),
  preferred_type: z.string(),
  user_id: z.string().optional().nullable(),
});

export const preferenceUpdateSchema = z.object({
  chatbot_id: z.number().optional(),
  favorite: z.boolean().optional().nullable(),
  preference_id: z.number().optional(),
  preferred_complexity: z.string().optional(),
  preferred_length: z.string().optional(),
  preferred_tone: z.string().optional(),
  preferred_type: z.string().optional(),
  user_id: z.string().optional().nullable(),
});

export const promptRowSchema = z.object({
  content: z.string(),
  prompt_id: z.number(),
  prompt_name: z.string().nullable(),
  type: z.string(),
});

export const promptInsertSchema = z.object({
  content: z.string(),
  prompt_id: z.number().optional(),
  prompt_name: z.string().optional().nullable(),
  type: z.string(),
});

export const promptUpdateSchema = z.object({
  content: z.string().optional(),
  prompt_id: z.number().optional(),
  prompt_name: z.string().optional().nullable(),
  type: z.string().optional(),
});

export const promptChatbotRowSchema = z.object({
  chabot_id: z.number(),
  prompt_id: z.number(),
});

export const promptChatbotInsertSchema = z.object({
  chabot_id: z.number(),
  prompt_id: z.number(),
});

export const promptChatbotUpdateSchema = z.object({
  chabot_id: z.number().optional(),
  prompt_id: z.number().optional(),
});

export const promptTypeEnumRowSchema = z.object({
  value: z.string(),
});

export const promptTypeEnumInsertSchema = z.object({
  value: z.string(),
});

export const promptTypeEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const promptUserRowSchema = z.object({
  prompt_id: z.number(),
  user_id: z.string(),
});

export const promptUserInsertSchema = z.object({
  prompt_id: z.number(),
  user_id: z.string(),
});

export const promptUserUpdateSchema = z.object({
  prompt_id: z.number().optional(),
  user_id: z.string().optional(),
});

export const threadRowSchema = z.object({
  chatbot_id: z.number(),
  created_at: z.string(),
  is_public: z.boolean().nullable(),
  thread_id: z.string(),
  updated_at: z.string(),
  user_id: z.string().nullable(),
});

export const threadInsertSchema = z.object({
  chatbot_id: z.number(),
  created_at: z.string().optional(),
  is_public: z.boolean().optional().nullable(),
  thread_id: z.string().optional(),
  updated_at: z.string().optional(),
  user_id: z.string().optional().nullable(),
});

export const threadUpdateSchema = z.object({
  chatbot_id: z.number().optional(),
  created_at: z.string().optional(),
  is_public: z.boolean().optional().nullable(),
  thread_id: z.string().optional(),
  updated_at: z.string().optional(),
  user_id: z.string().optional().nullable(),
});

export const toneEnumRowSchema = z.object({
  value: z.string(),
});

export const toneEnumInsertSchema = z.object({
  value: z.string(),
});

export const toneEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const typeEnumRowSchema = z.object({
  value: z.string(),
});

export const typeEnumInsertSchema = z.object({
  value: z.string(),
});

export const typeEnumUpdateSchema = z.object({
  value: z.string().optional(),
});

export const userRowSchema = z.object({
  avatar: z.string().nullable(),
  date_joined: z.string(),
  email: z.string(),
  last_login: z.string().nullable(),
  name: z.string().nullable(),
  password: z.string(),
  user_id: z.string(),
  username: z.string(),
});

export const userInsertSchema = z.object({
  avatar: z.string().optional().nullable(),
  date_joined: z.string().optional(),
  email: z.string(),
  last_login: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  password: z.string(),
  user_id: z.string().optional(),
  username: z.string(),
});

export const userUpdateSchema = z.object({
  avatar: z.string().optional().nullable(),
  date_joined: z.string().optional(),
  email: z.string().optional(),
  last_login: z.string().optional().nullable(),
  name: z.string().optional().nullable(),
  password: z.string().optional(),
  user_id: z.string().optional(),
  username: z.string().optional(),
});
