# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=XXXXXXXX

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=b5db513076fa70fd7a83e22e4d074551n # this is local hasura secret
# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_google#callback-url
GOOGLE_CLIENT_ID=XXXXXXXX
GOOGLE_CLIENT_SECRET=XXXXXXXX
# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# https://hasura.io/learn/graphql/hasura-authentication/integrations/nextjs-auth/
NEXTAUTH_URL=http://localhost:3000
HASURA_PROJECT_ENDPOINT=http://localhost:8080/v1/graphql
HASURA_ADMIN_SECRET=lfg

