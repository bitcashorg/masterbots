'use client'

import * as React from 'react'

import { cn } from '@/lib/utils'

function IconNextChat({
  className,
  inverted,
  ...props
}: React.ComponentProps<'svg'> & { inverted?: boolean }) {
  const id = React.useId()

  return (
    <svg
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <defs>
        <linearGradient
          id={`gradient-${id}-1`}
          x1="10.6889"
          y1="10.3556"
          x2="13.8445"
          y2="14.2667"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
        <linearGradient
          id={`gradient-${id}-2`}
          x1="11.7555"
          y1="4.8"
          x2="11.7376"
          y2="9.50002"
          gradientUnits="userSpaceOnUse"
        >
          <stop stopColor={inverted ? 'white' : 'black'} />
          <stop
            offset={1}
            stopColor={inverted ? 'white' : 'black'}
            stopOpacity={0}
          />
        </linearGradient>
      </defs>
      <path
        d="M1 16L2.58314 11.2506C1.83084 9.74642 1.63835 8.02363 2.04013 6.39052C2.4419 4.75741 3.41171 3.32057 4.776 2.33712C6.1403 1.35367 7.81003 0.887808 9.4864 1.02289C11.1628 1.15798 12.7364 1.8852 13.9256 3.07442C15.1148 4.26363 15.842 5.83723 15.9771 7.5136C16.1122 9.18997 15.6463 10.8597 14.6629 12.224C13.6794 13.5883 12.2426 14.5581 10.6095 14.9599C8.97637 15.3616 7.25358 15.1692 5.74942 14.4169L1 16Z"
        fill={inverted ? 'black' : 'white'}
        stroke={inverted ? 'black' : 'white'}
        strokeWidth={2}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <mask
        id="mask0_91_2047"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x={1}
        y={0}
        width={16}
        height={16}
      >
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
      </mask>
      <g mask="url(#mask0_91_2047)">
        <circle cx={9} cy={8} r={8} fill={inverted ? 'black' : 'white'} />
        <path
          d="M14.2896 14.0018L7.146 4.8H5.80005V11.1973H6.87681V6.16743L13.4444 14.6529C13.7407 14.4545 14.0231 14.2369 14.2896 14.0018Z"
          fill={`url(#gradient-${id}-1)`}
        />
        <rect
          x="11.2222"
          y="4.8"
          width="1.06667"
          height="6.4"
          fill={`url(#gradient-${id}-2)`}
        />
      </g>
    </svg>
  )
}

function IconOpenAI({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 24 24"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>OpenAI icon</title>
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.4997-2.6067-1.4997Z" />
    </svg>
  )
}

function IconClaude({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 28 28"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>Claude3 icon</title>
      <path d="M20 4h-4.3l7.7 19.5h4.2L20 4ZM7.6 4 0 23.5h4.3L6 19.4h8l1.6 4h4.3L12.1 4H7.7Zm-.4 11.8 2.6-6.9 2.7 6.9H7.3Z" />
    </svg>
  )
}

function IconLlama({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 50 50"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>Llama icon</title>
      <path d="M 14.947266 8.921875 A 1.0001 1.0001 0 0 0 14.892578 8.9238281 L 14.113281 8.9570312 A 1.0001 1.0001 0 0 0 14.076172 8.9609375 C 11.747543 9.150916 9.6066184 10.132131 7.9492188 11.433594 A 1.0001 1.0001 0 0 0 7.9453125 11.435547 C 6.3196299 12.724106 5.0756503 14.252187 4.0957031 15.820312 C 3.1078176 17.387953 2.3592125 19.019453 1.7597656 20.664062 A 1.0001 1.0001 0 0 0 1.7578125 20.673828 C 0.589844 23.972592 -0.03940949 27.398587 -0.05078125 30.941406 A 1.0001 1.0001 0 0 0 -0.05078125 30.953125 C -0.03513268 32.802786 0.19948413 34.782218 0.97460938 36.765625 C 1.7415989 38.750581 3.2018376 40.865402 5.5722656 42.074219 C 5.5722656 42.074219 5.5742188 42.074219 5.5742188 42.074219 C 5.5742188 42.074219 5.5761719 42.076172 5.5761719 42.076172 C 6.7544032 42.681048 8.0664925 42.9844 9.3359375 42.992188 C 10.773404 43.023427 12.079676 42.617679 13.111328 42.119141 A 1.0001 1.0001 0 0 0 13.121094 42.115234 C 15.142885 41.113533 16.542533 39.768159 17.738281 38.501953 A 1.0001 1.0001 0 0 0 17.748047 38.492188 C 20.133409 35.90012 21.881338 33.108321 23.474609 30.324219 L 23.474609 30.322266 C 24.026177 29.363035 24.503092 28.378555 25 27.400391 C 25.497169 28.379069 25.973439 29.364554 26.525391 30.324219 C 28.118565 33.107145 29.866501 35.900024 32.251953 38.492188 A 1.0001 1.0001 0 0 0 32.261719 38.501953 C 33.458241 39.768919 34.856712 41.114416 36.878906 42.115234 A 1.0001 1.0001 0 0 0 36.888672 42.119141 C 37.920848 42.617933 39.227627 43.02225 40.664062 42.992188 C 41.933507 42.984387 43.245597 42.681048 44.423828 42.076172 L 44.427734 42.074219 C 46.796117 40.865318 48.256006 38.753493 49.023438 36.769531 C 49.799861 34.784735 50.035122 32.804079 50.050781 30.953125 A 1.0001 1.0001 0 0 0 50.050781 30.941406 C 50.039347 27.39938 49.409032 23.972328 48.242188 20.673828 A 1.0001 1.0001 0 0 0 48.240234 20.666016 C 47.641926 19.02156 46.893803 17.388622 45.90625 15.822266 C 44.926303 14.25414 43.68037 12.726059 42.054688 11.4375 A 1.0001 1.0001 0 0 0 42.050781 11.433594 C 40.393375 10.132125 38.25246 9.1509165 35.923828 8.9609375 A 1.0001 1.0001 0 0 0 35.888672 8.9589844 L 35.109375 8.9238281 A 1.0001 1.0001 0 0 0 35.052734 8.9238281 C 34.787025 8.9267581 34.457567 8.9283382 34.103516 8.9726562 C 33.450652 9.0358413 32.848006 9.1787586 32.296875 9.3457031 A 1.0001 1.0001 0 0 0 32.289062 9.3476562 C 31.149007 9.7029521 30.168709 10.22486 29.318359 10.783203 A 1.0001 1.0001 0 0 0 29.314453 10.787109 C 27.627266 11.911191 26.326156 13.227508 25.191406 14.525391 C 25.120386 14.606401 25.06729 14.679448 25 14.759766 C 24.93324 14.679796 24.880888 14.606083 24.810547 14.525391 A 1.0001 1.0001 0 0 0 24.808594 14.523438 C 23.673436 13.227293 22.374571 11.912178 20.6875 10.787109 A 1.0001 1.0001 0 0 0 20.681641 10.783203 C 19.8307 10.225141 18.849909 9.7029626 17.710938 9.3476562 A 1.0001 1.0001 0 0 0 17.703125 9.3457031 C 17.151298 9.1788716 16.548575 9.0338848 15.896484 8.9707031 C 15.543288 8.9266611 15.212414 8.924799 14.947266 8.921875 z M 14.953125 10.923828 C 15.215466 10.926928 15.475682 10.931128 15.660156 10.955078 A 1.0001 1.0001 0 0 0 15.695312 10.958984 C 16.174332 11.004444 16.646301 11.116396 17.121094 11.259766 C 17.122294 11.260142 17.1238 11.259389 17.125 11.259766 C 18.039673 11.546423 18.845799 11.970992 19.583984 12.455078 C 21.063986 13.443142 22.227377 14.611697 23.304688 15.841797 C 23.605526 16.187076 23.892206 16.563082 24.205078 16.957031 A 1.0001 1.0001 0 0 0 24.212891 16.966797 C 24.214091 16.968297 24.215597 16.969203 24.216797 16.970703 A 1.0001 1.0001 0 0 0 24.259766 17.019531 C 25.672189 18.575081 26.63249 20.246858 27.392578 21.513672 A 1.0001 1.0001 0 0 0 27.533203 21.699219 C 28.637888 23.72602 29.891924 26.001231 31.052734 27.878906 A 1.0001 1.0001 0 0 0 31.056641 27.886719 C 32.662473 30.433414 34.408479 32.942893 36.396484 35.023438 A 1.0001 1.0001 0 0 0 36.400391 35.025391 C 37.473548 36.138211 38.969259 37.005859 40.884766 37.005859 C 41.55985 37.005859 42.244035 36.892108 42.869141 36.5625 C 43.493044 36.233526 44.035185 35.658316 44.314453 34.916016 C 44.776736 33.712007 44.952605 32.341612 44.947266 30.951172 A 1.0001 1.0001 0 0 0 44.947266 30.945312 C 44.920085 28.079492 44.358561 25.13764 43.371094 22.431641 L 43.369141 22.427734 C 42.395412 19.726274 40.928446 17.130848 38.875 15.509766 A 1.0001 1.0001 0 0 0 38.867188 15.503906 C 37.837032 14.708341 36.695465 14.213804 35.498047 14.103516 A 1.0001 1.0001 0 0 0 35.451172 14.101562 L 35.074219 14.083984 A 1.0001 1.0001 0 0 0 34.994141 14.083984 C 34.937561 14.085984 34.803954 14.086579 34.634766 14.105469 C 34.32167 14.127609 34.058042 14.192969 33.828125 14.255859 A 1.0001 1.0001 0 0 0 33.8125 14.261719 C 33.240729 14.428006 32.678338 14.706358 32.121094 15.0625 A 1.0001 1.0001 0 0 0 32.119141 15.0625 C 31.002744 15.778024 29.961819 16.771125 28.994141 17.857422 C 28.623989 18.271481 28.324156 18.634262 28.033203 18.951172 C 27.525619 18.131711 27.004203 17.33093 26.246094 16.398438 C 26.394142 16.213269 26.545174 16.015017 26.695312 15.84375 A 1.0001 1.0001 0 0 0 26.697266 15.841797 C 27.774516 14.60968 28.939063 13.441043 30.421875 12.453125 C 31.159705 11.96913 31.965645 11.543872 32.882812 11.257812 L 32.884766 11.257812 C 33.356771 11.115203 33.82797 11.006284 34.306641 10.960938 A 1.0001 1.0001 0 0 0 34.341797 10.957031 C 34.531885 10.932331 34.797754 10.926858 35.068359 10.923828 L 35.074219 10.923828 L 35.761719 10.955078 C 35.761719 10.955078 35.763672 10.955078 35.763672 10.955078 C 37.625796 11.107452 39.436479 11.926143 40.814453 13.007812 C 40.814453 13.007812 40.816406 13.007812 40.816406 13.007812 C 42.226545 14.126527 43.325831 15.466455 44.210938 16.882812 A 1.0001 1.0001 0 0 0 44.212891 16.884766 C 45.110146 18.307243 45.798216 19.807389 46.359375 21.349609 C 47.45307 24.444455 48.038813 27.633171 48.050781 30.935547 L 48.050781 30.941406 C 48.050788 30.943406 48.050775 30.945266 48.050781 30.947266 C 48.035571 32.638561 47.822177 34.353667 47.162109 36.041016 A 1.0001 1.0001 0 0 0 47.160156 36.044922 C 46.529627 37.67672 45.337336 39.366258 43.515625 40.294922 A 1.0001 1.0001 0 0 0 43.513672 40.294922 C 42.63278 40.747757 41.60171 40.989002 40.648438 40.994141 A 1.0001 1.0001 0 0 0 40.630859 40.994141 C 39.602855 41.017451 38.574359 40.711759 37.759766 40.318359 L 37.757812 40.318359 C 36.05122 39.471989 34.867293 38.347917 33.724609 37.138672 L 33.722656 37.136719 C 31.493418 34.71389 29.82788 32.063951 28.261719 29.328125 A 1.0001 1.0001 0 0 0 28.259766 29.326172 C 27.417941 27.862512 26.644478 26.348613 25.908203 24.822266 C 25.905903 24.817566 25.902691 24.813364 25.900391 24.808594 A 1.0001 1.0001 0 0 0 25.859375 24.730469 C 25.857675 24.727669 25.855216 24.723603 25.853516 24.720703 A 1.0001 1.0001 0 0 0 25.84375 24.705078 C 25.1318 23.509934 24.18374 21.887761 23.25 20.693359 A 1.0001 1.0001 0 0 0 23.166016 20.554688 C 23.158416 20.544518 23.150178 20.535561 23.142578 20.525391 C 22.45049 19.599528 21.756276 18.696853 21.005859 17.857422 C 20.038181 16.771125 18.997256 15.778024 17.880859 15.0625 A 1.0001 1.0001 0 0 0 17.878906 15.0625 C 17.321707 14.706361 16.759271 14.428006 16.1875 14.261719 A 1.0001 1.0001 0 0 0 16.177734 14.257812 C 15.942312 14.192063 15.673569 14.125129 15.361328 14.103516 C 15.195334 14.085386 15.06181 14.085984 15.005859 14.083984 A 1.0001 1.0001 0 0 0 14.925781 14.083984 L 14.548828 14.101562 A 1.0001 1.0001 0 0 0 14.501953 14.103516 C 13.304596 14.213799 12.162528 14.707805 11.132812 15.503906 A 1.0001 1.0001 0 0 0 11.125 15.509766 C 9.0700206 17.130847 7.6026471 19.728779 6.6289062 22.431641 C 5.6414389 25.13764 5.0799083 28.07951 5.0527344 30.945312 A 1.0001 1.0001 0 0 0 5.0527344 30.951172 C 5.0484644 32.341893 5.2243733 33.713932 5.6875 34.917969 C 5.6879447 34.919169 5.6870548 34.920675 5.6875 34.921875 C 6.1480682 36.145883 6.8842408 37.094046 7.8417969 37.595703 C 7.8417969 37.595703 7.84375 37.595703 7.84375 37.595703 C 7.84375 37.595703 7.8457031 37.597656 7.8457031 37.597656 C 8.304216 37.838324 8.8394382 37.97476 9.4023438 37.986328 C 9.9099943 38.015628 10.430047 37.896438 10.980469 37.654297 A 1.0001 1.0001 0 0 0 10.984375 37.650391 C 12.121978 37.142598 13.213222 36.217233 14.214844 35.179688 A 1.0001 1.0001 0 0 0 14.21875 35.175781 C 16.205462 33.094463 17.951858 30.587541 19.558594 28.041016 A 1.0001 1.0001 0 0 0 19.564453 28.033203 C 20.562731 26.41795 21.487863 24.7476 22.416016 23.072266 C 22.909707 23.820258 23.393363 24.534723 23.845703 25.294922 C 23.179242 26.65859 22.493768 28.016022 21.740234 29.326172 A 1.0001 1.0001 0 0 0 21.738281 29.328125 C 20.172217 32.064773 18.50662 34.713787 16.277344 37.136719 C 16.277344 37.136719 16.275391 37.138672 16.275391 37.138672 C 15.132983 38.347676 13.945569 39.472592 12.236328 40.320312 C 11.421773 40.713144 10.396579 41.018221 9.3710938 40.994141 A 1.0001 1.0001 0 0 0 9.3515625 40.994141 C 8.3983608 40.988801 7.3672198 40.747757 6.4863281 40.294922 A 1.0001 1.0001 0 0 0 6.484375 40.292969 C 4.6631879 39.365489 3.4704171 37.676835 2.8398438 36.044922 A 1.0001 1.0001 0 0 0 2.8378906 36.041016 C 2.1778201 34.353661 1.9644286 32.638561 1.9492188 30.947266 L 1.9492188 30.935547 C 1.9611927 27.630034 2.5448299 24.440019 3.640625 21.34375 C 3.6411051 21.34235 3.6420981 21.341244 3.6425781 21.339844 C 4.2041892 19.800702 4.8935602 18.305414 5.7890625 16.884766 A 1.0001 1.0001 0 0 0 5.7910156 16.880859 C 6.6770685 15.462985 7.7751826 14.123347 9.1875 13.003906 C 10.565381 11.922528 12.376496 11.105471 14.238281 10.953125 L 14.240234 10.953125 L 14.953125 10.923828 z M 14.984375 16.083984 C 15.060275 16.085984 15.131301 16.087991 15.130859 16.087891 A 1.0001 1.0001 0 0 0 15.216797 16.095703 C 15.285007 16.099503 15.437058 16.128661 15.628906 16.181641 C 15.951135 16.275351 16.367979 16.470189 16.802734 16.748047 C 17.679772 17.310573 18.622025 18.186554 19.513672 19.1875 A 1.0001 1.0001 0 0 0 19.513672 19.189453 C 20.068613 19.810221 20.612262 20.524609 21.160156 21.246094 C 20.091938 23.201609 19.013494 25.11751 17.867188 26.972656 C 16.293923 29.466131 14.608725 31.87224 12.773438 33.794922 C 11.881338 34.718191 10.880897 35.505767 10.173828 35.822266 C 9.8011422 35.986215 9.6162873 36.003177 9.5117188 35.996094 A 1.0001 1.0001 0 0 0 9.4550781 35.994141 C 9.1732472 35.990841 8.9854479 35.937791 8.7734375 35.826172 A 1.0001 1.0001 0 0 0 8.7714844 35.824219 C 8.3935169 35.626861 7.8837373 35.084302 7.5566406 34.210938 A 1.0001 1.0001 0 0 0 7.5546875 34.203125 C 7.2174045 33.32753 7.0496224 32.174449 7.0527344 30.964844 L 7.0527344 30.960938 C 7.0527344 30.960938 7.0527344 30.958984 7.0527344 30.958984 C 7.0782534 28.343934 7.5988035 25.608358 8.5097656 23.113281 A 1.0001 1.0001 0 0 0 8.5117188 23.109375 C 9.4012492 20.64026 10.779954 18.333519 12.361328 17.083984 C 13.144828 16.4792 13.905731 16.169947 14.681641 16.097656 L 14.984375 16.083984 z M 35.015625 16.083984 L 35.318359 16.097656 C 36.092866 16.169816 36.853113 16.47878 37.636719 17.082031 C 39.219411 18.332477 40.598414 20.639326 41.488281 23.109375 A 1.0001 1.0001 0 0 0 41.490234 23.113281 C 42.401863 25.610183 42.922453 28.348057 42.947266 30.964844 C 42.951266 32.173952 42.784813 33.326006 42.447266 34.203125 A 1.0001 1.0001 0 0 0 42.443359 34.210938 C 42.328148 34.518558 42.180941 34.663577 41.935547 34.792969 C 41.690153 34.922361 41.325681 35.005859 40.884766 35.005859 C 39.536018 35.005859 38.663667 34.489841 37.84375 33.640625 C 36.009862 31.721373 34.324531 29.318369 32.753906 26.828125 L 32.748047 26.820312 C 31.604424 24.969835 30.330189 22.660494 29.220703 20.623047 C 29.609584 20.160498 29.916821 19.826516 30.486328 19.189453 A 1.0001 1.0001 0 0 0 30.486328 19.1875 C 31.377975 18.186554 32.320228 17.310573 33.197266 16.748047 L 33.199219 16.746094 C 33.632163 16.469679 34.047825 16.277335 34.369141 16.183594 C 34.369141 16.183594 34.371094 16.181641 34.371094 16.181641 C 34.565482 16.129351 34.720559 16.099173 34.783203 16.095703 A 1.0001 1.0001 0 0 0 34.869141 16.087891 C 34.868699 16.087954 34.939721 16.085984 35.015625 16.083984 z"></path>
    </svg>
  )
}

function IconWordware({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="currentColor"
      viewBox="0 0 58 58"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>Wordware icon</title>
      <path d="M13 0H0V44H13V43.1128L13.1923 43.3051L29.2584 27.239L45.3245 43.3051L45.5168 43.1128V44H58.5168V0H45.5168V25.1127L38.1924 17.7882L29.2584 26.7222L20.3245 17.7882L13 25.1127V0Z" />
    </svg>
  )
}

function IconVercel({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      aria-label="Vercel logomark"
      role="img"
      viewBox="0 0 74 64"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        d="M37.5896 0.25L74.5396 64.25H0.639648L37.5896 0.25Z"
        fill="currentColor"
      ></path>
    </svg>
  )
}

function IconGitHub({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      role="img"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <title>GitHub</title>
      <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12" />
    </svg>
  )
}

function IconSeparator({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      fill="none"
      shapeRendering="geometricPrecision"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="1"
      viewBox="0 0 24 24"
      aria-hidden="true"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M16.88 3.549L7.12 20.451"></path>
    </svg>
  )
}

function IconArrowDown({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m205.66 149.66-72 72a8 8 0 0 1-11.32 0l-72-72a8 8 0 0 1 11.32-11.32L120 196.69V40a8 8 0 0 1 16 0v156.69l58.34-58.35a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconArrowRight({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m221.66 133.66-72 72a8 8 0 0 1-11.32-11.32L196.69 136H40a8 8 0 0 1 0-16h156.69l-58.35-58.34a8 8 0 0 1 11.32-11.32l72 72a8 8 0 0 1 0 11.32Z" />
    </svg>
  )
}

function IconUser({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M230.92 212c-15.23-26.33-38.7-45.21-66.09-54.16a72 72 0 1 0-73.66 0c-27.39 8.94-50.86 27.82-66.09 54.16a8 8 0 1 0 13.85 8c18.84-32.56 52.14-52 89.07-52s70.23 19.44 89.07 52a8 8 0 1 0 13.85-8ZM72 96a56 56 0 1 1 56 56 56.06 56.06 0 0 1-56-56Z" />
    </svg>
  )
}

function IconPlus({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 128a8 8 0 0 1-8 8h-80v80a8 8 0 0 1-16 0v-80H40a8 8 0 0 1 0-16h80V40a8 8 0 0 1 16 0v80h80a8 8 0 0 1 8 8Z" />
    </svg>
  )
}

function IconArrowElbow({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M200 32v144a8 8 0 0 1-8 8H67.31l34.35 34.34a8 8 0 0 1-11.32 11.32l-48-48a8 8 0 0 1 0-11.32l48-48a8 8 0 0 1 11.32 11.32L67.31 168H184V32a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconSpinner({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4 animate-spin', className)}
      {...props}
    >
      <path d="M232 128a104 104 0 0 1-208 0c0-41 23.81-78.36 60.66-95.27a8 8 0 0 1 6.68 14.54C60.15 61.59 40 93.27 40 128a88 88 0 0 0 176 0c0-34.73-20.15-66.41-51.34-80.73a8 8 0 0 1 6.68-14.54C208.19 49.64 232 87 232 128Z" />
    </svg>
  )
}

function IconMessage({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48H40a16 16 0 0 0-16 16v160a15.84 15.84 0 0 0 9.25 14.5A16.05 16.05 0 0 0 40 240a15.89 15.89 0 0 0 10.25-3.78.69.69 0 0 0 .13-.11L82.5 208H216a16 16 0 0 0 16-16V64a16 16 0 0 0-16-16ZM40 224Zm176-32H82.5a16 16 0 0 0-10.3 3.75l-.12.11L40 224V64h176Z" />
    </svg>
  )
}

function IconTrash({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16ZM96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Zm48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0Z" />
    </svg>
  )
}

function IconRefresh({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M197.67 186.37a8 8 0 0 1 0 11.29C196.58 198.73 170.82 224 128 224c-37.39 0-64.53-22.4-80-39.85V208a8 8 0 0 1-16 0v-48a8 8 0 0 1 8-8h48a8 8 0 0 1 0 16H55.44C67.76 183.35 93 208 128 208c36 0 58.14-21.46 58.36-21.68a8 8 0 0 1 11.31.05ZM216 40a8 8 0 0 0-8 8v23.85C192.53 54.4 165.39 32 128 32c-42.82 0-68.58 25.27-69.66 26.34a8 8 0 0 0 11.3 11.34C69.86 69.46 92 48 128 48c35 0 60.24 24.65 72.56 40H168a8 8 0 0 0 0 16h48a8 8 0 0 0 8-8V48a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconStop({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M128 24a104 104 0 1 0 104 104A104.11 104.11 0 0 0 128 24Zm0 192a88 88 0 1 1 88-88 88.1 88.1 0 0 1-88 88Zm24-120h-48a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h48a8 8 0 0 0 8-8v-48a8 8 0 0 0-8-8Zm-8 48h-32v-32h32Z" />
    </svg>
  )
}

function IconSidebar({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 40H40a16 16 0 0 0-16 16v144a16 16 0 0 0 16 16h176a16 16 0 0 0 16-16V56a16 16 0 0 0-16-16ZM40 56h40v144H40Zm176 144H96V56h120v144Z" />
    </svg>
  )
}

function IconMoon({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M233.54 142.23a8 8 0 0 0-8-2 88.08 88.08 0 0 1-109.8-109.8 8 8 0 0 0-10-10 104.84 104.84 0 0 0-52.91 37A104 104 0 0 0 136 224a103.09 103.09 0 0 0 62.52-20.88 104.84 104.84 0 0 0 37-52.91 8 8 0 0 0-1.98-7.98Zm-44.64 48.11A88 88 0 0 1 65.66 67.11a89 89 0 0 1 31.4-26A106 106 0 0 0 96 56a104.11 104.11 0 0 0 104 104 106 106 0 0 0 14.92-1.06 89 89 0 0 1-26.02 31.4Z" />
    </svg>
  )
}

function IconSun({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M120 40V16a8 8 0 0 1 16 0v24a8 8 0 0 1-16 0Zm72 88a64 64 0 1 1-64-64 64.07 64.07 0 0 1 64 64Zm-16 0a48 48 0 1 0-48 48 48.05 48.05 0 0 0 48-48ZM58.34 69.66a8 8 0 0 0 11.32-11.32l-16-16a8 8 0 0 0-11.32 11.32Zm0 116.68-16 16a8 8 0 0 0 11.32 11.32l16-16a8 8 0 0 0-11.32-11.32ZM192 72a8 8 0 0 0 5.66-2.34l16-16a8 8 0 0 0-11.32-11.32l-16 16A8 8 0 0 0 192 72Zm5.66 114.34a8 8 0 0 0-11.32 11.32l16 16a8 8 0 0 0 11.32-11.32ZM48 128a8 8 0 0 0-8-8H16a8 8 0 0 0 0 16h24a8 8 0 0 0 8-8Zm80 80a8 8 0 0 0-8 8v24a8 8 0 0 0 16 0v-24a8 8 0 0 0-8-8Zm112-88h-24a8 8 0 0 0 0 16h24a8 8 0 0 0 0-16Z" />
    </svg>
  )
}

function IconCopy({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M216 32H88a8 8 0 0 0-8 8v40H40a8 8 0 0 0-8 8v128a8 8 0 0 0 8 8h128a8 8 0 0 0 8-8v-40h40a8 8 0 0 0 8-8V40a8 8 0 0 0-8-8Zm-56 176H48V96h112Zm48-48h-32V88a8 8 0 0 0-8-8H96V48h112Z" />
    </svg>
  )
}

function IconCheck({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="m229.66 77.66-128 128a8 8 0 0 1-11.32 0l-56-56a8 8 0 0 1 11.32-11.32L96 188.69 218.34 66.34a8 8 0 0 1 11.32 11.32Z" />
    </svg>
  )
}

function IconDownload({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M224 152v56a16 16 0 0 1-16 16H48a16 16 0 0 1-16-16v-56a8 8 0 0 1 16 0v56h160v-56a8 8 0 0 1 16 0Zm-101.66 5.66a8 8 0 0 0 11.32 0l40-40a8 8 0 0 0-11.32-11.32L136 132.69V40a8 8 0 0 0-16 0v92.69l-26.34-26.35a8 8 0 0 0-11.32 11.32Z" />
    </svg>
  )
}

function IconClose({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 256 256"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path d="M205.66 194.34a8 8 0 0 1-11.32 11.32L128 139.31l-66.34 66.35a8 8 0 0 1-11.32-11.32L116.69 128 50.34 61.66a8 8 0 0 1 11.32-11.32L128 116.69l66.34-66.35a8 8 0 0 1 11.32 11.32L139.31 128Z" />
    </svg>
  )
}

function IconEdit({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      strokeWidth={1.5}
      stroke="currentColor"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        strokeLinecap="round"
        strokeLinejoin="round"
        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
      />
    </svg>
  )
}

function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 9 7"
      {...props}
    >
      <path
        d="M4.41667 4.83333H3.58333C2.89983 4.83307 2.22926 5.01964 1.64412 5.37288C1.05897 5.72611 0.581501 6.23257 0.263334 6.8375C0.254391 6.72522 0.249943 6.61263 0.250001 6.5C0.250001 4.19875 2.11542 2.33333 4.41667 2.33333V0.25L8.58333 3.58333L4.41667 6.91667V4.83333Z"
        fill="#71717A"
      />
    </svg>
  )
}

function IconUsers({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M117.25 157.92a60 60 0 1 0-66.5 0 95.83 95.83 0 0 0-47.22 37.71 8 8 0 1 0 13.4 8.74 80 80 0 0 1 134.14 0 8 8 0 0 0 13.4-8.74 95.83 95.83 0 0 0-47.22-37.71ZM40 108a44 44 0 1 1 44 44 44.05 44.05 0 0 1-44-44Zm210.14 98.7a8 8 0 0 1-11.07-2.33A79.83 79.83 0 0 0 172 168a8 8 0 0 1 0-16 44 44 0 1 0-16.34-84.87 8 8 0 1 1-5.94-14.85 60 60 0 0 1 55.53 105.64 95.83 95.83 0 0 1 47.22 37.71 8 8 0 0 1-2.33 11.07Z" />
    </svg>
  )
}

function IconCaretRight({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 8 15"
      fill="none"
      className={cn('h-4 w-4', className)}
      {...props}
    >
      <path
        d="M0.764389 13.3924L6.85709 7.29973L0.764389 1.20703"
        strokeWidth="1.52318"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

function IconExternalLink({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M224 104a8 8 0 0 1-16 0V59.32l-66.33 66.34a8 8 0 0 1-11.32-11.32L196.68 48H152a8 8 0 0 1 0-16h64a8 8 0 0 1 8 8Zm-40 24a8 8 0 0 0-8 8v72H48V80h72a8 8 0 0 0 0-16H48a16 16 0 0 0-16 16v128a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-72a8 8 0 0 0-8-8Z" />
    </svg>
  )
}

function IconChevronUpDown({
  className,
  ...props
}: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 256 256"
      {...props}
    >
      <path d="M181.66 170.34a8 8 0 0 1 0 11.32l-48 48a8 8 0 0 1-11.32 0l-48-48a8 8 0 0 1 11.32-11.32L128 212.69l42.34-42.35a8 8 0 0 1 11.32 0Zm-96-84.68L128 43.31l42.34 42.35a8 8 0 0 0 11.32-11.32l-48-48a8 8 0 0 0-11.32 0l-48 48a8 8 0 0 0 11.32 11.32Z" />
    </svg>
  )
}

function IconChatSearch({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 24 24"
      {...props}
    >
      <path
        d="M11.9999 2.40387C11.4008 2.41279 10.2707 2.43674 9.68461 2.47571C5.22273 2.77231 1.66862 6.37683 1.37617 10.902C1.31895 11.7875 1.31895 12.7047 1.37617 13.5902C1.48269 15.2383 2.21157 16.7643 3.06969 18.0528C3.56793 18.9549 3.2391 20.0808 2.72014 21.0642C2.34595 21.7733 2.15886 22.1279 2.30908 22.384C2.45931 22.6401 2.79486 22.6483 3.46597 22.6646C4.79316 22.697 5.68811 22.3206 6.39851 21.7968C6.80141 21.4997 7.00287 21.3512 7.14172 21.3341C7.28055 21.317 7.5538 21.4296 8.10019 21.6546C8.59127 21.8569 9.16147 21.9817 9.68461 22.0164C11.2038 22.1174 12.793 22.1177 14.3152 22.0164C18.7771 21.7199 22.3312 18.1153 22.6237 13.5902C22.6575 13.0668 22.6713 12.5323 22.6652 11.9999"
        stroke="#71717A"
        strokeOpacity="0.5"
        strokeWidth="1.6"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.2666 15.2H15.7333M8.2666 9.86664H11.9999"
        stroke="#71717A"
        strokeOpacity="0.5"
        strokeWidth="1.6"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M20.8158 6.95509L22.6666 8.79998M21.7828 4.62474C21.7828 2.80693 20.3092 1.33331 18.4914 1.33331C16.6735 1.33331 15.2 2.80693 15.2 4.62474C15.2 6.44255 16.6735 7.91617 18.4914 7.91617C20.3092 7.91617 21.7828 6.44255 21.7828 4.62474Z"
        stroke="#71717A"
        strokeOpacity="0.5"
        strokeWidth="1.6"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

function IconUpVote({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      className={cn('h-3 w-3', className)}
      viewBox="0 0 8 10"
      {...props}
    >
      <path
        d="M4.32543 0.989624C4.16668 0.791707 3.83335 0.791707 3.6746 0.989624L0.341264 5.15629C0.241264 5.28171 0.222097 5.45296 0.291264 5.59754C0.360847 5.74129 0.506264 5.83337 0.666681 5.83337H1.50001H2.33335V7.08337V8.75004C2.33335 8.98046 2.5196 9.16671 2.75001 9.16671H5.25001C5.48043 9.16671 5.66668 8.98046 5.66668 8.75004V6.66671V5.83337H6.50001H7.33335C7.49376 5.83337 7.63918 5.74129 7.70876 5.59754C7.77793 5.45296 7.75876 5.28171 7.65876 5.15629L4.32543 0.989624ZM5.25001 5.00004H4.83335V5.41671V6.66671V8.33337H3.16668V7.08337V5.41671V5.00004H2.75001H1.53376L4.00001 1.91712L6.46626 5.00004H5.25001Z"
        fill="#71717A"
      />
    </svg>
  )
}

function IconDownVote({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      className={cn('h-3 w-3', className)}
      viewBox="0 0 8 10"
      {...props}
    >
      <path
        d="M3.67457 9.01038C3.83332 9.20829 4.16665 9.20829 4.3254 9.01038L7.65874 4.84371C7.75874 4.71829 7.7779 4.54704 7.70874 4.40246C7.63915 4.25871 7.49374 4.16663 7.33332 4.16663H6.49999H5.66665L5.66665 2.91663V1.24996C5.66665 1.01954 5.4804 0.833292 5.24999 0.833292H2.74999C2.51957 0.833292 2.33332 1.01954 2.33332 1.24996V3.33329V4.16663H1.49999H0.666653C0.506236 4.16663 0.360819 4.25871 0.291236 4.40246C0.22207 4.54704 0.241236 4.71829 0.341236 4.84371L3.67457 9.01038ZM2.74999 4.99996H3.16665V4.58329V3.33329V1.66663L4.83332 1.66663V2.91663L4.83332 4.58329V4.99996H5.24999H6.46624L3.99999 8.08288L1.53374 4.99996H2.74999Z"
        fill="#71717A"
      />
    </svg>
  )
}

function IconChatMessage({ className, ...props }: React.ComponentProps<'svg'>) {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      className={cn('h-4 w-4', className)}
      viewBox="0 0 10 10"
      {...props}
    >
      <path
        d="M4.99998 9.16671C7.30115 9.16671 9.16665 7.30121 9.16665 5.00004C9.16665 2.69885 7.30115 0.833374 4.99998 0.833374C2.69879 0.833374 0.833313 2.69885 0.833313 5.00004C0.833313 6.10962 1.26704 7.11792 1.9742 7.86462L1.13615 8.82108C1.01815 8.95575 1.11379 9.16671 1.29285 9.16671H4.99998Z"
        stroke="#71717A"
        strokeWidth="0.833333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M2.91669 3.75H7.08335"
        stroke="#71717A"
        strokeWidth="0.833333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M2.91669 5.41675H4.58335"
        stroke="#71717A"
        stroke-width="0.833333"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  )
}

// function IconShare({ className, ...props }: React.ComponentProps<'svg'>) {
//   return (
//     <svg
//       xmlns="http://www.w3.org/2000/svg"
//       fill="none"
//       className={cn('h-3 w-3', className)}
//       viewBox="0 0 8 10"
//       {...props}
//     >
//       <path
//         d="M3.67457 9.01038C3.83332 9.20829 4.16665 9.20829 4.3254 9.01038L7.65874 4.84371C7.75874 4.71829 7.7779 4.54704 7.70874 4.40246C7.63915 4.25871 7.49374 4.16663 7.33332 4.16663H6.49999H5.66665L5.66665 2.91663V1.24996C5.66665 1.01954 5.4804 0.833292 5.24999 0.833292H2.74999C2.51957 0.833292 2.33332 1.01954 2.33332 1.24996V3.33329V4.16663H1.49999H0.666653C0.506236 4.16663 0.360819 4.25871 0.291236 4.40246C0.22207 4.54704 0.241236 4.71829 0.341236 4.84371L3.67457 9.01038ZM2.74999 4.99996H3.16665V4.58329V3.33329V1.66663L4.83332 1.66663V2.91663L4.83332 4.58329V4.99996H5.24999H6.46624L3.99999 8.08288L1.53374 4.99996H2.74999Z"
//         fill="#71717A"
//       />
//     </svg>
//   )
// }

export {
  IconChatMessage,
  IconDownVote,
  IconUpVote,
  IconCaretRight,
  IconChatSearch,
  IconEdit,
  IconNextChat,
  IconOpenAI,
  IconVercel,
  IconGitHub,
  IconSeparator,
  IconArrowDown,
  IconArrowRight,
  IconUser,
  IconPlus,
  IconArrowElbow,
  IconSpinner,
  IconMessage,
  IconTrash,
  IconRefresh,
  IconStop,
  IconSidebar,
  IconMoon,
  IconSun,
  IconCopy,
  IconCheck,
  IconDownload,
  IconClose,
  IconShare,
  IconUsers,
  IconExternalLink,
  IconChevronUpDown,
  IconClaude,
  IconLlama,
  IconWordware
}
