/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([
  ["_app-pages-browser_components_routes_thread_thread-popup_tsx"],
  {
    /***/ "(app-pages-browser)/../../node_modules/lodash/_baseTrim.js":
      /*!**********************************************!*\
  !*** ../../node_modules/lodash/_baseTrim.js ***!
  \**********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "var trimmedEndIndex = __webpack_require__(/*! ./_trimmedEndIndex */ \"(app-pages-browser)/../../node_modules/lodash/_trimmedEndIndex.js\");\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVHJpbS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsbUJBQU8sQ0FBQyw2RkFBb0I7O0FBRWxEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NoZXJpZmYvRGVza3RvcC9iaXRjYXNoLWFwcHMvbWFzdGVyYm90cy9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVHJpbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdHJpbW1lZEVuZEluZGV4ID0gcmVxdWlyZSgnLi9fdHJpbW1lZEVuZEluZGV4Jyk7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGxlYWRpbmcgd2hpdGVzcGFjZS4gKi9cbnZhciByZVRyaW1TdGFydCA9IC9eXFxzKy87XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8udHJpbWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byB0cmltLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgdHJpbW1lZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIGJhc2VUcmltKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nXG4gICAgPyBzdHJpbmcuc2xpY2UoMCwgdHJpbW1lZEVuZEluZGV4KHN0cmluZykgKyAxKS5yZXBsYWNlKHJlVHJpbVN0YXJ0LCAnJylcbiAgICA6IHN0cmluZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVHJpbTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/_baseTrim.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/_trimmedEndIndex.js":
      /*!*****************************************************!*\
  !*** ../../node_modules/lodash/_trimmedEndIndex.js ***!
  \*****************************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL190cmltbWVkRW5kSW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvc2hlcmlmZi9EZXNrdG9wL2JpdGNhc2gtYXBwcy9tYXN0ZXJib3RzL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RyaW1tZWRFbmRJbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVXNlZCB0byBtYXRjaCBhIHNpbmdsZSB3aGl0ZXNwYWNlIGNoYXJhY3Rlci4gKi9cbnZhciByZVdoaXRlc3BhY2UgPSAvXFxzLztcblxuLyoqXG4gKiBVc2VkIGJ5IGBfLnRyaW1gIGFuZCBgXy50cmltRW5kYCB0byBnZXQgdGhlIGluZGV4IG9mIHRoZSBsYXN0IG5vbi13aGl0ZXNwYWNlXG4gKiBjaGFyYWN0ZXIgb2YgYHN0cmluZ2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBpbnNwZWN0LlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIGxhc3Qgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVyLlxuICovXG5mdW5jdGlvbiB0cmltbWVkRW5kSW5kZXgoc3RyaW5nKSB7XG4gIHZhciBpbmRleCA9IHN0cmluZy5sZW5ndGg7XG5cbiAgd2hpbGUgKGluZGV4LS0gJiYgcmVXaGl0ZXNwYWNlLnRlc3Qoc3RyaW5nLmNoYXJBdChpbmRleCkpKSB7fVxuICByZXR1cm4gaW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdHJpbW1lZEVuZEluZGV4O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/_trimmedEndIndex.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/debounce.js":
      /*!*********************************************!*\
  !*** ../../node_modules/lodash/debounce.js ***!
  \*********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "var isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/../../node_modules/lodash/isObject.js\"),\n    now = __webpack_require__(/*! ./now */ \"(app-pages-browser)/../../node_modules/lodash/now.js\"),\n    toNumber = __webpack_require__(/*! ./toNumber */ \"(app-pages-browser)/../../node_modules/lodash/toNumber.js\");\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/debounce.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/isEqual.js":
      /*!********************************************!*\
  !*** ../../node_modules/lodash/isEqual.js ***!
  \********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"(app-pages-browser)/../../node_modules/lodash/_baseIsEqual.js\");\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRXF1YWwuanMiLCJtYXBwaW5ncyI6IkFBQUEsa0JBQWtCLG1CQUFPLENBQUMscUZBQWdCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvc2hlcmlmZi9EZXNrdG9wL2JpdGNhc2gtYXBwcy9tYXN0ZXJib3RzL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNFcXVhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzRXF1YWwgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbCcpO1xuXG4vKipcbiAqIFBlcmZvcm1zIGEgZGVlcCBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmVcbiAqIGVxdWl2YWxlbnQuXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIHN1cHBvcnRzIGNvbXBhcmluZyBhcnJheXMsIGFycmF5IGJ1ZmZlcnMsIGJvb2xlYW5zLFxuICogZGF0ZSBvYmplY3RzLCBlcnJvciBvYmplY3RzLCBtYXBzLCBudW1iZXJzLCBgT2JqZWN0YCBvYmplY3RzLCByZWdleGVzLFxuICogc2V0cywgc3RyaW5ncywgc3ltYm9scywgYW5kIHR5cGVkIGFycmF5cy4gYE9iamVjdGAgb2JqZWN0cyBhcmUgY29tcGFyZWRcbiAqIGJ5IHRoZWlyIG93biwgbm90IGluaGVyaXRlZCwgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLiBGdW5jdGlvbnMgYW5kIERPTVxuICogbm9kZXMgYXJlIGNvbXBhcmVkIGJ5IHN0cmljdCBlcXVhbGl0eSwgaS5lLiBgPT09YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gKlxuICogXy5pc0VxdWFsKG9iamVjdCwgb3RoZXIpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIG9iamVjdCA9PT0gb3RoZXI7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0VxdWFsKHZhbHVlLCBvdGhlcikge1xuICByZXR1cm4gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0VxdWFsO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/isEqual.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/now.js":
      /*!****************************************!*\
  !*** ../../node_modules/lodash/now.js ***!
  \****************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            'var root = __webpack_require__(/*! ./_root */ "(app-pages-browser)/../../node_modules/lodash/_root.js");\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL25vdy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxXQUFXLG1CQUFPLENBQUMsdUVBQVM7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NoZXJpZmYvRGVza3RvcC9iaXRjYXNoLWFwcHMvbWFzdGVyYm90cy9ub2RlX21vZHVsZXMvbG9kYXNoL25vdy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSB0aW1lc3RhbXAgb2YgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdGhhdCBoYXZlIGVsYXBzZWQgc2luY2VcbiAqIHRoZSBVbml4IGVwb2NoICgxIEphbnVhcnkgMTk3MCAwMDowMDowMCBVVEMpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMi40LjBcbiAqIEBjYXRlZ29yeSBEYXRlXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSB0aW1lc3RhbXAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZGVmZXIoZnVuY3Rpb24oc3RhbXApIHtcbiAqICAgY29uc29sZS5sb2coXy5ub3coKSAtIHN0YW1wKTtcbiAqIH0sIF8ubm93KCkpO1xuICogLy8gPT4gTG9ncyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBpdCB0b29rIGZvciB0aGUgZGVmZXJyZWQgaW52b2NhdGlvbi5cbiAqL1xudmFyIG5vdyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBub3c7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/now.js\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/throttle.js":
      /*!*********************************************!*\
  !*** ../../node_modules/lodash/throttle.js ***!
  \*********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "var debounce = __webpack_require__(/*! ./debounce */ \"(app-pages-browser)/../../node_modules/lodash/debounce.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/../../node_modules/lodash/isObject.js\");\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL3Rocm90dGxlLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyw2RUFBWTtBQUNuQyxlQUFlLG1CQUFPLENBQUMsNkVBQVk7O0FBRW5DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFNBQVM7QUFDcEI7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELG1CQUFtQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL21hc3RlcmJvdHMvbm9kZV9tb2R1bGVzL2xvZGFzaC90aHJvdHRsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVib3VuY2UgPSByZXF1aXJlKCcuL2RlYm91bmNlJyksXG4gICAgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0Jyk7XG5cbi8qKiBFcnJvciBtZXNzYWdlIGNvbnN0YW50cy4gKi9cbnZhciBGVU5DX0VSUk9SX1RFWFQgPSAnRXhwZWN0ZWQgYSBmdW5jdGlvbic7XG5cbi8qKlxuICogQ3JlYXRlcyBhIHRocm90dGxlZCBmdW5jdGlvbiB0aGF0IG9ubHkgaW52b2tlcyBgZnVuY2AgYXQgbW9zdCBvbmNlIHBlclxuICogZXZlcnkgYHdhaXRgIG1pbGxpc2Vjb25kcy4gVGhlIHRocm90dGxlZCBmdW5jdGlvbiBjb21lcyB3aXRoIGEgYGNhbmNlbGBcbiAqIG1ldGhvZCB0byBjYW5jZWwgZGVsYXllZCBgZnVuY2AgaW52b2NhdGlvbnMgYW5kIGEgYGZsdXNoYCBtZXRob2QgdG9cbiAqIGltbWVkaWF0ZWx5IGludm9rZSB0aGVtLiBQcm92aWRlIGBvcHRpb25zYCB0byBpbmRpY2F0ZSB3aGV0aGVyIGBmdW5jYFxuICogc2hvdWxkIGJlIGludm9rZWQgb24gdGhlIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YFxuICogdGltZW91dC4gVGhlIGBmdW5jYCBpcyBpbnZva2VkIHdpdGggdGhlIGxhc3QgYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZVxuICogdGhyb3R0bGVkIGZ1bmN0aW9uLiBTdWJzZXF1ZW50IGNhbGxzIHRvIHRoZSB0aHJvdHRsZWQgZnVuY3Rpb24gcmV0dXJuIHRoZVxuICogcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYCBpbnZvY2F0aW9uLlxuICpcbiAqICoqTm90ZToqKiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgLCBgZnVuY2AgaXNcbiAqIGludm9rZWQgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQgb25seSBpZiB0aGUgdGhyb3R0bGVkIGZ1bmN0aW9uXG4gKiBpcyBpbnZva2VkIG1vcmUgdGhhbiBvbmNlIGR1cmluZyB0aGUgYHdhaXRgIHRpbWVvdXQuXG4gKlxuICogSWYgYHdhaXRgIGlzIGAwYCBhbmQgYGxlYWRpbmdgIGlzIGBmYWxzZWAsIGBmdW5jYCBpbnZvY2F0aW9uIGlzIGRlZmVycmVkXG4gKiB1bnRpbCB0byB0aGUgbmV4dCB0aWNrLCBzaW1pbGFyIHRvIGBzZXRUaW1lb3V0YCB3aXRoIGEgdGltZW91dCBvZiBgMGAuXG4gKlxuICogU2VlIFtEYXZpZCBDb3JiYWNobydzIGFydGljbGVdKGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vZGVib3VuY2luZy10aHJvdHRsaW5nLWV4cGxhaW5lZC1leGFtcGxlcy8pXG4gKiBmb3IgZGV0YWlscyBvdmVyIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIGBfLnRocm90dGxlYCBhbmQgYF8uZGVib3VuY2VgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gdGhyb3R0bGUuXG4gKiBAcGFyYW0ge251bWJlcn0gW3dhaXQ9MF0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gdGhyb3R0bGUgaW52b2NhdGlvbnMgdG8uXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIFRoZSBvcHRpb25zIG9iamVjdC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubGVhZGluZz10cnVlXVxuICogIFNwZWNpZnkgaW52b2tpbmcgb24gdGhlIGxlYWRpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMudHJhaWxpbmc9dHJ1ZV1cbiAqICBTcGVjaWZ5IGludm9raW5nIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgdGhyb3R0bGVkIGZ1bmN0aW9uLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBBdm9pZCBleGNlc3NpdmVseSB1cGRhdGluZyB0aGUgcG9zaXRpb24gd2hpbGUgc2Nyb2xsaW5nLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3Njcm9sbCcsIF8udGhyb3R0bGUodXBkYXRlUG9zaXRpb24sIDEwMCkpO1xuICpcbiAqIC8vIEludm9rZSBgcmVuZXdUb2tlbmAgd2hlbiB0aGUgY2xpY2sgZXZlbnQgaXMgZmlyZWQsIGJ1dCBub3QgbW9yZSB0aGFuIG9uY2UgZXZlcnkgNSBtaW51dGVzLlxuICogdmFyIHRocm90dGxlZCA9IF8udGhyb3R0bGUocmVuZXdUb2tlbiwgMzAwMDAwLCB7ICd0cmFpbGluZyc6IGZhbHNlIH0pO1xuICogalF1ZXJ5KGVsZW1lbnQpLm9uKCdjbGljaycsIHRocm90dGxlZCk7XG4gKlxuICogLy8gQ2FuY2VsIHRoZSB0cmFpbGluZyB0aHJvdHRsZWQgaW52b2NhdGlvbi5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIHRocm90dGxlZC5jYW5jZWwpO1xuICovXG5mdW5jdGlvbiB0aHJvdHRsZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gIHZhciBsZWFkaW5nID0gdHJ1ZSxcbiAgICAgIHRyYWlsaW5nID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgfVxuICBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICBsZWFkaW5nID0gJ2xlYWRpbmcnIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMubGVhZGluZyA6IGxlYWRpbmc7XG4gICAgdHJhaWxpbmcgPSAndHJhaWxpbmcnIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgfVxuICByZXR1cm4gZGVib3VuY2UoZnVuYywgd2FpdCwge1xuICAgICdsZWFkaW5nJzogbGVhZGluZyxcbiAgICAnbWF4V2FpdCc6IHdhaXQsXG4gICAgJ3RyYWlsaW5nJzogdHJhaWxpbmdcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdGhyb3R0bGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/throttle.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lodash/toNumber.js":
      /*!*********************************************!*\
  !*** ../../node_modules/lodash/toNumber.js ***!
  \*********************************************/
      /***/ (module, __unused_webpack_exports, __webpack_require__) => {
        eval(
          __webpack_require__.ts(
            "var baseTrim = __webpack_require__(/*! ./_baseTrim */ \"(app-pages-browser)/../../node_modules/lodash/_baseTrim.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/../../node_modules/lodash/isObject.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"(app-pages-browser)/../../node_modules/lodash/isSymbol.js\");\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvTnVtYmVyLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQywrRUFBYTtBQUNwQyxlQUFlLG1CQUFPLENBQUMsNkVBQVk7QUFDbkMsZUFBZSxtQkFBTyxDQUFDLDZFQUFZOztBQUVuQztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL21hc3RlcmJvdHMvbm9kZV9tb2R1bGVzL2xvZGFzaC90b051bWJlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZVRyaW0gPSByZXF1aXJlKCcuL19iYXNlVHJpbScpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIGlzU3ltYm9sID0gcmVxdWlyZSgnLi9pc1N5bWJvbCcpO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBOQU4gPSAwIC8gMDtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJhZCBzaWduZWQgaGV4YWRlY2ltYWwgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzQmFkSGV4ID0gL15bLStdMHhbMC05YS1mXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBiaW5hcnkgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzQmluYXJ5ID0gL14wYlswMV0rJC9pO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb2N0YWwgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUlzT2N0YWwgPSAvXjBvWzAtN10rJC9pO1xuXG4vKiogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgd2l0aG91dCBhIGRlcGVuZGVuY3kgb24gYHJvb3RgLiAqL1xudmFyIGZyZWVQYXJzZUludCA9IHBhcnNlSW50O1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBudW1iZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBudW1iZXIuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9OdW1iZXIoMy4yKTtcbiAqIC8vID0+IDMuMlxuICpcbiAqIF8udG9OdW1iZXIoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiA1ZS0zMjRcbiAqXG4gKiBfLnRvTnVtYmVyKEluZmluaXR5KTtcbiAqIC8vID0+IEluZmluaXR5XG4gKlxuICogXy50b051bWJlcignMy4yJyk7XG4gKiAvLyA9PiAzLjJcbiAqL1xuZnVuY3Rpb24gdG9OdW1iZXIodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIE5BTjtcbiAgfVxuICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgdmFyIG90aGVyID0gdHlwZW9mIHZhbHVlLnZhbHVlT2YgPT0gJ2Z1bmN0aW9uJyA/IHZhbHVlLnZhbHVlT2YoKSA6IHZhbHVlO1xuICAgIHZhbHVlID0gaXNPYmplY3Qob3RoZXIpID8gKG90aGVyICsgJycpIDogb3RoZXI7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogK3ZhbHVlO1xuICB9XG4gIHZhbHVlID0gYmFzZVRyaW0odmFsdWUpO1xuICB2YXIgaXNCaW5hcnkgPSByZUlzQmluYXJ5LnRlc3QodmFsdWUpO1xuICByZXR1cm4gKGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSlcbiAgICA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOClcbiAgICA6IChyZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b051bWJlcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lodash/toNumber.js\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/../../node_modules/lucide-react/dist/esm/icons/external-link.js":
      /*!***********************************************************************!*\
  !*** ../../node_modules/lucide-react/dist/esm/icons/external-link.js ***!
  \***********************************************************************/
      /***/ (
        __unused_webpack___webpack_module__,
        __webpack_exports__,
        __webpack_require__,
      ) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __iconNode: () => (/* binding */ __iconNode),\n/* harmony export */   "default": () => (/* binding */ ExternalLink)\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ "(app-pages-browser)/../../node_modules/lucide-react/dist/esm/createLucideIcon.js");\n/**\n * @license lucide-react v0.473.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst __iconNode = [\n    [\n        "path",\n        {\n            d: "M15 3h6v6",\n            key: "1q9fwt"\n        }\n    ],\n    [\n        "path",\n        {\n            d: "M10 14 21 3",\n            key: "gplh6r"\n        }\n    ],\n    [\n        "path",\n        {\n            d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",\n            key: "a6xqqp"\n        }\n    ]\n];\nconst ExternalLink = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__["default"])("ExternalLink", __iconNode);\n //# sourceMappingURL=external-link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL2V4dGVybmFsLWxpbmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBR08sTUFBTSxVQUF1QjtJQUNsQztRQUFDLE1BQVE7UUFBQTtZQUFFLEdBQUcsQ0FBYTtZQUFBLEtBQUs7UUFBQSxDQUFVO0tBQUE7SUFDMUM7UUFBQyxNQUFRO1FBQUE7WUFBRSxHQUFHLENBQWU7WUFBQSxLQUFLO1FBQUEsQ0FBVTtLQUFBO0lBQzVDO1FBQUMsTUFBUTtRQUFBO1lBQUUsR0FBRyxDQUE0RDtZQUFBLEtBQUs7UUFBQSxDQUFVO0tBQUE7Q0FDM0Y7QUFhTSxtQkFBZSxrRUFBaUIsaUJBQWdCLENBQVUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL3NyYy9pY29ucy9leHRlcm5hbC1saW5rLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24nO1xuaW1wb3J0IHsgSWNvbk5vZGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBfX2ljb25Ob2RlOiBJY29uTm9kZSA9IFtcbiAgWydwYXRoJywgeyBkOiAnTTE1IDNoNnY2Jywga2V5OiAnMXE5Znd0JyB9XSxcbiAgWydwYXRoJywgeyBkOiAnTTEwIDE0IDIxIDMnLCBrZXk6ICdncGxoNnInIH1dLFxuICBbJ3BhdGgnLCB7IGQ6ICdNMTggMTN2NmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY4YTIgMiAwIDAgMSAyLTJoNicsIGtleTogJ2E2eHFxcCcgfV0sXG5dO1xuXG4vKipcbiAqIEBjb21wb25lbnQgQG5hbWUgRXh0ZXJuYWxMaW5rXG4gKiBAZGVzY3JpcHRpb24gTHVjaWRlIFNWRyBpY29uIGNvbXBvbmVudCwgcmVuZGVycyBTVkcgRWxlbWVudCB3aXRoIGNoaWxkcmVuLlxuICpcbiAqIEBwcmV2aWV3ICFbaW1nXShkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUFnZUcxc2JuTTlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdmMzWm5JZ29nSUhkcFpIUm9QU0l5TkNJS0lDQm9aV2xuYUhROUlqSTBJZ29nSUhacFpYZENiM2c5SWpBZ01DQXlOQ0F5TkNJS0lDQm1hV3hzUFNKdWIyNWxJZ29nSUhOMGNtOXJaVDBpSXpBd01DSWdjM1I1YkdVOUltSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3SUdKdmNtUmxjaTF5WVdScGRYTTZJREp3ZUNJS0lDQnpkSEp2YTJVdGQybGtkR2c5SWpJaUNpQWdjM1J5YjJ0bExXeHBibVZqWVhBOUluSnZkVzVrSWdvZ0lITjBjbTlyWlMxc2FXNWxhbTlwYmowaWNtOTFibVFpQ2o0S0lDQThjR0YwYUNCa1BTSk5NVFVnTTJnMmRqWWlJQzgrQ2lBZ1BIQmhkR2dnWkQwaVRURXdJREUwSURJeElETWlJQzgrQ2lBZ1BIQmhkR2dnWkQwaVRURTRJREV6ZGpaaE1pQXlJREFnTUNBeExUSWdNa2cxWVRJZ01pQXdJREFnTVMweUxUSldPR0V5SURJZ01DQXdJREVnTWkweWFEWWlJQzgrQ2p3dmMzWm5QZ289KSAtIGh0dHBzOi8vbHVjaWRlLmRldi9pY29ucy9leHRlcm5hbC1saW5rXG4gKiBAc2VlIGh0dHBzOi8vbHVjaWRlLmRldi9ndWlkZS9wYWNrYWdlcy9sdWNpZGUtcmVhY3QgLSBEb2N1bWVudGF0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHByb3BzIC0gTHVjaWRlIGljb25zIHByb3BzIGFuZCBhbnkgdmFsaWQgU1ZHIGF0dHJpYnV0ZVxuICogQHJldHVybnMge0pTWC5FbGVtZW50fSBKU1ggRWxlbWVudFxuICpcbiAqL1xuY29uc3QgRXh0ZXJuYWxMaW5rID0gY3JlYXRlTHVjaWRlSWNvbignRXh0ZXJuYWxMaW5rJywgX19pY29uTm9kZSk7XG5cbmV4cG9ydCBkZWZhdWx0IEV4dGVybmFsTGluaztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/lucide-react/dist/esm/icons/external-link.js\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./components/routes/chat/chat-list/index.tsx":
      /*!****************************************************!*\
  !*** ./components/routes/chat/chat-list/index.tsx ***!
  \****************************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatList: () => (/* binding */ ChatList)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");\n/* harmony import */ var _components_shared_skeletons_thread_popup_skeleton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/shared/skeletons/thread-popup-skeleton */ "(app-pages-browser)/./components/shared/skeletons/thread-popup-skeleton.tsx");\n/* harmony import */ var _lib_hooks_use_chat_attachments__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/hooks/use-chat-attachments */ "(app-pages-browser)/./lib/hooks/use-chat-attachments.ts");\n/* harmony import */ var _lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/use-mb-scroll */ "(app-pages-browser)/./lib/hooks/use-mb-scroll.tsx");\n/* harmony import */ var _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/hooks/use-thread */ "(app-pages-browser)/./lib/hooks/use-thread.tsx");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/utils */ "(app-pages-browser)/./lib/utils.ts");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/isEqual */ "(app-pages-browser)/../../node_modules/lodash/isEqual.js");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dynamic */ "(app-pages-browser)/../../node_modules/next/dist/api/app-dynamic.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* __next_internal_client_entry_do_not_use__ ChatList auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst MessagePairs = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_7__["default"])(()=>__webpack_require__.e(/*! import() */ "_app-pages-browser_components_routes_chat_chat-list_message-pairs_tsx").then(__webpack_require__.bind(__webpack_require__, /*! @/components/routes/chat/chat-list/message-pairs */ "(app-pages-browser)/./components/routes/chat/chat-list/message-pairs.tsx")).then((mod)=>mod.MessagePairs), {\n    loadableGenerated: {\n        modules: [\n            "components/routes/chat/chat-list/index.tsx -> " + "@/components/routes/chat/chat-list/message-pairs"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_skeletons_thread_popup_skeleton__WEBPACK_IMPORTED_MODULE_1__.ThreadPopupContentSkeleton, {}, void 0, false, {\n            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/chat/chat-list/index.tsx",\n            lineNumber: 27,\n            columnNumber: 18\n        }, undefined)\n});\n_c = MessagePairs;\nfunction ChatList(param) {\n    let { className, messages, isThread = true, isLoadingMessages = false, chatContentClass, chatTitleClass, chatArrowClass, containerRef: externalContainerRef, sendMessageFn } = param;\n    var _activeThread_thread;\n    _s();\n    const { isNewResponse, activeThread } = (0,_lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_4__.useThread)();\n    const [{ userData: { userAttachments } }] = (0,_lib_hooks_use_chat_attachments__WEBPACK_IMPORTED_MODULE_2__.useFileAttachments)();\n    const [pairs, setPairs] = react__WEBPACK_IMPORTED_MODULE_8___default().useState([]);\n    const [previousConversationPairs, setPreviousConversationPairs] = react__WEBPACK_IMPORTED_MODULE_8___default().useState([]);\n    const chatListRef = (0,react__WEBPACK_IMPORTED_MODULE_8__.useRef)(null);\n    const messageContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_8__.useRef)(null);\n    //? Uses the external ref if provided, otherwise it uses our internal refs\n    const effectiveContainerRef = externalContainerRef || chatListRef;\n    const effectiveThreadRef = messageContainerRef;\n    // ! Temporary fix for the chat messages... Must be related with the thread title:\n    // ? Related Issue: The last question shows as Thread Title when it should be the first\n    const chatMessages = messages || (activeThread === null || activeThread === void 0 ? void 0 : activeThread.messages) || [];\n    // .sort(\n    // \t(a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n    // )\n    const previousChatMessages = (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread = activeThread.thread) === null || _activeThread_thread === void 0 ? void 0 : _activeThread_thread.messages) || [];\n    // .sort(\n    // \t(a, b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n    // )\n    const { isNearBottom } = (0,_lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_3__.useMBScroll)({\n        containerRef: effectiveContainerRef,\n        threadRef: effectiveThreadRef,\n        isNewContent: isNewResponse,\n        hasMore: false,\n        isLast: true,\n        loading: isLoadingMessages,\n        loadMore: {\n            "ChatList.useMBScroll": ()=>{\n                console.log(\'loading more!\');\n            }\n        }["ChatList.useMBScroll"]\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)({\n        "ChatList.useEffect": ()=>{\n            if (chatMessages === null || chatMessages === void 0 ? void 0 : chatMessages.length) {\n                const prePairs = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_5__.createMessagePairs)(chatMessages);\n                setPairs({\n                    "ChatList.useEffect": (prevPairs)=>{\n                        if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_6___default()(prevPairs, prePairs)) {\n                            return prePairs;\n                        }\n                        return prevPairs;\n                    }\n                }["ChatList.useEffect"]);\n            }\n        }\n    }["ChatList.useEffect"], [\n        chatMessages\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)({\n        "ChatList.useEffect": ()=>{\n            var _activeThread_thread;\n            if (previousChatMessages === null || previousChatMessages === void 0 ? void 0 : previousChatMessages.length) {\n                const prePairs = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_5__.createMessagePairs)(previousChatMessages);\n                setPreviousConversationPairs({\n                    "ChatList.useEffect": (prevPairs)=>{\n                        if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_6___default()(prevPairs, prePairs)) {\n                            return prePairs;\n                        }\n                        return prevPairs;\n                    }\n                }["ChatList.useEffect"]);\n            }\n            if (!(activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread = activeThread.thread) === null || _activeThread_thread === void 0 ? void 0 : _activeThread_thread.messages) && previousConversationPairs.length > 0) {\n                setPreviousConversationPairs([]);\n            }\n        }\n    }["ChatList.useEffect"], [\n        previousChatMessages,\n        activeThread === null || activeThread === void 0 ? void 0 : activeThread.thread\n    ]);\n    if ((chatMessages === null || chatMessages === void 0 ? void 0 : chatMessages.length) === 0) return null;\n    const currentMessages = {\n        userMessages: pairs.map((pair)=>pair.userMessage),\n        assistantMessages: pairs.flatMap((pair)=>[\n                pair.chatGptMessage\n            ])\n    };\n    const previousMessages = {\n        userMessages: previousConversationPairs.map((pair)=>pair.userMessage),\n        assistantMessages: previousConversationPairs.flatMap((pair)=>[\n                pair.chatGptMessage\n            ])\n    };\n    const messagesData = {\n        current: currentMessages,\n        previous: previousMessages\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n        ref: effectiveContainerRef,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_5__.cn)(\'relative max-w-3xl px-2.5 mx-auto\', className, {\n            \'flex flex-col gap-3\': isThread\n        }),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n            ref: effectiveThreadRef,\n            className: "min-h-full",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MessagePairs, {\n                messagesData: messagesData,\n                isThread: isThread,\n                chatTitleClass: chatTitleClass,\n                chatArrowClass: chatArrowClass,\n                chatContentClass: chatContentClass,\n                sendMessageFn: sendMessageFn,\n                userAttachments: userAttachments\n            }, void 0, false, {\n                fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/chat/chat-list/index.tsx",\n                lineNumber: 158,\n                columnNumber: 5\n            }, this)\n        }, void 0, false, {\n            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/chat/chat-list/index.tsx",\n            lineNumber: 157,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/chat/chat-list/index.tsx",\n        lineNumber: 151,\n        columnNumber: 3\n    }, this);\n}\n_s(ChatList, "bNave14ihS2xmjR2ORv6BgfIMik=", false, function() {\n    return [\n        _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_4__.useThread,\n        _lib_hooks_use_chat_attachments__WEBPACK_IMPORTED_MODULE_2__.useFileAttachments,\n        _lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_3__.useMBScroll\n    ];\n});\n_c1 = ChatList;\nvar _c, _c1;\n$RefreshReg$(_c, "MessagePairs");\n$RefreshReg$(_c1, "ChatList");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvcm91dGVzL2NoYXQvY2hhdC1saXN0L2luZGV4LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUdnRztBQUl2RDtBQUNjO0FBQ0w7QUFFRTtBQUdwQjtBQUVFO0FBQ2M7QUFFaEQsTUFBTVcsZUFBZUosd0RBQU9BLENBQzNCLElBQ0Msc1NBQTBELENBQUNLLElBQUksQ0FDOUQsQ0FBQ0MsTUFBUUEsSUFBSUYsWUFBWTs7Ozs7O0lBRzFCRyxLQUFLO0lBQ0xDLFNBQVMsa0JBQU0sOERBQUNmLDBHQUEwQkE7Ozs7OztLQVB0Q1c7QUEyQkMsU0FBU0ssU0FBUyxLQVVkO1FBVmMsRUFDeEJDLFNBQVMsRUFDVEMsUUFBUSxFQUNSQyxXQUFXLElBQUksRUFDZkMsb0JBQW9CLEtBQUssRUFDekJDLGdCQUFnQixFQUNoQkMsY0FBYyxFQUNkQyxjQUFjLEVBQ2RDLGNBQWNDLG9CQUFvQixFQUNsQ0MsYUFBYSxFQUNILEdBVmM7UUFpQ0tDOztJQXRCN0IsTUFBTSxFQUFFQyxhQUFhLEVBQUVELFlBQVksRUFBRSxHQUFHeEIsZ0VBQVNBO0lBQ2pELE1BQU0sQ0FDTCxFQUNDMEIsVUFBVSxFQUFFQyxlQUFlLEVBQUUsRUFDN0IsQ0FDRCxHQUFHN0IsbUZBQWtCQTtJQUN0QixNQUFNLENBQUM4QixPQUFPQyxTQUFTLEdBQUd4QixxREFBYyxDQUFnQixFQUFFO0lBQzFELE1BQU0sQ0FBQzBCLDJCQUEyQkMsNkJBQTZCLEdBQzlEM0IscURBQWMsQ0FBZ0IsRUFBRTtJQUNqQyxNQUFNNEIsY0FBYzFCLDZDQUFNQSxDQUFpQjtJQUMzQyxNQUFNMkIsc0JBQXNCM0IsNkNBQU1BLENBQWlCO0lBRW5ELDBFQUEwRTtJQUMxRSxNQUFNNEIsd0JBQXdCYix3QkFBd0JXO0lBQ3RELE1BQU1HLHFCQUFxQkY7SUFFM0Isa0ZBQWtGO0lBQ2xGLHVGQUF1RjtJQUN2RixNQUFNRyxlQUFldEIsYUFBWVMseUJBQUFBLG1DQUFB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L21hc3RlcmJvdHMuYWkvY29tcG9uZW50cy9yb3V0ZXMvY2hhdC9jaGF0LWxpc3QvaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgdHlwZSB7IE1lc3NhZ2VQYWlyc0RhdGEgfSBmcm9tICdAL2NvbXBvbmVudHMvcm91dGVzL2NoYXQvY2hhdC1saXN0L21lc3NhZ2UtcGFpcnMnXG5pbXBvcnQgeyBUaHJlYWRQb3B1cENvbnRlbnRTa2VsZXRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy9zaGFyZWQvc2tlbGV0b25zL3RocmVhZC1wb3B1cC1za2VsZXRvbidcbmltcG9ydCB7XG5cdHR5cGUgRmlsZUF0dGFjaG1lbnQsXG5cdHVzZUZpbGVBdHRhY2htZW50cyxcbn0gZnJvbSAnQC9saWIvaG9va3MvdXNlLWNoYXQtYXR0YWNobWVudHMnXG5pbXBvcnQgeyB1c2VNQlNjcm9sbCB9IGZyb20gJ0AvbGliL2hvb2tzL3VzZS1tYi1zY3JvbGwnXG5pbXBvcnQgeyB1c2VUaHJlYWQgfSBmcm9tICdAL2xpYi9ob29rcy91c2UtdGhyZWFkJ1xuaW1wb3J0IHR5cGUgeyBNZXNzYWdlUGFpciB9IGZyb20gJ0AvbGliL3RocmVhZHMnXG5pbXBvcnQgeyBjbiwgY3JlYXRlTWVzc2FnZVBhaXJzIH0gZnJvbSAnQC9saWIvdXRpbHMnXG5pbXBvcnQgdHlwZSB7IFNlbmRNZXNzYWdlRnJvbVJlc3BvbnNlTWVzc2FnZURhdGEgfSBmcm9tICdAL3R5cGVzL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBNZXNzYWdlIH0gZnJvbSAnYWknXG5pbXBvcnQgeyBpc0VxdWFsIH0gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHR5cGUgeyBDaGF0Ym90IH0gZnJvbSAnbWItZ2VucWwnXG5pbXBvcnQgZHluYW1pYyBmcm9tICduZXh0L2R5bmFtaWMnXG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCdcblxuY29uc3QgTWVzc2FnZVBhaXJzID0gZHluYW1pYyhcblx0KCkgPT5cblx0XHRpbXBvcnQoJ0AvY29tcG9uZW50cy9yb3V0ZXMvY2hhdC9jaGF0LWxpc3QvbWVzc2FnZS1wYWlycycpLnRoZW4oXG5cdFx0XHQobW9kKSA9PiBtb2QuTWVzc2FnZVBhaXJzLFxuXHRcdCksXG5cdHtcblx0XHRzc3I6IGZhbHNlLFxuXHRcdGxvYWRpbmc6ICgpID0+IDxUaHJlYWRQb3B1cENvbnRlbnRTa2VsZXRvbiAvPixcblx0fSxcbilcblxuZXhwb3J0IGludGVyZmFjZSBDaGF0TGlzdCB7XG5cdG1lc3NhZ2VzPzogTWVzc2FnZVtdXG5cdGNoYXRib3Q/OiBDaGF0Ym90XG5cdGlzVGhyZWFkPzogYm9vbGVhblxuXHRjbGFzc05hbWU/OiBzdHJpbmdcblx0Y2hhdENvbnRlbnRDbGFzcz86IHN0cmluZ1xuXHRjaGF0VGl0bGVDbGFzcz86IHN0cmluZ1xuXHRjaGF0QXJyb3dDbGFzcz86IHN0cmluZ1xuXHRjb250YWluZXJSZWY/OiBSZWFjdC5SZWZPYmplY3Q8SFRNTERpdkVsZW1lbnQgfCBudWxsPlxuXHRpc0xvYWRpbmdNZXNzYWdlcz86IGJvb2xlYW5cblx0c2VuZE1lc3NhZ2VGbj86IChcblx0XHRtZXNzYWdlRGF0YTogU2VuZE1lc3NhZ2VGcm9tUmVzcG9uc2VNZXNzYWdlRGF0YSxcblx0XHRjYWxsYmFjaz86ICgpID0+IHZvaWQsXG5cdCkgPT4gdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gQ2hhdExpc3Qoe1xuXHRjbGFzc05hbWUsXG5cdG1lc3NhZ2VzLFxuXHRpc1RocmVhZCA9IHRydWUsXG5cdGlzTG9hZGluZ01lc3NhZ2VzID0gZmFsc2UsXG5cdGNoYXRDb250ZW50Q2xhc3MsXG5cdGNoYXRUaXRsZUNsYXNzLFxuXHRjaGF0QXJyb3dDbGFzcyxcblx0Y29udGFpbmVyUmVmOiBleHRlcm5hbENvbnRhaW5lclJlZixcblx0c2VuZE1lc3NhZ2VGbixcbn06IENoYXRMaXN0KSB7XG5cdGNvbnN0IHsgaXNOZXdSZXNwb25zZSwgYWN0aXZlVGhyZWFkIH0gPSB1c2VUaHJlYWQoKVxuXHRjb25zdCBbXG5cdFx0e1xuXHRcdFx0dXNlckRhdGE6IHsgdXNlckF0dGFjaG1lbnRzIH0sXG5cdFx0fSxcblx0XSA9IHVzZUZpbGVBdHRhY2htZW50cygpXG5cdGNvbnN0IFtwYWlycywgc2V0UGFpcnNdID0gUmVhY3QudXNlU3RhdGU8TWVzc2FnZVBhaXJbXT4oW10pXG5cdGNvbnN0IFtwcmV2aW91c0NvbnZlcnNhdGlvblBhaXJzLCBzZXRQcmV2aW91c0NvbnZlcnNhdGlvblBhaXJzXSA9XG5cdFx0UmVhY3QudXNlU3RhdGU8TWVzc2FnZVBhaXJbXT4oW10pXG5cdGNvbnN0IGNoYXRMaXN0UmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKVxuXHRjb25zdCBtZXNzYWdlQ29udGFpbmVyUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKVxuXG5cdC8vPyBVc2VzIHRoZSBleHRlcm5hbCByZWYgaWYgcHJvdmlkZWQsIG90aGVyd2lzZSBpdCB1c2VzIG91ciBpbnRlcm5hbCByZWZzXG5cdGNvbnN0IGVmZmVjdGl2ZUNvbnRhaW5lclJlZiA9IGV4dGVybmFsQ29udGFpbmVyUmVmIHx8IGNoYXRMaXN0UmVmXG5cdGNvbnN0IGVmZmVjdGl2ZVRocmVhZFJlZiA9IG1lc3NhZ2VDb250YWluZXJSZWZcblxuXHQvLyAhIFRlbXBvcmFyeSBmaXggZm9yIHRoZSBjaGF0IG1lc3NhZ2VzLi4uIE11c3QgYmUgcmVsYXRlZCB3aXRoIHRoZSB0aHJlYWQgdGl0bGU6XG5cdC8vID8gUmVsYXRlZCBJc3N1ZTogVGhlIGxhc3QgcXVlc3Rpb24gc2hvd3MgYXMgVGhyZWFkIFRpdGxlIHdoZW4gaXQgc2hvdWxkIGJlIHRoZSBmaXJzdFxuXHRjb25zdCBjaGF0TWVzc2FnZXMgPSBtZXNzYWdlcyB8fCBhY3RpdmVUaHJlYWQ/Lm1lc3NhZ2VzIHx8IFtdXG5cdC8vIC5zb3J0KFxuXHQvLyBcdChhLCBiKSA9PiBuZXcgRGF0ZShhLmNyZWF0ZWRBdCkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5jcmVhdGVkQXQpLmdldFRpbWUoKSxcblx0Ly8gKVxuXHRjb25zdCBwcmV2aW91c0NoYXRNZXNzYWdlcyA9IGFjdGl2ZVRocmVhZD8udGhyZWFkPy5tZXNzYWdlcyB8fCBbXVxuXHQvLyAuc29ydChcblx0Ly8gXHQoYSwgYikgPT4gbmV3IERhdGUoYS5jcmVhdGVkQXQpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGIuY3JlYXRlZEF0KS5nZXRUaW1lKCksXG5cdC8vIClcblxuXHRjb25zdCB7IGlzTmVhckJvdHRvbSB9ID0gdXNlTUJTY3JvbGwoe1xuXHRcdGNvbnRhaW5lclJlZjogZWZmZWN0aXZlQ29udGFpbmVyUmVmLFxuXHRcdHRocmVhZFJlZjogZWZmZWN0aXZlVGhyZWFkUmVmLFxuXHRcdGlzTmV3Q29udGVudDogaXNOZXdSZXNwb25zZSxcblx0XHRoYXNNb3JlOiBmYWxzZSxcblx0XHRpc0xhc3Q6IHRydWUsXG5cdFx0bG9hZGluZzogaXNMb2FkaW5nTWVzc2FnZXMsXG5cdFx0bG9hZE1vcmU6ICgpID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKCdsb2FkaW5nIG1vcmUhJylcblx0XHR9LFxuXHR9KVxuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0aWYgKGNoYXRNZXNzYWdlcz8ubGVuZ3RoKSB7XG5cdFx0XHRjb25zdCBwcmVQYWlyczogTWVzc2FnZVBhaXJbXSA9IGNyZWF0ZU1lc3NhZ2VQYWlycyhcblx0XHRcdFx0Y2hhdE1lc3NhZ2VzLFxuXHRcdFx0KSBhcyBNZXNzYWdlUGFpcltdXG5cdFx0XHRzZXRQYWlycygocHJldlBhaXJzKSA9PiB7XG5cdFx0XHRcdGlmICghaXNFcXVhbChwcmV2UGFpcnMsIHByZVBhaXJzKSkge1xuXHRcdFx0XHRcdHJldHVybiBwcmVQYWlyc1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBwcmV2UGFpcnNcblx0XHRcdH0pXG5cdFx0fVxuXHR9LCBbY2hhdE1lc3NhZ2VzXSlcblxuXHQvLyBiaW9tZS1pZ25vcmUgbGludC9jb3JyZWN0bmVzcy91c2VFeGhhdXN0aXZlRGVwZW5kZW5jaWVzOiA8ZXhwbGFuYXRpb24+XG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0aWYgKHByZXZpb3VzQ2hhdE1lc3NhZ2VzPy5sZW5ndGgpIHtcblx0XHRcdGNvbnN0IHByZVBhaXJzOiBNZXNzYWdlUGFpcltdID0gY3JlYXRlTWVzc2FnZVBhaXJzKFxuXHRcdFx0XHRwcmV2aW91c0NoYXRNZXNzYWdlcyxcblx0XHRcdCkgYXMgTWVzc2FnZVBhaXJbXVxuXHRcdFx0c2V0UHJldmlvdXNDb252ZXJzYXRpb25QYWlycygocHJldlBhaXJzKSA9PiB7XG5cdFx0XHRcdGlmICghaXNFcXVhbChwcmV2UGFpcnMsIHByZVBhaXJzKSkge1xuXHRcdFx0XHRcdHJldHVybiBwcmVQYWlyc1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBwcmV2UGFpcnNcblx0XHRcdH0pXG5cdFx0fVxuXHRcdGlmIChcblx0XHRcdCFhY3RpdmVUaHJlYWQ/LnRocmVhZD8ubWVzc2FnZXMgJiZcblx0XHRcdHByZXZpb3VzQ29udmVyc2F0aW9uUGFpcnMubGVuZ3RoID4gMFxuXHRcdCkge1xuXHRcdFx0c2V0UHJldmlvdXNDb252ZXJzYXRpb25QYWlycyhbXSlcblx0XHR9XG5cdH0sIFtwcmV2aW91c0NoYXRNZXNzYWdlcywgYWN0aXZlVGhyZWFkPy50aHJlYWRdKVxuXG5cdGlmIChjaGF0TWVzc2FnZXM/Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGxcblxuXHRjb25zdCBjdXJyZW50TWVzc2FnZXM6IE1lc3NhZ2VQYWlyc0RhdGFbJ2N1cnJlbnQnXSA9IHtcblx0XHR1c2VyTWVzc2FnZXM6IHBhaXJzLm1hcCgocGFpcikgPT4gcGFpci51c2VyTWVzc2FnZSksXG5cdFx0YXNzaXN0YW50TWVzc2FnZXM6IHBhaXJzLmZsYXRNYXAoKHBhaXIpID0+IFtwYWlyLmNoYXRHcHRNZXNzYWdlXSksXG5cdH1cblx0Y29uc3QgcHJldmlvdXNNZXNzYWdlczogTWVzc2FnZVBhaXJzRGF0YVsncHJldmlvdXMnXSA9IHtcblx0XHR1c2VyTWVzc2FnZXM6IHByZXZpb3VzQ29udmVyc2F0aW9uUGFpcnMubWFwKChwYWlyKSA9PiBwYWlyLnVzZXJNZXNzYWdlKSxcblx0XHRhc3Npc3RhbnRNZXNzYWdlczogcHJldmlvdXNDb252ZXJzYXRpb25QYWlycy5mbGF0TWFwKChwYWlyKSA9PiBbXG5cdFx0XHRwYWlyLmNoYXRHcHRNZXNzYWdlLFxuXHRcdF0pLFxuXHR9XG5cblx0Y29uc3QgbWVzc2FnZXNEYXRhOiBNZXNzYWdlUGFpcnNEYXRhID0ge1xuXHRcdGN1cnJlbnQ6IGN1cnJlbnRNZXNzYWdlcyxcblx0XHRwcmV2aW91czogcHJldmlvdXNNZXNzYWdlcyxcblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PGRpdlxuXHRcdFx0cmVmPXtlZmZlY3RpdmVDb250YWluZXJSZWZ9XG5cdFx0XHRjbGFzc05hbWU9e2NuKCdyZWxhdGl2ZSBtYXgtdy0zeGwgcHgtMi41IG14LWF1dG8nLCBjbGFzc05hbWUsIHtcblx0XHRcdFx0J2ZsZXggZmxleC1jb2wgZ2FwLTMnOiBpc1RocmVhZCxcblx0XHRcdH0pfVxuXHRcdD5cblx0XHRcdDxkaXYgcmVmPXtlZmZlY3RpdmVUaHJlYWRSZWZ9IGNsYXNzTmFtZT1cIm1pbi1oLWZ1bGxcIj5cblx0XHRcdFx0PE1lc3NhZ2VQYWlyc1xuXHRcdFx0XHRcdG1lc3NhZ2VzRGF0YT17bWVzc2FnZXNEYXRhfVxuXHRcdFx0XHRcdGlzVGhyZWFkPXtpc1RocmVhZH1cblx0XHRcdFx0XHRjaGF0VGl0bGVDbGFzcz17Y2hhdFRpdGxlQ2xhc3N9XG5cdFx0XHRcdFx0Y2hhdEFycm93Q2xhc3M9e2NoYXRBcnJvd0NsYXNzfVxuXHRcdFx0XHRcdGNoYXRDb250ZW50Q2xhc3M9e2NoYXRDb250ZW50Q2xhc3N9XG5cdFx0XHRcdFx0c2VuZE1lc3NhZ2VGbj17c2VuZE1lc3NhZ2VGbn1cblx0XHRcdFx0XHR1c2VyQXR0YWNobWVudHM9e3VzZXJBdHRhY2htZW50cyBhcyBGaWxlQXR0YWNobWVudFtdIHwgdW5kZWZpbmVkfVxuXHRcdFx0XHQvPlxuXHRcdFx0PC9kaXY+XG5cdFx0PC9kaXY+XG5cdClcbn1cbiJdLCJuYW1lcyI6WyJUaHJlYWRQb3B1cENvbnRlbnRTa2VsZXRvbiIsInVzZUZpbGVBdHRhY2htZW50cyIsInVzZU1CU2Nyb2xsIiwidXNlVGhyZWFkIiwiY24iLCJjcmVhdGVNZXNzYWdlUGFpcnMiLCJpc0VxdWFsIiwiZHluYW1pYyIsIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlUmVmIiwiTWVzc2FnZVBhaXJzIiwidGhlbiIsIm1vZCIsInNzciIsImxvYWRpbmciLCJDaGF0TGlzdCIsImNsYXNzTmFtZSIsIm1lc3NhZ2VzIiwiaXNUaHJlYWQiLCJpc0xvYWRpbmdNZXNzYWdlcyIsImNoYXRDb250ZW50Q2xhc3MiLCJjaGF0VGl0bGVDbGFzcyIsImNoYXRBcnJvd0NsYXNzIiwiY29udGFpbmVyUmVmIiwiZXh0ZXJuYWxDb250YWluZXJSZWYiLCJzZW5kTWVzc2FnZUZuIiwiYWN0aXZlVGhyZWFkIiwiaXNOZXdSZXNwb25zZSIsInVzZXJEYXRhIiwidXNlckF0dGFjaG1lbnRzIiwicGFpcnMiLCJzZXRQYWlycyIsInVzZVN0YXRlIiwicHJldmlvdXNDb252ZXJzYXRpb25QYWlycyIsInNldFByZXZpb3VzQ29udmVyc2F0aW9uUGFpcnMiLCJjaGF0TGlzdFJlZiIsIm1lc3NhZ2VDb250YWluZXJSZWYiLCJlZmZlY3RpdmVDb250YWluZXJSZWYiLCJlZmZlY3RpdmVUaHJlYWRSZWYiLCJjaGF0TWVzc2FnZXMiLCJwcmV2aW91c0NoYXRNZXNzYWdlcyIsInRocmVhZCIsImlzTmVhckJvdHRvbSIsInRocmVhZFJlZiIsImlzTmV3Q29udGVudCIsImhhc01vcmUiLCJpc0xhc3QiLCJsb2FkTW9yZSIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJwcmVQYWlycyIsInByZXZQYWlycyIsImN1cnJlbnRNZXNzYWdlcyIsInVzZXJNZXNzYWdlcyIsIm1hcCIsInBhaXIiLCJ1c2VyTWVzc2FnZSIsImFzc2lzdGFudE1lc3NhZ2VzIiwiZmxhdE1hcCIsImNoYXRHcHRNZXNzYWdlIiwicHJldmlvdXNNZXNzYWdlcyIsIm1lc3NhZ2VzRGF0YSIsImN1cnJlbnQiLCJwcmV2aW91cyIsImRpdiIsInJlZiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/routes/chat/chat-list/index.tsx\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./components/routes/thread/thread-popup.tsx":
      /*!***************************************************!*\
  !*** ./components/routes/thread/thread-popup.tsx ***!
  \***************************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThreadPopup: () => (/* binding */ ThreadPopup)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");\n/* harmony import */ var _components_routes_chat_chat_list__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/routes/chat/chat-list */ "(app-pages-browser)/./components/routes/chat/chat-list/index.tsx");\n/* harmony import */ var _components_shared_external_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/shared/external-link */ "(app-pages-browser)/./components/shared/external-link.tsx");\n/* harmony import */ var _components_shared_skeletons_chat_panel_skeleton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/shared/skeletons/chat-panel-skeleton */ "(app-pages-browser)/./components/shared/skeletons/chat-panel-skeleton.tsx");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/button */ "(app-pages-browser)/./components/ui/button.tsx");\n/* harmony import */ var _components_ui_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/icons */ "(app-pages-browser)/./components/ui/icons.tsx");\n/* harmony import */ var _components_ui_skeleton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/skeleton */ "(app-pages-browser)/./components/ui/skeleton.tsx");\n/* harmony import */ var _lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/helpers/ai-helpers */ "(app-pages-browser)/./lib/helpers/ai-helpers.ts");\n/* harmony import */ var _lib_hooks_use_mb_chat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/hooks/use-mb-chat */ "(app-pages-browser)/./lib/hooks/use-mb-chat.tsx");\n/* harmony import */ var _lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/hooks/use-mb-scroll */ "(app-pages-browser)/./lib/hooks/use-mb-scroll.tsx");\n/* harmony import */ var _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/lib/hooks/use-sidebar */ "(app-pages-browser)/./lib/hooks/use-sidebar.tsx");\n/* harmony import */ var _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/lib/hooks/use-thread */ "(app-pages-browser)/./lib/hooks/use-thread.tsx");\n/* harmony import */ var _lib_url__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/lib/url */ "(app-pages-browser)/./lib/url.ts");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/lib/utils */ "(app-pages-browser)/./lib/utils.ts");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dynamic */ "(app-pages-browser)/../../node_modules/next/dist/api/app-dynamic.js");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/navigation */ "(app-pages-browser)/../../node_modules/next/dist/api/navigation.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_16__);\n/* __next_internal_client_entry_do_not_use__ ThreadPopup auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Chat = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_14__["default"])(()=>__webpack_require__.e(/*! import() */ "_app-pages-browser_components_routes_chat_chat_tsx").then(__webpack_require__.bind(__webpack_require__, /*! @/components/routes/chat/chat */ "(app-pages-browser)/./components/routes/chat/chat.tsx")).then((mod)=>mod.Chat), {\n    loadableGenerated: {\n        modules: [\n            "components/routes/thread/thread-popup.tsx -> " + "@/components/routes/chat/chat"\n        ]\n    },\n    ssr: false,\n    loading: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_skeletons_chat_panel_skeleton__WEBPACK_IMPORTED_MODULE_3__.ChatPanelSkeleton, {\n            className: "!pl-0 rounded-b-[8px] overflow-hidden !absolute"\n        }, void 0, false, {\n            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n            lineNumber: 28,\n            columnNumber: 4\n        }, undefined)\n});\n_c = Chat;\nfunction ThreadPopup(param) {\n    let { className } = param;\n    var _activeThread_chatbot_categories__category, _activeThread_chatbot_categories_, _activeThread_chatbot_categories, _activeThread_chatbot;\n    _s();\n    const { isOpenPopup, activeThread, isNewResponse } = (0,_lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_11__.useThread)();\n    const [{ allMessages, isLoading }, { sendMessageFromResponse }] = (0,_lib_hooks_use_mb_chat__WEBPACK_IMPORTED_MODULE_8__.useMBChat)();\n    const popupContentRef = (0,react__WEBPACK_IMPORTED_MODULE_16__.useRef)(null);\n    const threadRef = (0,react__WEBPACK_IMPORTED_MODULE_16__.useRef)(null);\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_15__.usePathname)();\n    const { isNearBottom, smoothScrollToBottom } = (0,_lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_9__.useMBScroll)({\n        containerRef: popupContentRef,\n        threadRef,\n        isNewContent: isNewResponse,\n        hasMore: false,\n        isLast: true,\n        loading: isLoading,\n        loadMore: {\n            "ThreadPopup.useMBScroll": ()=>{}\n        }["ThreadPopup.useMBScroll"]\n    });\n    const scrollToBottom = ()=>{\n        if (popupContentRef.current) {\n            smoothScrollToBottom();\n        }\n    };\n    const routeType = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.getRouteType)(pathname);\n    const isBrowseView = routeType === \'public\' || routeType === \'profile\' || routeType === \'bot\' && (activeThread === null || activeThread === void 0 ? void 0 : activeThread.threadId);\n    const isBotView = routeType === \'bot\';\n    const threadCategory = activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot_categories = activeThread.chatbot.categories) === null || _activeThread_chatbot_categories === void 0 ? void 0 : (_activeThread_chatbot_categories_ = _activeThread_chatbot_categories[0]) === null || _activeThread_chatbot_categories_ === void 0 ? void 0 : (_activeThread_chatbot_categories__category = _activeThread_chatbot_categories_.category) === null || _activeThread_chatbot_categories__category === void 0 ? void 0 : _activeThread_chatbot_categories__category.name;\n    const chatbotName = activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot = activeThread.chatbot) === null || _activeThread_chatbot === void 0 ? void 0 : _activeThread_chatbot.name;\n    const canonicalDomain = (0,_lib_url__WEBPACK_IMPORTED_MODULE_12__.getCanonicalDomain)(chatbotName || \'prompt\');\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.cn)(\'size-full bg-background/80 dark:bg-background/80\', isBotView ? \'\' : \'lg:max-w-[calc(100%-250px)] xl:max-w-[calc(100%-300px)]\', \'flex justify-center items-center fixed top-8 md:top-10\', \'h-full max-h-[calc(100%-8px)] backdrop-blur-sm ease-in-out duration-500 z-40\', \'transition-all\', isOpenPopup ? \'animate-fade-in\' : \'animate-fade-out\', className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n            className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.cn)(\'flex flex-col z-50 rounded-lg duration-500 ease-in-out fixed\', \'h-full max-h-[90%] max-w-[1032px] w-[95%]\', \'dark:border-mirage border-iron border bg-background dark:bg-background\', \'transition-opacity\'),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThreadPopUpCardHeader, {\n                    messages: allMessages,\n                    isBrowseView: isBrowseView\n                }, void 0, false, {\n                    fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                    lineNumber: 89,\n                    columnNumber: 5\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n                    ref: popupContentRef,\n                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.cn)(\'flex flex-col dark:bg-[#18181b] bg-white grow rounded-b-[8px] scrollbar h-full\', isBrowseView ? \'pb-2 md:pb-4\' : \'pb-[120px] md:pb-[180px]\', isBrowseView ? \'\' : \'max-h-[calc(100%-240px)] md:max-h-[calc(100%-220px)]\', className),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n                        ref: threadRef,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_routes_chat_chat_list__WEBPACK_IMPORTED_MODULE_1__.ChatList, {\n                                isThread: false,\n                                messages: allMessages,\n                                isLoadingMessages: isLoading,\n                                sendMessageFn: (messageData, callback)=>{\n                                    scrollToBottom();\n                                    sendMessageFromResponse(messageData, callback);\n                                },\n                                chatContentClass: "!border-x-gray-300 md:px-[16px] !mx-0 max-h-[none] dark:!border-x-mirage",\n                                className: "max-w-full md:px-[32px] !mx-0",\n                                chatArrowClass: "!right-0 !mr-0",\n                                chatTitleClass: "!px-2.5"\n                            }, void 0, false, {\n                                fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                                lineNumber: 106,\n                                columnNumber: 7\n                            }, this),\n                            isBrowseView ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n                                className: "pt-6 text-center border-t border-t-iron dark:border-t-mirage mt-12 mb-5 lg:mt-20",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_shared_external_link__WEBPACK_IMPORTED_MODULE_2__.ExternalLink, {\n                                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.buttonVariants)({\n                                        size: \'xl\',\n                                        radius: \'full\'\n                                    }), \'text-xl hover:no-underline\'),\n                                    href: "".concat(_lib_url__WEBPACK_IMPORTED_MODULE_12__.urlBuilders.chatbotThreadListUrl({\n                                        type: \'personal\',\n                                        category: threadCategory,\n                                        domain: canonicalDomain,\n                                        chatbot: chatbotName\n                                    }), "?continuousThreadId=").concat(activeThread === null || activeThread === void 0 ? void 0 : activeThread.threadId),\n                                    children: "Continue Thread"\n                                }, void 0, false, {\n                                    fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                                    lineNumber: 124,\n                                    columnNumber: 9\n                                }, this)\n                            }, void 0, false, {\n                                fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                                lineNumber: 123,\n                                columnNumber: 8\n                            }, this) : // Chat view\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Chat, {\n                                isPopup: true,\n                                chatPanelClassName: "!pl-0 rounded-b-[8px] overflow-hidden !absolute",\n                                scrollToBottomOfPopup: scrollToBottom,\n                                isAtBottom: isNearBottom\n                            }, void 0, false, {\n                                fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                                lineNumber: 141,\n                                columnNumber: 8\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                        lineNumber: 105,\n                        columnNumber: 6\n                    }, this)\n                }, void 0, false, {\n                    fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                    lineNumber: 94,\n                    columnNumber: 5\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n            lineNumber: 81,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n        lineNumber: 68,\n        columnNumber: 3\n    }, this);\n}\n_s(ThreadPopup, "DXZ2zIvWe919BPR86+k+Hts6Hno=", false, function() {\n    return [\n        _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_11__.useThread,\n        _lib_hooks_use_mb_chat__WEBPACK_IMPORTED_MODULE_8__.useMBChat,\n        next_navigation__WEBPACK_IMPORTED_MODULE_15__.usePathname,\n        _lib_hooks_use_mb_scroll__WEBPACK_IMPORTED_MODULE_9__.useMBScroll\n    ];\n});\n_c1 = ThreadPopup;\nfunction ThreadPopUpCardHeader(param) {\n    let { messages, isBrowseView } = param;\n    _s1();\n    const { isOpenPopup, activeThread, setIsOpenPopup, setActiveThread, setShouldRefreshThreads } = (0,_lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_11__.useThread)();\n    const { navigateTo } = (0,_lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_10__.useSidebar)();\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_15__.usePathname)();\n    const params = (0,next_navigation__WEBPACK_IMPORTED_MODULE_15__.useParams)();\n    const isPublic = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.getRouteType)(pathname) === \'public\';\n    const isProfile = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.getRouteType)(pathname) === \'profile\';\n    const isBot = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_13__.getRouteType)(pathname) === \'bot\';\n    const onClose = ()=>{\n        var _activeThread_chatbot, _activeThread_chatbot_categories__category, _activeThread_chatbot_categories_, _activeThread_chatbot_categories, _activeThread_chatbot1, _activeThread_chatbot2;\n        const canonicalDomain = (0,_lib_url__WEBPACK_IMPORTED_MODULE_12__.getCanonicalDomain)((activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot = activeThread.chatbot) === null || _activeThread_chatbot === void 0 ? void 0 : _activeThread_chatbot.name) || \'\');\n        setIsOpenPopup(!isOpenPopup);\n        setActiveThread(null);\n        if (isProfile) {\n            var _activeThread_chatbot3, _activeThread_chatbot_categories__category1, _activeThread_chatbot_categories_1, _activeThread_chatbot_categories1, _activeThread_chatbot4;\n            const slug = params.userSlug;\n            navigateTo({\n                urlType: \'profilesUrl\',\n                shallow: true,\n                navigationParams: {\n                    type: \'user\',\n                    domain: canonicalDomain,\n                    chatbot: (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot3 = activeThread.chatbot) === null || _activeThread_chatbot3 === void 0 ? void 0 : _activeThread_chatbot3.name) || \'\',\n                    usernameSlug: slug,\n                    category: (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot4 = activeThread.chatbot) === null || _activeThread_chatbot4 === void 0 ? void 0 : (_activeThread_chatbot_categories1 = _activeThread_chatbot4.categories) === null || _activeThread_chatbot_categories1 === void 0 ? void 0 : (_activeThread_chatbot_categories_1 = _activeThread_chatbot_categories1[0]) === null || _activeThread_chatbot_categories_1 === void 0 ? void 0 : (_activeThread_chatbot_categories__category1 = _activeThread_chatbot_categories_1.category) === null || _activeThread_chatbot_categories__category1 === void 0 ? void 0 : _activeThread_chatbot_categories__category1.name) || \'\'\n                }\n            });\n            setActiveThread(null);\n            setShouldRefreshThreads(true);\n            return;\n        }\n        if (isBot) {\n            var _activeThread_chatbot5;\n            navigateTo({\n                urlType: \'chatbotProfileUrl\',\n                shallow: true,\n                navigationParams: {\n                    domain: canonicalDomain,\n                    chatbot: (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot5 = activeThread.chatbot) === null || _activeThread_chatbot5 === void 0 ? void 0 : _activeThread_chatbot5.name) || \'\'\n                }\n            });\n            setActiveThread(null);\n            setShouldRefreshThreads(true);\n            return;\n        }\n        navigateTo({\n            urlType: \'chatbotThreadListUrl\',\n            shallow: true,\n            navigationParams: {\n                type: isPublic ? \'public\' : \'personal\',\n                category: (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot1 = activeThread.chatbot) === null || _activeThread_chatbot1 === void 0 ? void 0 : (_activeThread_chatbot_categories = _activeThread_chatbot1.categories) === null || _activeThread_chatbot_categories === void 0 ? void 0 : (_activeThread_chatbot_categories_ = _activeThread_chatbot_categories[0]) === null || _activeThread_chatbot_categories_ === void 0 ? void 0 : (_activeThread_chatbot_categories__category = _activeThread_chatbot_categories_.category) === null || _activeThread_chatbot_categories__category === void 0 ? void 0 : _activeThread_chatbot_categories__category.name) || \'\',\n                domain: canonicalDomain,\n                chatbot: (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_chatbot2 = activeThread.chatbot) === null || _activeThread_chatbot2 === void 0 ? void 0 : _activeThread_chatbot2.name) || \'\'\n            }\n        });\n        // ! Required to close the threads popup and show the thread list. Without this, the thread accordion will remain open.\n        // ? We have to signal the use-thread-panel component to re-fetch the threads list when the activeThread is closed.\n        setActiveThread(null);\n        setShouldRefreshThreads(true);\n    };\n    // Handle different message structures for browse and chat views\n    const threadTitle = (0,react__WEBPACK_IMPORTED_MODULE_16__.useMemo)({\n        "ThreadPopUpCardHeader.useMemo[threadTitle]": ()=>{\n            var _messages_, _messages_filter_, _activeThread_thread, _activeThread_thread_messages_, _activeThread_thread_messages_filter_, _activeThread_thread_messages, _activeThread_thread1, _activeThread_thread2;\n            const currentThreadTitle = isBrowseView ? (_messages_ = messages[0]) === null || _messages_ === void 0 ? void 0 : _messages_.content : (_messages_filter_ = messages.filter({\n                "ThreadPopUpCardHeader.useMemo[threadTitle]": (m)=>m.role === \'user\'\n            }["ThreadPopUpCardHeader.useMemo[threadTitle]"])[0]) === null || _messages_filter_ === void 0 ? void 0 : _messages_filter_.content;\n            const previousThreadTitle = (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread = activeThread.thread) === null || _activeThread_thread === void 0 ? void 0 : _activeThread_thread.messages) ? isBrowseView ? (_activeThread_thread_messages_ = activeThread.thread.messages[0]) === null || _activeThread_thread_messages_ === void 0 ? void 0 : _activeThread_thread_messages_.content : activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread1 = activeThread.thread) === null || _activeThread_thread1 === void 0 ? void 0 : (_activeThread_thread_messages = _activeThread_thread1.messages) === null || _activeThread_thread_messages === void 0 ? void 0 : (_activeThread_thread_messages_filter_ = _activeThread_thread_messages.filter({\n                "ThreadPopUpCardHeader.useMemo[threadTitle]": (m)=>m && m.role === \'user\'\n            }["ThreadPopUpCardHeader.useMemo[threadTitle]"])[0]) === null || _activeThread_thread_messages_filter_ === void 0 ? void 0 : _activeThread_thread_messages_filter_.content : \'\';\n            // ? Since we are checking if the activeThread has a parentThread (thread), we are OK\n            // ? to use check and destructure the way we did here.\n            const threadTitle = (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread2 = activeThread.thread) === null || _activeThread_thread2 === void 0 ? void 0 : _activeThread_thread2.messages) ? previousThreadTitle : currentThreadTitle;\n            try {\n                return (0,_lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_7__.cleanPrompt)(threadTitle);\n            } catch (e) {\n                // console.error(\'Error cleaning thread title:\', e)\n                return threadTitle;\n            }\n        }\n    }["ThreadPopUpCardHeader.useMemo[threadTitle]"], [\n        messages,\n        activeThread,\n        isBrowseView\n    ]);\n    const threadTitleChunks = threadTitle === null || threadTitle === void 0 ? void 0 : threadTitle.split(/\\s/g);\n    const threadTitleHeading = threadTitleChunks === null || threadTitleChunks === void 0 ? void 0 : threadTitleChunks.slice(0, 49).join(\' \');\n    const threadTitleSubHeading = threadTitleChunks === null || threadTitleChunks === void 0 ? void 0 : threadTitleChunks.slice(49).join(\' \');\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n        className: "relative rounded-t-[8px] px-2.5 md:px-[32px] py-[20px] dark:bg-[#1E293B] bg-[#E4E4E7]",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n            className: "flex items-center justify-between gap-6",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n                    className: "items-center block overflow-y-auto whitespace-pre-line max-h-20 md:max-h-28 scrollbar small-thumb",\n                    children: [\n                        threadTitle ? threadTitleChunks.length > 32 ? "".concat(threadTitleHeading) : threadTitle : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_skeleton__WEBPACK_IMPORTED_MODULE_6__.Skeleton, {\n                            className: "w-[280px] h-[20px]"\n                        }, void 0, false, {\n                            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                            lineNumber: 280,\n                            columnNumber: 7\n                        }, this),\n                        threadTitleSubHeading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("span", {\n                            className: "ml-2 overflow-hidden text-sm opacity-50",\n                            children: threadTitleSubHeading\n                        }, void 0, false, {\n                            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                            lineNumber: 283,\n                            columnNumber: 7\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                    lineNumber: 272,\n                    columnNumber: 5\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {\n                    className: "flex items-center gap-4",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                        type: "button",\n                        variant: "ghost",\n                        size: "icon",\n                        className: "ml-2",\n                        onClick: onClose,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_icons__WEBPACK_IMPORTED_MODULE_5__.IconClose, {}, void 0, false, {\n                            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                            lineNumber: 297,\n                            columnNumber: 7\n                        }, this)\n                    }, void 0, false, {\n                        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                        lineNumber: 290,\n                        columnNumber: 6\n                    }, this)\n                }, void 0, false, {\n                    fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n                    lineNumber: 289,\n                    columnNumber: 5\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n            lineNumber: 271,\n            columnNumber: 4\n        }, this)\n    }, void 0, false, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/routes/thread/thread-popup.tsx",\n        lineNumber: 270,\n        columnNumber: 3\n    }, this);\n}\n_s1(ThreadPopUpCardHeader, "hj4sE2/2yCHd5//azqn0bD7QKjU=", false, function() {\n    return [\n        _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_11__.useThread,\n        _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_10__.useSidebar,\n        next_navigation__WEBPACK_IMPORTED_MODULE_15__.usePathname,\n        next_navigation__WEBPACK_IMPORTED_MODULE_15__.useParams\n    ];\n});\n_c2 = ThreadPopUpCardHeader;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, "Chat");\n$RefreshReg$(_c1, "ThreadPopup");\n$RefreshReg$(_c2, "ThreadPopUpCardHeader");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/routes/thread/thread-popup.tsx\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./components/shared/external-link.tsx":
      /*!*********************************************!*\
  !*** ./components/shared/external-link.tsx ***!
  \*********************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExternalLink: () => (/* binding */ ExternalLink)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/button */ "(app-pages-browser)/./components/ui/button.tsx");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ "(app-pages-browser)/./lib/utils.ts");\n/* harmony import */ var _barrel_optimize_names_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=ExternalLink!=!lucide-react */ "(app-pages-browser)/../../node_modules/lucide-react/dist/esm/icons/external-link.js");\n\n\n\n\nfunction ExternalLink(param) {\n    let { href, className, children, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("a", {\n        href: href,\n        target: "_blank",\n        rel: "canonical noopener noreferrer",\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)((0,_components_ui_button__WEBPACK_IMPORTED_MODULE_1__.buttonVariants)({\n            variant: \'link\'\n        }), className),\n        ...props,\n        children: [\n            children,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ExternalLink_lucide_react__WEBPACK_IMPORTED_MODULE_3__["default"], {\n                size: 20,\n                className: "-mt-[1px]"\n            }, void 0, false, {\n                fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/shared/external-link.tsx",\n                lineNumber: 20,\n                columnNumber: 4\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/components/shared/external-link.tsx",\n        lineNumber: 12,\n        columnNumber: 3\n    }, this);\n}\n_c = ExternalLink;\nvar _c;\n$RefreshReg$(_c, "ExternalLink");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvc2hhcmVkL2V4dGVybmFsLWxpbmsudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1RDtBQUN2QjtBQUMrQjtBQUV4RCxTQUFTRSxhQUFhLEtBS0Q7UUFMQyxFQUM1QkUsSUFBSSxFQUNKQyxTQUFTLEVBQ1RDLFFBQVEsRUFDUixHQUFHQyxPQUN3QixHQUxDO0lBTTVCLHFCQUNDLDhEQUFDQztRQUNBSixNQUFNQTtRQUNOSyxRQUFPO1FBQ1BDLEtBQUk7UUFDSkwsV0FBV0osOENBQUVBLENBQUNELHFFQUFjQSxDQUFDO1lBQUVXLFNBQVM7UUFBTyxJQUFJTjtRQUNsRCxHQUFHRSxLQUFLOztZQUVSRDswQkFDRCw4REFBQ0gsd0ZBQWdCQTtnQkFBQ1MsTUFBTTtnQkFBSVAsV0FBVTs7Ozs7Ozs7Ozs7O0FBR3pDO0tBbEJnQkgiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL21hc3RlcmJvdHMvYXBwcy9tYXN0ZXJib3RzLmFpL2NvbXBvbmVudHMvc2hhcmVkL2V4dGVybmFsLWxpbmsudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1dHRvblZhcmlhbnRzIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbidcbmltcG9ydCB7IGNuIH0gZnJvbSAnQC9saWIvdXRpbHMnXG5pbXBvcnQgeyBFeHRlcm5hbExpbmsgYXMgRXh0ZXJuYWxMaW5rSWNvbiB9IGZyb20gJ2x1Y2lkZS1yZWFjdCdcblxuZXhwb3J0IGZ1bmN0aW9uIEV4dGVybmFsTGluayh7XG5cdGhyZWYsXG5cdGNsYXNzTmFtZSxcblx0Y2hpbGRyZW4sXG5cdC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczwnYSc+KSB7XG5cdHJldHVybiAoXG5cdFx0PGFcblx0XHRcdGhyZWY9e2hyZWZ9XG5cdFx0XHR0YXJnZXQ9XCJfYmxhbmtcIlxuXHRcdFx0cmVsPVwiY2Fub25pY2FsIG5vb3BlbmVyIG5vcmVmZXJyZXJcIlxuXHRcdFx0Y2xhc3NOYW1lPXtjbihidXR0b25WYXJpYW50cyh7IHZhcmlhbnQ6ICdsaW5rJyB9KSwgY2xhc3NOYW1lKX1cblx0XHRcdHsuLi5wcm9wc31cblx0XHQ+XG5cdFx0XHR7Y2hpbGRyZW59XG5cdFx0XHQ8RXh0ZXJuYWxMaW5rSWNvbiBzaXplPXsyMH0gY2xhc3NOYW1lPVwiLW10LVsxcHhdXCIgLz5cblx0XHQ8L2E+XG5cdClcbn1cbiJdLCJuYW1lcyI6WyJidXR0b25WYXJpYW50cyIsImNuIiwiRXh0ZXJuYWxMaW5rIiwiRXh0ZXJuYWxMaW5rSWNvbiIsImhyZWYiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsInByb3BzIiwiYSIsInRhcmdldCIsInJlbCIsInZhcmlhbnQiLCJzaXplIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/shared/external-link.tsx\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/actions.ts":
      /*!************************!*\
  !*** ./lib/actions.ts ***!
  \************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatSystemPrompts: () => (/* binding */ formatSystemPrompts),\n/* harmony export */   getHostnameAndProtocol: () => (/* binding */ getHostnameAndProtocol)\n/* harmony export */ });\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/../../node_modules/nanoid/index.browser.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/../../node_modules/next/dist/build/polyfills/process.js\");\n\nfunction formatSystemPrompts(prompts) {\n    return (prompts === null || prompts === void 0 ? void 0 : prompts.sort((a, b)=>a.prompt.type === 'prompt' ? -1 : 1).map((param)=>{\n        let { prompt } = param;\n        const contentTag = (content)=>{\n            const tag = prompt.type === 'instruction' ? 'instructions' : 'expertise';\n            return \"\\n<\".concat(tag, \">\\n\").concat(content, \"\\n</\").concat(tag, \">\\n\");\n        };\n        return {\n            id: \"expertise-\".concat((0,nanoid__WEBPACK_IMPORTED_MODULE_0__.nanoid)(10)),\n            role: 'system',\n            content: contentTag(prompt.content),\n            createdAt: new Date()\n        };\n    })) || [];\n}\nfunction getHostnameAndProtocol() {\n    const isDevelopment = \"development\" === 'development';\n    const protocol = isDevelopment ? 'http' : 'https';\n    const hostname = isDevelopment ? 'localhost:3000' : process.env.VERCEL_URL;\n    const url = new URL('/', \"\".concat(protocol, \"://\").concat(hostname));\n    return url.href;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hY3Rpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFK0I7QUFFeEIsU0FBU0Msb0JBQW9CQyxPQUFzQjtJQUN6RCxPQUNDQSxDQUFBQSxvQkFBQUEsOEJBQUFBLFFBQ0dDLElBQUksQ0FBQyxDQUFDQyxHQUFHQyxJQUFPRCxFQUFFRSxNQUFNLENBQUNDLElBQUksS0FBSyxXQUFXLENBQUMsSUFBSSxHQUNuREMsR0FBRyxDQUFDO1lBQUMsRUFBRUYsTUFBTSxFQUFFO1FBQ2YsTUFBTUcsYUFBYSxDQUFDQztZQUNuQixNQUFNQyxNQUNMTCxPQUFPQyxJQUFJLEtBQUssZ0JBQWdCLGlCQUFpQjtZQUNsRCxPQUFPLE1BRVZHLE9BRENDLEtBQUksT0FFSEEsT0FERkQsU0FBUSxRQUNGLE9BQUpDLEtBQUk7UUFFSjtRQUVBLE9BQU87WUFDTkMsSUFBSSxhQUF3QixPQUFYWiw4Q0FBTUEsQ0FBQztZQUN4QmEsTUFBTTtZQUNOSCxTQUFTRCxXQUFXSCxPQUFPSSxPQUFPO1lBQ2xDSSxXQUFXLElBQUlDO1FBQ2hCO0lBQ0QsT0FBTSxFQUFFO0FBRVg7QUFFTyxTQUFTQztJQUNmLE1BQU1DLGdCQUFnQkMsa0JBQXlCO0lBQy9DLE1BQU1DLFdBQVdGLGdCQUFnQixTQUFTO0lBQzFDLE1BQU1HLFdBQVdILGdCQUFnQixtQkFBbUJDLE9BQU9BLENBQUNHLEdBQUcsQ0FBQ0MsVUFBVTtJQUMxRSxNQUFNQyxNQUFNLElBQUlDLElBQUksS0FBSyxHQUFpQkosT0FBZEQsVUFBUyxPQUFjLE9BQVRDO0lBRTFDLE9BQU9HLElBQUlFLElBQUk7QUFDaEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL21hc3RlcmJvdHMvYXBwcy9tYXN0ZXJib3RzLmFpL2xpYi9hY3Rpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUHJvbXB0UHJvcHMgfSBmcm9tICdAL3R5cGVzL3R5cGVzJ1xuaW1wb3J0IHR5cGUgeyBNZXNzYWdlIH0gZnJvbSAnYWknXG5pbXBvcnQgeyBuYW5vaWQgfSBmcm9tICduYW5vaWQnXG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRTeXN0ZW1Qcm9tcHRzKHByb21wdHM6IFByb21wdFByb3BzW10pOiBNZXNzYWdlW10ge1xuXHRyZXR1cm4gKFxuXHRcdHByb21wdHNcblx0XHRcdD8uc29ydCgoYSwgYikgPT4gKGEucHJvbXB0LnR5cGUgPT09ICdwcm9tcHQnID8gLTEgOiAxKSlcblx0XHRcdC5tYXAoKHsgcHJvbXB0IH0pID0+IHtcblx0XHRcdFx0Y29uc3QgY29udGVudFRhZyA9IChjb250ZW50OiBzdHJpbmcpID0+IHtcblx0XHRcdFx0XHRjb25zdCB0YWcgPVxuXHRcdFx0XHRcdFx0cHJvbXB0LnR5cGUgPT09ICdpbnN0cnVjdGlvbicgPyAnaW5zdHJ1Y3Rpb25zJyA6ICdleHBlcnRpc2UnXG5cdFx0XHRcdFx0cmV0dXJuIGBcbjwke3RhZ30+XG4ke2NvbnRlbnR9XG48LyR7dGFnfT5cbmBcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0aWQ6IGBleHBlcnRpc2UtJHtuYW5vaWQoMTApfWAsXG5cdFx0XHRcdFx0cm9sZTogJ3N5c3RlbScsXG5cdFx0XHRcdFx0Y29udGVudDogY29udGVudFRhZyhwcm9tcHQuY29udGVudCksXG5cdFx0XHRcdFx0Y3JlYXRlZEF0OiBuZXcgRGF0ZSgpLFxuXHRcdFx0XHR9XG5cdFx0XHR9KSB8fCBbXVxuXHQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIb3N0bmFtZUFuZFByb3RvY29sKCkge1xuXHRjb25zdCBpc0RldmVsb3BtZW50ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcblx0Y29uc3QgcHJvdG9jb2wgPSBpc0RldmVsb3BtZW50ID8gJ2h0dHAnIDogJ2h0dHBzJ1xuXHRjb25zdCBob3N0bmFtZSA9IGlzRGV2ZWxvcG1lbnQgPyAnbG9jYWxob3N0OjMwMDAnIDogcHJvY2Vzcy5lbnYuVkVSQ0VMX1VSTFxuXHRjb25zdCB1cmwgPSBuZXcgVVJMKCcvJywgYCR7cHJvdG9jb2x9Oi8vJHtob3N0bmFtZX1gKVxuXG5cdHJldHVybiB1cmwuaHJlZlxufVxuIl0sIm5hbWVzIjpbIm5hbm9pZCIsImZvcm1hdFN5c3RlbVByb21wdHMiLCJwcm9tcHRzIiwic29ydCIsImEiLCJiIiwicHJvbXB0IiwidHlwZSIsIm1hcCIsImNvbnRlbnRUYWciLCJjb250ZW50IiwidGFnIiwiaWQiLCJyb2xlIiwiY3JlYXRlZEF0IiwiRGF0ZSIsImdldEhvc3RuYW1lQW5kUHJvdG9jb2wiLCJpc0RldmVsb3BtZW50IiwicHJvY2VzcyIsInByb3RvY29sIiwiaG9zdG5hbWUiLCJlbnYiLCJWRVJDRUxfVVJMIiwidXJsIiwiVVJMIiwiaHJlZiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/actions.ts\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/constants/bots-names.ts":
      /*!*************************************!*\
  !*** ./lib/constants/bots-names.ts ***!
  \*************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   botNames: () => (/* binding */ botNames)\n/* harmony export */ });\n/* harmony import */ var _services_hasura__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/services/hasura */ \"(app-pages-browser)/./services/hasura/index.ts\");\n\n// ? Review performance: This can fetch over and over every time the botNames is called.\n// ! Caching the value would be key for continuous usage.\n// this helps displaying camelCase names in ui\nconst botNames = (async ()=>{\n    const chatbots = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_0__.getAllChatbots)() // Adjust the limit as needed\n    ;\n    const bots = new Map();\n    for (const chatbot of chatbots){\n        bots.set(chatbot.name.toLowerCase(), chatbot.name);\n    }\n    return bots;\n})();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jb25zdGFudHMvYm90cy1uYW1lcy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUVsRCx3RkFBd0Y7QUFDeEYseURBQXlEO0FBQ3pELDhDQUE4QztBQUN2QyxNQUFNQyxXQUFXLENBQUM7SUFDeEIsTUFBTUMsV0FBVyxNQUFNRixnRUFBY0EsR0FBRyw2QkFBNkI7O0lBQ3JFLE1BQU1HLE9BQU8sSUFBSUM7SUFDakIsS0FBSyxNQUFNQyxXQUFXSCxTQUFVO1FBQy9CQyxLQUFLRyxHQUFHLENBQUNELFFBQVFFLElBQUksQ0FBQ0MsV0FBVyxJQUFJSCxRQUFRRSxJQUFJO0lBQ2xEO0lBQ0EsT0FBT0o7QUFDUixLQUFJIiwic291cmNlcyI6WyIvVXNlcnMvc2hlcmlmZi9EZXNrdG9wL2JpdGNhc2gtYXBwcy9tYXN0ZXJib3RzL2FwcHMvbWFzdGVyYm90cy5haS9saWIvY29uc3RhbnRzL2JvdHMtbmFtZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QWxsQ2hhdGJvdHMgfSBmcm9tICdAL3NlcnZpY2VzL2hhc3VyYSdcblxuLy8gPyBSZXZpZXcgcGVyZm9ybWFuY2U6IFRoaXMgY2FuIGZldGNoIG92ZXIgYW5kIG92ZXIgZXZlcnkgdGltZSB0aGUgYm90TmFtZXMgaXMgY2FsbGVkLlxuLy8gISBDYWNoaW5nIHRoZSB2YWx1ZSB3b3VsZCBiZSBrZXkgZm9yIGNvbnRpbnVvdXMgdXNhZ2UuXG4vLyB0aGlzIGhlbHBzIGRpc3BsYXlpbmcgY2FtZWxDYXNlIG5hbWVzIGluIHVpXG5leHBvcnQgY29uc3QgYm90TmFtZXMgPSAoYXN5bmMgKCkgPT4ge1xuXHRjb25zdCBjaGF0Ym90cyA9IGF3YWl0IGdldEFsbENoYXRib3RzKCkgLy8gQWRqdXN0IHRoZSBsaW1pdCBhcyBuZWVkZWRcblx0Y29uc3QgYm90cyA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KClcblx0Zm9yIChjb25zdCBjaGF0Ym90IG9mIGNoYXRib3RzKSB7XG5cdFx0Ym90cy5zZXQoY2hhdGJvdC5uYW1lLnRvTG93ZXJDYXNlKCksIGNoYXRib3QubmFtZSlcblx0fVxuXHRyZXR1cm4gYm90c1xufSkoKVxuIl0sIm5hbWVzIjpbImdldEFsbENoYXRib3RzIiwiYm90TmFtZXMiLCJjaGF0Ym90cyIsImJvdHMiLCJNYXAiLCJjaGF0Ym90Iiwic2V0IiwibmFtZSIsInRvTG93ZXJDYXNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/constants/bots-names.ts\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/constants/hasura.ts":
      /*!*********************************!*\
  !*** ./lib/constants/hasura.ts ***!
  \*********************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_HEIGHT: () => (/* binding */ MAX_HEIGHT),\n/* harmony export */   MAX_WIDTH: () => (/* binding */ MAX_WIDTH),\n/* harmony export */   PAGE_SIZE: () => (/* binding */ PAGE_SIZE),\n/* harmony export */   PAGE_SM_SIZE: () => (/* binding */ PAGE_SM_SIZE)\n/* harmony export */ });\n/**\n * Pagination settings for hasura.\n */ const PAGE_SIZE = 10;\nconst PAGE_SM_SIZE = 5;\n/**\n * Maximum width for images upload in hasura in pixels.\n */ const MAX_WIDTH = 1024;\n/**\n * Maximum height for images upload in hasura in pixels.\n */ const MAX_HEIGHT = 1024;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jb25zdGFudHMvaGFzdXJhLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLFlBQVksR0FBRTtBQUNwQixNQUFNQyxlQUFlLEVBQUM7QUFFN0I7O0NBRUMsR0FDTSxNQUFNQyxZQUFZLEtBQUk7QUFDN0I7O0NBRUMsR0FDTSxNQUFNQyxhQUFhLEtBQUkiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGVyaWZmL0Rlc2t0b3AvYml0Y2FzaC1hcHBzL21hc3RlcmJvdHMvYXBwcy9tYXN0ZXJib3RzLmFpL2xpYi9jb25zdGFudHMvaGFzdXJhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGFnaW5hdGlvbiBzZXR0aW5ncyBmb3IgaGFzdXJhLlxuICovXG5leHBvcnQgY29uc3QgUEFHRV9TSVpFID0gMTBcbmV4cG9ydCBjb25zdCBQQUdFX1NNX1NJWkUgPSA1XG5cbi8qKlxuICogTWF4aW11bSB3aWR0aCBmb3IgaW1hZ2VzIHVwbG9hZCBpbiBoYXN1cmEgaW4gcGl4ZWxzLlxuICovXG5leHBvcnQgY29uc3QgTUFYX1dJRFRIID0gMTAyNFxuLyoqXG4gKiBNYXhpbXVtIGhlaWdodCBmb3IgaW1hZ2VzIHVwbG9hZCBpbiBoYXN1cmEgaW4gcGl4ZWxzLlxuICovXG5leHBvcnQgY29uc3QgTUFYX0hFSUdIVCA9IDEwMjRcbiJdLCJuYW1lcyI6WyJQQUdFX1NJWkUiLCJQQUdFX1NNX1NJWkUiLCJNQVhfV0lEVEgiLCJNQVhfSEVJR0hUIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/constants/hasura.ts\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/helpers/ai-classification.ts":
      /*!******************************************!*\
  !*** ./lib/helpers/ai-classification.ts ***!
  \******************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aiExampleClassification: () => (/* binding */ aiExampleClassification),\n/* harmony export */   processUserMessage: () => (/* binding */ processUserMessage)\n/* harmony export */ });\n/* harmony import */ var _app_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/actions */ \"(app-pages-browser)/./app/actions/index.ts\");\n/* harmony import */ var _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/constants/prompts */ \"(app-pages-browser)/./lib/constants/prompts.ts\");\n/* harmony import */ var _services_hasura__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/hasura */ \"(app-pages-browser)/./services/hasura/index.ts\");\n\n\n\nasync function aiExampleClassification(param) {\n    let { chatMetadata, customSonner } = param;\n    const defaultMetadata = {\n        tagExamples: [],\n        categoryExamples: [],\n        domainExamples: []\n    };\n    const tagExamples = [];\n    const categoryExamples = [];\n    const domainExamples = [];\n    // * Getting the user labelling the thread (categories, sub-category, etc.)\n    try {\n        if (!chatMetadata || chatMetadata && (!(chatMetadata === null || chatMetadata === void 0 ? void 0 : chatMetadata.domainName) || !(chatMetadata === null || chatMetadata === void 0 ? void 0 : chatMetadata.tags) || !(chatMetadata === null || chatMetadata === void 0 ? void 0 : chatMetadata.categories.length))) {\n            return defaultMetadata;\n        }\n        var _ref;\n        const domainExampleResponse = (_ref = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_2__.fetchDomainExamples)(chatMetadata)) !== null && _ref !== void 0 ? _ref : [];\n        var _ref1;\n        const domainTags = (_ref1 = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_2__.fetchDomainTags)(chatMetadata)) !== null && _ref1 !== void 0 ? _ref1 : [];\n        // console.log('Domain examples --> ', domainExampleResponse)\n        // console.log('Domain tags --> ', domainTags)\n        if (!domainExampleResponse.length && !domainTags) {\n            customSonner({\n                type: 'error',\n                text: 'Error fetching domain examples or tags.'\n            });\n            return defaultMetadata;\n        }\n        // console.log('Domain tags length:', Object.keys(domainTags || {}).length)\n        // * NOTE: ****************************************************************************************\n        // the domainTags keys are tag ids, the values are an object with the name and frequency of the tag\n        // every example has a list of tags (tag ids); these match the domainTags object keys\n        // the chat metadata has a tags field as well; this is a list of tags (tag names)\n        // i need to go through the list of examples\n        // for each i need to get the list of tag ids and use teh domainTags object to get their names\n        // then i need to check if the name is in the chat metadata tags list\n        // i need to take a cumulative sum of 1-the frequency of the tag in the domainTags object\n        // i need to store this cumulative sum in the example object\n        // ************************************************************************************************\n        for (const example of domainExampleResponse){\n            let cumulativeSum = 0;\n            for (const tagId of example.tags){\n                try {\n                    var _domainTags_tagId;\n                    // @ts-ignore\n                    const tagName = (_domainTags_tagId = domainTags[tagId]) === null || _domainTags_tagId === void 0 ? void 0 : _domainTags_tagId.name;\n                    if (!chatMetadata.tags.length) {\n                        break;\n                    }\n                    if (chatMetadata.tags.includes(tagName)) {\n                        var _domainTags_tagId1;\n                        // @ts-ignore\n                        cumulativeSum += 1 - ((_domainTags_tagId1 = domainTags[tagId]) === null || _domainTags_tagId1 === void 0 ? void 0 : _domainTags_tagId1.frequency);\n                        const exampleIndex = domainExampleResponse.findIndex((e)=>e.exampleId === example.exampleId);\n                        // grab the exampleIndex to push it into a new array\n                        if (exampleIndex !== -1) {\n                            domainExamples.push({\n                                ...example,\n                                cumulativeSum\n                            });\n                        }\n                    }\n                } catch (error) {\n                    console.log('Error:', error);\n                    console.log('Tag id:', tagId);\n                }\n            }\n            example.cumulativeSum = cumulativeSum;\n        }\n        // now i need to sort the examples by the cumulative sum, in descending order\n        domainExamples.sort((a, b)=>((b === null || b === void 0 ? void 0 : b.cumulativeSum) || 0) - ((a === null || a === void 0 ? void 0 : a.cumulativeSum) || 0));\n        // console.log('Sorted domain examples:', domainExamples)\n        // then i need to take the top 3 examples\n        // however, i do not want to take examples that have the same prompt\n        const usedPrompts = [];\n        for (const example of domainExamples){\n            if (usedPrompts.includes(example.prompt)) {\n                continue;\n            }\n            if (tagExamples.length < 3) {\n                tagExamples.push(example);\n                usedPrompts.push(example.prompt);\n            } else if (categoryExamples.length < 3) {\n                for (const categories of chatMetadata.categories){\n                    for (const category of Object.keys(categories)){\n                        if (example.category === category) {\n                            categoryExamples.push(example);\n                            usedPrompts.push(example.prompt);\n                        }\n                    }\n                }\n            } else {\n                break;\n            }\n        }\n    } catch (error) {\n        console.error('getMetadataLabels: Error getting chatbot metadata labels -->', error);\n    }\n    return {\n        tagExamples,\n        categoryExamples,\n        domainExamples\n    };\n}\nasync function processUserMessage(userPrompt, clientType, model) {\n    try {\n        if (userPrompt.content.trim().toLowerCase() === _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__.CONTINUE_GENERATION_PROMPT.toLowerCase() || userPrompt.content.trim().toLowerCase() === _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__.CONTINUE_GENERATION_PROMPT_2.toLowerCase()) {\n            //? Skip improvement for continuation prompts\n            console.log('Continuation prompt detected, skipping improvement');\n            return {\n                content: _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__.CONTINUE_GENERATION_PROMPT\n            };\n        }\n        const improved = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_0__.improveMessage)(userPrompt, clientType, model);\n        const processedContent = improved.improvedText || improved.originalText;\n        return {\n            content: processedContent\n        };\n    } catch (error) {\n        console.error('Error processing message:', error);\n        return {\n            content: userPrompt.content,\n            error: error\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/helpers/ai-classification.ts\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-chat-attachments.ts":
      /*!*******************************************!*\
  !*** ./lib/hooks/use-chat-attachments.ts ***!
  \*******************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserIndexedDBKeys: () => (/* binding */ getUserIndexedDBKeys),\n/* harmony export */   useFileAttachments: () => (/* binding */ useFileAttachments)\n/* harmony export */ });\n/* harmony import */ var _lib_hooks_use_indexed_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/hooks/use-indexed-db */ "(app-pages-browser)/./lib/hooks/use-indexed-db.ts");\n/* harmony import */ var _lib_hooks_use_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/hooks/use-model */ "(app-pages-browser)/./lib/hooks/use-model.tsx");\n/* harmony import */ var _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/hooks/use-thread */ "(app-pages-browser)/./lib/hooks/use-thread.tsx");\n/* harmony import */ var _lib_hooks_useSonner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/useSonner */ "(app-pages-browser)/./lib/hooks/useSonner.tsx");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/utils */ "(app-pages-browser)/./lib/utils.ts");\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/uniqBy */ "(app-pages-browser)/../../node_modules/lodash/uniqBy.js");\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var mb_env__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! mb-env */ "(app-pages-browser)/../../packages/mb-env/src/index.ts");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! nanoid */ "(app-pages-browser)/../../node_modules/nanoid/index.browser.js");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next-auth/react */ "(app-pages-browser)/../../node_modules/next-auth/react/index.js");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _barrel_optimize_names_useAsync_useSetState_react_use__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=useAsync,useSetState!=!react-use */ "(app-pages-browser)/../../node_modules/react-use/esm/useSetState.js");\n/* harmony import */ var _barrel_optimize_names_useAsync_useSetState_react_use__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=useAsync,useSetState!=!react-use */ "(app-pages-browser)/../../node_modules/react-use/esm/useAsync.js");\n/* harmony import */ var slugify__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! slugify */ "(app-pages-browser)/../../node_modules/slugify/slugify.js");\n/* harmony import */ var slugify__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(slugify__WEBPACK_IMPORTED_MODULE_9__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "(app-pages-browser)/../../node_modules/next/dist/compiled/buffer/index.js")["Buffer"];\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getUserIndexedDBKeys(userId) {\n    return {\n        dbName: "".concat(userId || \'nosession\', "_masterbots_attachments_indexed_db"),\n        storeName: "".concat(userId || \'nosession\', "_masterbots_attachments_store")\n    };\n}\nfunction useFileAttachments(formRef) {\n    var _session_user;\n    const { data: session } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_7__.useSession)();\n    const { activeThread, isNewResponse, loadingState } = (0,_lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_2__.useThread)();\n    const dbKeys = getUserIndexedDBKeys(session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id);\n    const { mounted, ...indexedDBActions } = (0,_lib_hooks_use_indexed_db__WEBPACK_IMPORTED_MODULE_0__.useIndexedDB)(dbKeys);\n    const [state, setState] = (0,_barrel_optimize_names_useAsync_useSetState_react_use__WEBPACK_IMPORTED_MODULE_10__["default"])({\n        isDragging: false,\n        attachments: []\n    });\n    const currentRequestId = (0,react__WEBPACK_IMPORTED_MODULE_8__.useRef)(null);\n    const { value: userAttachments, loading, error } = (0,_barrel_optimize_names_useAsync_useSetState_react_use__WEBPACK_IMPORTED_MODULE_11__["default"])({\n        "useFileAttachments.useAsync": async ()=>{\n            if (!mounted || !(session === null || session === void 0 ? void 0 : session.user) || isNewResponse || loadingState && loadingState !== \'finished\' || (0,_lib_utils__WEBPACK_IMPORTED_MODULE_4__.getRouteType)(window.location.pathname) !== \'chat\') {\n                var _activeThread_metadata;\n                return (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_metadata = activeThread.metadata) === null || _activeThread_metadata === void 0 ? void 0 : _activeThread_metadata.attachments) || [];\n            }\n            // Check if this request is still current\n            if (!currentRequestId.current) {\n                currentRequestId.current = (0,nanoid__WEBPACK_IMPORTED_MODULE_12__.nanoid)(8);\n            } else {\n                var _activeThread_metadata1;\n                if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.devMode) {\n                    console.info("Request ".concat(currentRequestId.current, " was superseded, ignoring results"));\n                }\n                return (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_metadata1 = activeThread.metadata) === null || _activeThread_metadata1 === void 0 ? void 0 : _activeThread_metadata1.attachments) || [];\n            }\n            if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.devMode) {\n                console.info("Starting user attachments request: ".concat(currentRequestId.current));\n            }\n            const indexedDBAttachments = await indexedDBActions.getAllItems();\n            if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.devMode) {\n                console.info("IndexedDB attachments retrieved successfully for request: ".concat(currentRequestId.current), indexedDBAttachments);\n            }\n            currentRequestId.current = null;\n            return indexedDBAttachments;\n        }\n    }["useFileAttachments.useAsync"], [\n        session === null || session === void 0 ? void 0 : session.user,\n        mounted,\n        isNewResponse,\n        activeThread,\n        loadingState\n    ]);\n    const { customSonner } = (0,_lib_hooks_useSonner__WEBPACK_IMPORTED_MODULE_3__.useSonner)();\n    const { selectedModel } = (0,_lib_hooks_use_model__WEBPACK_IMPORTED_MODULE_1__.useModel)();\n    const addAttachmentObject = (attachment)=>{\n        setState((prevState)=>({\n                attachments: lodash_uniqBy__WEBPACK_IMPORTED_MODULE_5___default()([\n                    ...prevState.attachments,\n                    attachment\n                ], \'id\')\n            }));\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: We only required to update this fn every time we receive a new state of attachments\n    const addAttachment = (0,react__WEBPACK_IMPORTED_MODULE_8__.useCallback)({\n        "useFileAttachments.useCallback[addAttachment]": (file)=>{\n            const reader = new FileReader();\n            let processedFile = null;\n            processedFile = file instanceof DataTransferItem ? file.getAsFile() : file;\n            if (!processedFile) {\n                console.error(\'File is not valid or could not be retrieved\');\n                return;\n            }\n            if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments && state.attachments.length >= mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments) {\n                console.error("Cannot add more than ".concat(mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments, " attachments."));\n                customSonner({\n                    type: \'error\',\n                    text: "Cannot add more than ".concat(mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments, " attachments.")\n                });\n                return;\n            }\n            if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxFileSize && processedFile.size > mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxFileSize // processedFile is guaranteed non-null here\n            ) {\n                console.error(\'File size exceeds the limit\');\n                customSonner({\n                    type: \'error\',\n                    text: \'File size exceeds the limit of 10MB\'\n                });\n                return;\n            }\n            reader.onload = ({\n                "useFileAttachments.useCallback[addAttachment]": async (readerEvent)=>{\n                    const event = readerEvent.target || reader;\n                    // processedFile is captured from the outer scope. It\'s already confirmed to be a File\n                    // by the checks before reader.readAsDataURL(processedFile) was called.\n                    if (!event || !event.result) {\n                        console.error(\'File reading failed or no result found\');\n                        return;\n                    }\n                    // Creating an base64 string from the file content\n                    const attachmentUrl = typeof event.result === \'string\' ? event.result : Buffer.from(event.result).toString(\'base64\');\n                    const newAttachment = {\n                        id: (0,nanoid__WEBPACK_IMPORTED_MODULE_12__.nanoid)(16),\n                        name: processedFile.name || \'\',\n                        size: processedFile.size || 0,\n                        contentType: processedFile.type || \'\',\n                        // * Raw content can be a string or an ArrayBuffer\n                        content: event.result,\n                        // * Compressed URL to the attachment\n                        url: attachmentUrl,\n                        isSelected: true,\n                        messageIds: [],\n                        expires: new Date().toISOString()\n                    };\n                    return setState({\n                        "useFileAttachments.useCallback[addAttachment]": (prevState)=>({\n                                attachments: [\n                                    ...prevState.attachments,\n                                    newAttachment\n                                ]\n                            })\n                    }["useFileAttachments.useCallback[addAttachment]"]);\n                }\n            })["useFileAttachments.useCallback[addAttachment]"];\n            reader.onerror = ({\n                "useFileAttachments.useCallback[addAttachment]": ()=>{\n                    console.error(\'FileReader error:\', reader.error);\n                    customSonner({\n                        type: \'error\',\n                        text: \'Error reading file.\'\n                    });\n                }\n            })["useFileAttachments.useCallback[addAttachment]"];\n            if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.devMode) {\n                console.info(\'Final processedFile --> \', processedFile);\n            }\n            reader.readAsDataURL(processedFile);\n        }\n    }["useFileAttachments.useCallback[addAttachment]"], [\n        state.attachments\n    ]);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: We only required to update this fn every time we receive a new state of attachments\n    const updateAttachment = (0,react__WEBPACK_IMPORTED_MODULE_8__.useCallback)({\n        "useFileAttachments.useCallback[updateAttachment]": (id, updatedData)=>{\n            setState({\n                "useFileAttachments.useCallback[updateAttachment]": (prev)=>({\n                        attachments: prev.attachments.map({\n                            "useFileAttachments.useCallback[updateAttachment]": (attachment)=>attachment.id === id ? {\n                                    ...attachment,\n                                    ...updatedData\n                                } : attachment\n                        }["useFileAttachments.useCallback[updateAttachment]"])\n                    })\n            }["useFileAttachments.useCallback[updateAttachment]"]);\n        }\n    }["useFileAttachments.useCallback[updateAttachment]"], [\n        state.attachments\n    ]);\n    const removeAttachment = (id)=>setState((prev)=>({\n                attachments: prev.attachments.filter((attachment)=>attachment.id !== id)\n            }));\n    const clearAttachments = ()=>setState({\n            attachments: []\n        });\n    // biome-ignore lint/correctness/useExhaustiveDependencies: We only required to know when the attachments has changed\n    const attachFilesToMessage = (0,react__WEBPACK_IMPORTED_MODULE_8__.useCallback)({\n        "useFileAttachments.useCallback[attachFilesToMessage]": (message)=>{\n            const updatedAttachments = state.attachments.map({\n                "useFileAttachments.useCallback[attachFilesToMessage].updatedAttachments": (attachment)=>({\n                        ...attachment,\n                        messageIds: [\n                            ...attachment.messageIds,\n                            message.id\n                        ]\n                    })\n            }["useFileAttachments.useCallback[attachFilesToMessage].updatedAttachments"]);\n            setState({\n                attachments: updatedAttachments\n            });\n            return {\n                ...message,\n                attachments: updatedAttachments\n            };\n        }\n    }["useFileAttachments.useCallback[attachFilesToMessage]"], [\n        state.attachments\n    ]);\n    const handleValidFiles = (files)=>{\n        let validAttachments = files;\n        if (files instanceof FileList) {\n            const dataTransfer = new DataTransfer();\n            for (const file of files){\n                dataTransfer.items.add(file);\n            }\n            validAttachments = dataTransfer.items;\n        }\n        const validFiles = Array.from(validAttachments).filter((file)=>{\n            if (selectedModel.match(/(DeepSeekR1|GroqDeepSeek)/)) {\n                return file.type.startsWith(\'text/\');\n            }\n            return file.type.startsWith(\'image/\') || file.type.startsWith(\'text/\');\n        });\n        console.log(\'Files to process (the validFiles) --> \', validFiles);\n        for (const file of validFiles){\n            addAttachment(file);\n        }\n    };\n    const validateTextContent = (param)=>{\n        let { fileString, wordsLength = 49, charactersLength = 320 } = param;\n        // Remove empty new lines and roughly check if the string has more than 49 words\n        // This is a very basic check, we might want to improve it\n        const slugifyWords = slugify__WEBPACK_IMPORTED_MODULE_9___default()(fileString, {\n            lower: true,\n            trim: true,\n            remove: /[^\\w\\s]/g\n        });\n        const stringWordLength = slugifyWords.split(\'-\').length;\n        return stringWordLength >= wordsLength || slugifyWords.length >= charactersLength;\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    const handleFilePaste = (0,react__WEBPACK_IMPORTED_MODULE_8__.useCallback)({\n        "useFileAttachments.useCallback[handleFilePaste]": (event)=>{\n            const { items } = event.clipboardData;\n            const isImageValidItem = Array.from(items).some({\n                "useFileAttachments.useCallback[handleFilePaste].isImageValidItem": (item)=>item.kind !== \'string\'\n            }["useFileAttachments.useCallback[handleFilePaste].isImageValidItem"]);\n            // * We check if there are any valid items in the pasted data that is a file or an image (not a string)\n            // * If we don\'t have any valid items, we will then check if the items are strings\n            // * and if so, we will create a text file with the content of the string and add it as an attachment\n            // ? If there are no valid items, we will log an error and return\n            if (!isImageValidItem) {\n                var _event_clipboardData;\n                const fileString = (_event_clipboardData = event.clipboardData) === null || _event_clipboardData === void 0 ? void 0 : _event_clipboardData.getData(\'text/plain\');\n                if (!fileString) {\n                    console.warn(\'No valid files or text found in the pasted data\');\n                    return;\n                }\n                const isValidTextLength = validateTextContent({\n                    fileString\n                });\n                if (!isValidTextLength) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                const pastedContextFileName = state.attachments.some({\n                    "useFileAttachments.useCallback[handleFilePaste]": (attch)=>attch.name.includes(\'Pasted Context\')\n                }["useFileAttachments.useCallback[handleFilePaste]"]) ? "Pasted Context (".concat(state.attachments.filter({\n                    "useFileAttachments.useCallback[handleFilePaste]": (attch)=>attch.name.includes(\'Pasted Context\')\n                }["useFileAttachments.useCallback[handleFilePaste]"]).length, ").txt") : \'Pasted Context.txt\';\n                const pastedContextContent = "data:text/plain;base64,".concat(Buffer.from(fileString.normalize(\'NFD\'), \'utf8\').toString(\'base64\'));\n                // Check if the file already exists in the attachments, so we can update it instead of adding a new one (FUTURE)\n                const _pasteContextMatch = state.attachments.find({\n                    "useFileAttachments.useCallback[handleFilePaste]._pasteContextMatch": (attch)=>attch.name === pastedContextFileName\n                }["useFileAttachments.useCallback[handleFilePaste]._pasteContextMatch"]);\n                const pasteFile = {\n                    id: (0,nanoid__WEBPACK_IMPORTED_MODULE_12__.nanoid)(16),\n                    name: pastedContextFileName,\n                    url: pastedContextContent,\n                    contentType: \'text/plain\',\n                    content: pastedContextContent,\n                    messageIds: [],\n                    expires: new Date().toISOString(),\n                    size: new Blob([\n                        fileString\n                    ]).size\n                };\n                addAttachmentObject(pasteFile);\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            const newItems = Array.from(items).map({\n                "useFileAttachments.useCallback[handleFilePaste].newItems": (item)=>{\n                    return {\n                        ...item,\n                        getAsFile: ({\n                            "useFileAttachments.useCallback[handleFilePaste].newItems": ()=>{\n                                const currentFile = item.getAsFile();\n                                if (!currentFile) {\n                                    console.warn(\'No file found in the pasted item\');\n                                    return null;\n                                }\n                                const fileName = currentFile.name.split(\'.\')[0];\n                                const fileExtension = currentFile.name.split(\'.\').pop() || \'txt\';\n                                return new File([\n                                    currentFile\n                                ], "".concat(fileName, "-").concat((0,nanoid__WEBPACK_IMPORTED_MODULE_12__.nanoid)(8), ".").concat(fileExtension), {\n                                    type: currentFile.type\n                                });\n                            }\n                        })["useFileAttachments.useCallback[handleFilePaste].newItems"]\n                    };\n                }\n            }["useFileAttachments.useCallback[handleFilePaste].newItems"]);\n            const dataTransfer = new DataTransfer();\n            for (const item of newItems){\n                const file = item.getAsFile();\n                if (file) {\n                    dataTransfer.items.add(file);\n                }\n            }\n            handleValidFiles(dataTransfer.items);\n        }\n    }["useFileAttachments.useCallback[handleFilePaste]"], [\n        state\n    ]);\n    const handleDragOver = (event)=>{\n        event.preventDefault();\n        event.dataTransfer.effectAllowed = \'all\';\n        event.dataTransfer.dropEffect = \'move\';\n        setState({\n            isDragging: true\n        });\n    };\n    const handleDragLeave = (event)=>{\n        event.preventDefault();\n        setState({\n            isDragging: false\n        });\n    };\n    const handleDrop = (event)=>{\n        var _event_dataTransfer;\n        event.preventDefault();\n        const files = (_event_dataTransfer = event.dataTransfer) === null || _event_dataTransfer === void 0 ? void 0 : _event_dataTransfer.files;\n        if (!files) return;\n        handleValidFiles(files);\n        setState({\n            isDragging: false\n        });\n    };\n    // Function to handle files selected from the file dialog\n    const handleFileSelect = (event)=>{\n        const { files } = event.target;\n        if (!files) return;\n        if (mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxFileSize) {\n            if (files.length > mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments || state.attachments.length + files.length > mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments) {\n                console.error("Cannot add more than ".concat(mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments, " attachments."));\n                customSonner({\n                    type: \'error\',\n                    text: "Cannot add more than ".concat(mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxAttachments, " attachments.")\n                });\n                return;\n            }\n            for (const file of files){\n                if (file.size > mb_env__WEBPACK_IMPORTED_MODULE_6__.appConfig.features.maxFileSize) {\n                    console.error(\'File size exceeds the limit\');\n                    customSonner({\n                        type: \'error\',\n                        text: \'File size exceeds the limit of 10MB\'\n                    });\n                    return;\n                }\n            }\n        }\n        handleValidFiles(files);\n        setState({\n            isDragging: false\n        });\n    };\n    const toggleAttachmentSelection = (id)=>{\n        const newAttachments = state.attachments.map((attachment)=>{\n            if (attachment.id === id) {\n                return {\n                    ...attachment,\n                    isSelected: !attachment.isSelected\n                };\n            }\n            return attachment;\n        });\n        const userAttachment = userAttachments === null || userAttachments === void 0 ? void 0 : userAttachments.find((attachment)=>attachment.id === id);\n        if (userAttachment && !newAttachments.some((attachment)=>attachment.id === id)) {\n            newAttachments.push({\n                ...userAttachment,\n                isSelected: true\n            });\n        }\n        setState({\n            attachments: newAttachments.filter((attachment)=>attachment.isSelected)\n        });\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: We only required to update this effect when the formRef and the state changes\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)({\n        "useFileAttachments.useEffect": ()=>{\n            const form = formRef === null || formRef === void 0 ? void 0 : formRef.current;\n            if (!form) return;\n            const formId = form.id.split(\'-\').pop();\n            const formTextarea = form.querySelector("textarea[id=prompt-textarea-".concat(formId, "]"));\n            if (formTextarea) {\n                formTextarea.addEventListener(\'paste\', handleFilePaste);\n            }\n            return ({\n                "useFileAttachments.useEffect": ()=>{\n                    if (!form) return;\n                    const formId = form.id.split(\'-\').pop();\n                    const formTextarea = form.querySelector("textarea[id=prompt-textarea-".concat(formId, "]"));\n                    if (formTextarea) {\n                        formTextarea.removeEventListener(\'paste\', handleFilePaste);\n                    }\n                }\n            })["useFileAttachments.useEffect"];\n        }\n    }["useFileAttachments.useEffect"], [\n        formRef === null || formRef === void 0 ? void 0 : formRef.current,\n        state\n    ]);\n    // [state, actions]\n    return [\n        {\n            ...state,\n            userData: {\n                userAttachments,\n                loading,\n                error\n            }\n        },\n        {\n            addAttachment,\n            updateAttachment,\n            handleFileSelect,\n            removeAttachment,\n            clearAttachments,\n            addAttachmentObject,\n            attachFilesToMessage,\n            toggleAttachmentSelection,\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onDrop: handleDrop\n        }\n    ];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-chat-attachments.ts\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-continue-generation.tsx":
      /*!***********************************************!*\
  !*** ./lib/hooks/use-continue-generation.tsx ***!
  \***********************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContinueGenerationProvider: () => (/* binding */ ContinueGenerationProvider),\n/* harmony export */   useContinueGeneration: () => (/* binding */ useContinueGeneration)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");\n/* harmony import */ var _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/constants/prompts */ "(app-pages-browser)/./lib/constants/prompts.ts");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ useContinueGeneration,ContinueGenerationProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst ContinueGenerationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_2__.createContext)(undefined);\nfunction useContinueGeneration() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_2__.useContext)(ContinueGenerationContext);\n    if (!context) {\n        throw new Error(\'useContinueGeneration must be used within a ContinueGenerationProvider\');\n    }\n    return context;\n}\n_s(useContinueGeneration, "b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=");\nfunction ContinueGenerationProvider(param) {\n    let { children } = param;\n    _s1();\n    const [isCutOff, setIsCutOff] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const [isContinuing, setIsContinuing] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    const continuationCountRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(0);\n    //? Function for continuing generation\n    const continueGeneration = async ()=>{\n        console.log(\'Continue generation function called\');\n        setIsContinuing(true);\n        continuationCountRef.current += 1;\n    };\n    //? Get appropriate continuation prompt based on continuation count\n    const getContinuationPrompt = ()=>{\n        return continuationCountRef.current === 0 ? _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__.CONTINUE_GENERATION_PROMPT : _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_1__.CONTINUE_GENERATION_PROMPT_2;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContinueGenerationContext.Provider, {\n        value: {\n            isCutOff,\n            setIsCutOff,\n            continueGeneration,\n            setIsContinuing,\n            isContinuing,\n            continuationCount: continuationCountRef.current,\n            getContinuationPrompt\n        },\n        children: children\n    }, void 0, false, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/lib/hooks/use-continue-generation.tsx",\n        lineNumber: 56,\n        columnNumber: 3\n    }, this);\n}\n_s1(ContinueGenerationProvider, "3SR6eO1u0X90tCScEYDdxdkvvE4=");\n_c = ContinueGenerationProvider;\nvar _c;\n$RefreshReg$(_c, "ContinueGenerationProvider");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ob29rcy91c2UtY29udGludWUtZ2VuZXJhdGlvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFLZ0M7QUFDbUM7QUFXbkUsTUFBTU0sMENBQTRCSixvREFBYUEsQ0FFN0NLO0FBRUssU0FBU0M7O0lBQ2YsTUFBTUMsVUFBVU4saURBQVVBLENBQUNHO0lBQzNCLElBQUksQ0FBQ0csU0FBUztRQUNiLE1BQU0sSUFBSUMsTUFDVDtJQUVGO0lBQ0EsT0FBT0Q7QUFDUjtHQVJnQkQ7QUFVVCxTQUFTRywyQkFBMkIsS0FJMUM7UUFKMEMsRUFDMUNDLFFBQVEsRUFHUixHQUowQzs7SUFLMUMsTUFBTSxDQUFDQyxVQUFVQyxZQUFZLEdBQUdULCtDQUFRQSxDQUFDO0lBQ3pDLE1BQU0sQ0FBQ1UsY0FBY0MsZ0JBQWdCLEdBQUdYLCtDQUFRQSxDQUFDO0lBQ2pELE1BQU1ZLHVCQUF1QmIsNkNBQU1BLENBQUM7SUFFcEMsc0NBQXNDO0lBQ3RDLE1BQU1jLHFCQUFxQjtRQUMxQkMsUUFBUUMsR0FBRyxDQUFDO1FBQ1pKLGdCQUFnQjtRQUNoQkMscUJBQXFCSSxPQUFPLElBQUk7SUFDakM7SUFFQSxtRUFBbUU7SUFDbkUsTUFBTUMsd0JBQXdCO1FBQzdCLE9BQU9MLHFCQUFxQkksT0FBTyxLQUFLLElBQ3JDckIsOEVBQTBCQSxHQUMxQkMsZ0ZBQTRCQTtJQUNoQztJQUVBLHFCQUNDLDhEQUFDSywwQkFBMEJpQixRQUFRO1FBQ2xDQyxPQUFPO1lBQ05YO1lBQ0FDO1lBQ0FJO1lBQ0FGO1lBQ0FEO1lBQ0FVLG1CQUFtQlIscUJBQXFCSSxPQUFPO1lBQy9DQztRQUNEO2tCQUVDVjs7Ozs7O0FBR0o7SUF0Q2dCRDtLQUFBQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NoZXJpZmYvRGVza3RvcC9iaXRjYXNoLWFwcHMvbWFzdGVyYm90cy9hcHBzL21hc3RlcmJvdHMuYWkvbGliL2hvb2tzL3VzZS1jb250aW51ZS1nZW5lcmF0aW9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHtcblx0Q09OVElOVUVfR0VORVJBVElPTl9QUk9NUFQsXG5cdENPTlRJTlVFX0dFTkVSQVRJT05fUFJPTVBUXzIsXG59IGZyb20gJ0AvbGliL2NvbnN0YW50cy9wcm9tcHRzJ1xuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW50ZXJmYWNlIENvbnRpbnVlR2VuZXJhdGlvbkNvbnRleHRUeXBlIHtcblx0aXNDdXRPZmY6IGJvb2xlYW5cblx0c2V0SXNDdXRPZmY6ICh2YWx1ZTogYm9vbGVhbikgPT4gdm9pZFxuXHRjb250aW51ZUdlbmVyYXRpb246ICgpID0+IFByb21pc2U8dm9pZD5cblx0aXNDb250aW51aW5nOiBib29sZWFuXG5cdGNvbnRpbnVhdGlvbkNvdW50OiBudW1iZXJcblx0Z2V0Q29udGludWF0aW9uUHJvbXB0OiAoKSA9PiBzdHJpbmdcblx0c2V0SXNDb250aW51aW5nOiAodmFsdWU6IGJvb2xlYW4pID0+IHZvaWRcbn1cblxuY29uc3QgQ29udGludWVHZW5lcmF0aW9uQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8XG5cdENvbnRpbnVlR2VuZXJhdGlvbkNvbnRleHRUeXBlIHwgdW5kZWZpbmVkXG4+KHVuZGVmaW5lZClcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnRpbnVlR2VuZXJhdGlvbigpIHtcblx0Y29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQ29udGludWVHZW5lcmF0aW9uQ29udGV4dClcblx0aWYgKCFjb250ZXh0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFxuXHRcdFx0J3VzZUNvbnRpbnVlR2VuZXJhdGlvbiBtdXN0IGJlIHVzZWQgd2l0aGluIGEgQ29udGludWVHZW5lcmF0aW9uUHJvdmlkZXInLFxuXHRcdClcblx0fVxuXHRyZXR1cm4gY29udGV4dFxufVxuXG5leHBvcnQgZnVuY3Rpb24gQ29udGludWVHZW5lcmF0aW9uUHJvdmlkZXIoe1xuXHRjaGlsZHJlbixcbn06IHtcblx0Y2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVxufSkge1xuXHRjb25zdCBbaXNDdXRPZmYsIHNldElzQ3V0T2ZmXSA9IHVzZVN0YXRlKGZhbHNlKVxuXHRjb25zdCBbaXNDb250aW51aW5nLCBzZXRJc0NvbnRpbnVpbmddID0gdXNlU3RhdGUoZmFsc2UpXG5cdGNvbnN0IGNvbnRpbnVhdGlvbkNvdW50UmVmID0gdXNlUmVmKDApXG5cblx0Ly8/IEZ1bmN0aW9uIGZvciBjb250aW51aW5nIGdlbmVyYXRpb25cblx0Y29uc3QgY29udGludWVHZW5lcmF0aW9uID0gYXN5bmMgKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKCdDb250aW51ZSBnZW5lcmF0aW9uIGZ1bmN0aW9uIGNhbGxlZCcpXG5cdFx0c2V0SXNDb250aW51aW5nKHRydWUpXG5cdFx0Y29udGludWF0aW9uQ291bnRSZWYuY3VycmVudCArPSAxXG5cdH1cblxuXHQvLz8gR2V0IGFwcHJvcHJpYXRlIGNvbnRpbnVhdGlvbiBwcm9tcHQgYmFzZWQgb24gY29udGludWF0aW9uIGNvdW50XG5cdGNvbnN0IGdldENvbnRpbnVhdGlvblByb21wdCA9ICgpID0+IHtcblx0XHRyZXR1cm4gY29udGludWF0aW9uQ291bnRSZWYuY3VycmVudCA9PT0gMFxuXHRcdFx0PyBDT05USU5VRV9HRU5FUkFUSU9OX1BST01QVFxuXHRcdFx0OiBDT05USU5VRV9HRU5FUkFUSU9OX1BST01QVF8yXG5cdH1cblxuXHRyZXR1cm4gKFxuXHRcdDxDb250aW51ZUdlbmVyYXRpb25Db250ZXh0LlByb3ZpZGVyXG5cdFx0XHR2YWx1ZT17e1xuXHRcdFx0XHRpc0N1dE9mZixcblx0XHRcdFx0c2V0SXNDdXRPZmYsXG5cdFx0XHRcdGNvbnRpbnVlR2VuZXJhdGlvbixcblx0XHRcdFx0c2V0SXNDb250aW51aW5nLFxuXHRcdFx0XHRpc0NvbnRpbnVpbmcsXG5cdFx0XHRcdGNvbnRpbnVhdGlvbkNvdW50OiBjb250aW51YXRpb25Db3VudFJlZi5jdXJyZW50LFxuXHRcdFx0XHRnZXRDb250aW51YXRpb25Qcm9tcHQsXG5cdFx0XHR9fVxuXHRcdD5cblx0XHRcdHtjaGlsZHJlbn1cblx0XHQ8L0NvbnRpbnVlR2VuZXJhdGlvbkNvbnRleHQuUHJvdmlkZXI+XG5cdClcbn1cbiJdLCJuYW1lcyI6WyJDT05USU5VRV9HRU5FUkFUSU9OX1BST01QVCIsIkNPTlRJTlVFX0dFTkVSQVRJT05fUFJPTVBUXzIiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVJlZiIsInVzZVN0YXRlIiwiQ29udGludWVHZW5lcmF0aW9uQ29udGV4dCIsInVuZGVmaW5lZCIsInVzZUNvbnRpbnVlR2VuZXJhdGlvbiIsImNvbnRleHQiLCJFcnJvciIsIkNvbnRpbnVlR2VuZXJhdGlvblByb3ZpZGVyIiwiY2hpbGRyZW4iLCJpc0N1dE9mZiIsInNldElzQ3V0T2ZmIiwiaXNDb250aW51aW5nIiwic2V0SXNDb250aW51aW5nIiwiY29udGludWF0aW9uQ291bnRSZWYiLCJjb250aW51ZUdlbmVyYXRpb24iLCJjb25zb2xlIiwibG9nIiwiY3VycmVudCIsImdldENvbnRpbnVhdGlvblByb21wdCIsIlByb3ZpZGVyIiwidmFsdWUiLCJjb250aW51YXRpb25Db3VudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-continue-generation.tsx\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-indexed-db.ts":
      /*!*************************************!*\
  !*** ./lib/hooks/use-indexed-db.ts ***!
  \*************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useIndexedDB: () => (/* binding */ useIndexedDB)\n/* harmony export */ });\n/* harmony import */ var _app_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/app/actions */ \"(app-pages-browser)/./app/actions/index.ts\");\n/* harmony import */ var _lib_threads__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/threads */ \"(app-pages-browser)/./lib/threads.ts\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isEqual */ \"(app-pages-browser)/../../node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/uniqBy */ \"(app-pages-browser)/../../node_modules/lodash/uniqBy.js\");\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var mb_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mb-env */ \"(app-pages-browser)/../../packages/mb-env/src/index.ts\");\n/* harmony import */ var mb_lib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mb-lib */ \"(app-pages-browser)/../../packages/mb-lib/src/index.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _use_local_storage__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./use-local-storage */ \"(app-pages-browser)/./lib/hooks/use-local-storage.ts\");\n\n\n\n\n\n\n\n\nconst DEFAULT_DB_NAME = 'masterbots_attachments_indexed_db';\nconst DEFAULT_STORE_NAME = 'masterbots_attachments_store';\nfunction useIndexedDB(param) {\n    let { dbName = DEFAULT_DB_NAME, storeName = DEFAULT_STORE_NAME } = param;\n    const dbRef = (0,react__WEBPACK_IMPORTED_MODULE_6__.useRef)(null);\n    const processingAttachmentsRef = (0,react__WEBPACK_IMPORTED_MODULE_6__.useRef)(new Set());\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(false);\n    const [processedAttachmentIds, setProcessedAttachmentIds] = (0,_use_local_storage__WEBPACK_IMPORTED_MODULE_7__.useLocalStorage)('masterbots_processed_attachments', []);\n    const onMountSuccess = (event)=>{\n        if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n            console.info('IndexedDB opened successfully');\n        }\n        dbRef.current = event.target.result;\n        setMounted(true);\n    // check if we have records in the store to update user threads metadata\n    // getAllItems()\n    };\n    const onUpgradeNeeded = (event)=>{\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains(storeName)) {\n            db.createObjectStore(storeName, {\n                keyPath: 'id',\n                autoIncrement: true\n            });\n        }\n    };\n    const onError = (event)=>{\n        console.error('IndexedDB error:', event.target.error);\n    };\n    const resetState = ()=>{\n        const db = dbRef.current;\n        setMounted(false);\n        if (db) {\n            db.close();\n        }\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)({\n        \"useIndexedDB.useEffect\": ()=>{\n            const openRequest = indexedDB.open(dbName, 1);\n            openRequest.onupgradeneeded = onUpgradeNeeded;\n            openRequest.onsuccess = onMountSuccess;\n            openRequest.onerror = onError;\n            return ({\n                \"useIndexedDB.useEffect\": ()=>{\n                    resetState();\n                }\n            })[\"useIndexedDB.useEffect\"];\n        }\n    }[\"useIndexedDB.useEffect\"], [\n        dbName,\n        storeName\n    ]);\n    const addItem = (item)=>{\n        try {\n            const db = dbRef.current;\n            if (!db) return;\n            const transaction = db.transaction(storeName, 'readwrite');\n            const store = transaction.objectStore(storeName);\n            store.add(item);\n        } catch (error) {\n            console.error('Error adding item to IndexedDB:', error);\n            return;\n        }\n    };\n    const getItem = (id)=>{\n        return new Promise((resolve, reject)=>{\n            const db = dbRef.current;\n            if (!db) return reject('Database not initialized');\n            const transaction = db.transaction(storeName, 'readonly');\n            const store = transaction.objectStore(storeName);\n            const request = store.get(id);\n            request.onsuccess = ()=>{\n                resolve(request.result);\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    };\n    const getAllItems = ()=>{\n        return new Promise((resolve, reject)=>{\n            const db = dbRef.current;\n            if (!db) return reject('Database not initialized');\n            const transaction = db.transaction(storeName, 'readonly');\n            const store = transaction.objectStore(storeName);\n            const request = store.getAll();\n            request.onsuccess = async ()=>{\n                const attachments = request.result;\n                let newAttachments = attachments;\n                const currentUserMetadata = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_0__.getAllUserThreadMetadata)();\n                const newAttachmentCheck = (0,_lib_threads__WEBPACK_IMPORTED_MODULE_1__.prepareThreadAttachmentCheck)(newAttachments);\n                const currentAttachmentCheck = (0,_lib_threads__WEBPACK_IMPORTED_MODULE_1__.prepareThreadAttachmentCheck)(currentUserMetadata);\n                if (lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default()(newAttachmentCheck, currentAttachmentCheck) && lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default()(newAttachmentCheck.map((att)=>att.messageIds), currentAttachmentCheck.map((att)=>att.messageIds))) {\n                    if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                        console.warn('No update required. Local is sync with remote');\n                    }\n                    return resolve(newAttachments);\n                }\n                if (currentUserMetadata && currentUserMetadata.length > newAttachments.length) {\n                    // This means that the remote has more attachments than local hence, the user is on a new browser or device\n                    if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                        console.warn('Remote has more attachments than local, updating local attachments');\n                    }\n                    const downloadedAttachments = [];\n                    // Mark attachments as being processed\n                    const remoteProcessingIds = [];\n                    for (const attachment of currentUserMetadata){\n                        const response = await fetch(attachment.url);\n                        if (!response.ok) throw new Error(\"Failed to fetch \".concat(attachment.name, \" from GCS\"));\n                        const blob = await response.blob();\n                        const base64 = await new Promise((resolve, reject)=>{\n                            const reader = new FileReader();\n                            reader.onloadend = ()=>resolve(reader.result);\n                            reader.onerror = reject;\n                            reader.readAsDataURL(blob) // This includes the MIME type automatically\n                            ;\n                        });\n                        const downloadedAttachment = {\n                            ...attachment,\n                            content: base64\n                        };\n                        try {\n                            updateItem(downloadedAttachment.id, downloadedAttachment);\n                        } catch (error) {\n                            addItem(downloadedAttachment);\n                        }\n                        // Update the localhost and ref state\n                        if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                            console.info('Updated attachment in IndexedDB:', downloadedAttachment.id, downloadedAttachment.name);\n                        }\n                        downloadedAttachments.push(downloadedAttachment);\n                        const attachmentsToProcess = downloadedAttachments.filter((att)=>!processingAttachmentsRef.current.has(att.id) && !processedAttachmentIds.includes(att.id));\n                        for (const attachment of attachmentsToProcess){\n                            processingAttachmentsRef.current.add(attachment.id);\n                            remoteProcessingIds.push(attachment.id);\n                        }\n                        // Update processed attachments in localStorage\n                        const updatedProcessedIds = [\n                            ...processedAttachmentIds,\n                            ...remoteProcessingIds\n                        ];\n                        setProcessedAttachmentIds(updatedProcessedIds);\n                    }\n                    for (const id of remoteProcessingIds){\n                        processingAttachmentsRef.current.delete(id);\n                    }\n                    return resolve(downloadedAttachments);\n                }\n                // Filter out attachments that are currently being processed or already processed\n                const filterAttachments = (attachment)=>{\n                    var _currentUserMetadata_find;\n                    return attachment.messageIds.length !== (currentUserMetadata === null || currentUserMetadata === void 0 ? void 0 : (_currentUserMetadata_find = currentUserMetadata.find((att)=>att.id === attachment.id)) === null || _currentUserMetadata_find === void 0 ? void 0 : _currentUserMetadata_find.messageIds.length) || !processingAttachmentsRef.current.has(attachment.id) && !processedAttachmentIds.includes(attachment.id);\n                };\n                let attachmentsToProcess = newAttachments.filter(filterAttachments);\n                if (attachmentsToProcess.length === 0) {\n                    if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                        console.info('No new attachments to process');\n                    }\n                    return resolve(newAttachments);\n                }\n                // Mark attachments as being processed\n                const newProcessingIds = [];\n                try {\n                    for (const attachment of attachmentsToProcess){\n                        var _thread_metadata, _thread_metadata1;\n                        processingAttachmentsRef.current.add(attachment.id);\n                        newProcessingIds.push(attachment.id);\n                        const thread = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_0__.getUserThreadsMetadata)(attachment.messageIds);\n                        if (!thread) {\n                            if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                                console.warn(\"No thread found for messageId: \".concat(attachment.messageIds, \", skipping attachment update\"), attachment.id, attachment.name);\n                            }\n                            continue;\n                        }\n                        const remoteMetadataAttachments = thread === null || thread === void 0 ? void 0 : (_thread_metadata = thread.metadata) === null || _thread_metadata === void 0 ? void 0 : _thread_metadata.attachments;\n                        const doesThreadMetadataExist = remoteMetadataAttachments === null || remoteMetadataAttachments === void 0 ? void 0 : remoteMetadataAttachments.some((att)=>att.id === attachment.id && att.messageIds.length === attachment.messageIds.length);\n                        // If the attachment already exists in the thread metadata, skip updating it\n                        if (doesThreadMetadataExist) {\n                            if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                                console.warn('Attachment already exists in thread metadata, skipping update', attachment.id, attachment.name);\n                            }\n                            continue;\n                        }\n                        // Ensuring remote would have the latest attachments related messageIds\n                        newAttachments = [\n                            ...((_thread_metadata1 = thread.metadata) === null || _thread_metadata1 === void 0 ? void 0 : _thread_metadata1.attachments) || [],\n                            ...newAttachments\n                        ].map((att)=>{\n                            if (att.id === attachment.id) {\n                                return {\n                                    ...att,\n                                    messageIds: attachment.messageIds\n                                };\n                            }\n                            return att;\n                        });\n                        try {\n                            const { data: uploadAttachmentData } = await (0,mb_lib__WEBPACK_IMPORTED_MODULE_5__.fetchJson)('/api/attachments/upload', {\n                                method: 'POST',\n                                body: JSON.stringify({\n                                    attachment,\n                                    thread\n                                }),\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                }\n                            });\n                            if (!uploadAttachmentData) {\n                                throw new Error('Failed to upload attachment, no data returned');\n                            }\n                            newAttachments = newAttachments.map((att)=>{\n                                if (att.id === attachment.id) {\n                                    return {\n                                        ...att,\n                                        ...uploadAttachmentData\n                                    };\n                                }\n                                return att;\n                            });\n                        } catch (error) {\n                            console.error('Failed to upload the attachment to the bucket: ', error);\n                            newAttachments.push(attachment);\n                        }\n                        newAttachments = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_3___default()(newAttachments, 'id');\n                    }\n                    // Update processed attachments in localStorage\n                    const updatedProcessedIds = [\n                        ...processedAttachmentIds,\n                        ...newProcessingIds\n                    ];\n                    setProcessedAttachmentIds(updatedProcessedIds);\n                    // * Creating a new version of attachments to process for metadata update\n                    // * This is to ensure that we only update the thread metadata with the new attachments metadata refs\n                    attachmentsToProcess = newAttachments.filter(filterAttachments);\n                    const messagesIds = attachmentsToProcess.flatMap((att)=>att.messageIds);\n                    // Log the payload bytes size\n                    const payloadSize = new TextEncoder().encode(JSON.stringify({\n                        attachments: attachmentsToProcess,\n                        messagesIds\n                    })).length;\n                    console.log(\"Updating thread metadata with \".concat(attachmentsToProcess.length, \" attachments, total payload size: \").concat(payloadSize, \" bytes\"));\n                    const MAX_CHUNK_SIZE = 4e6 // 4MB in bytes\n                    ;\n                    if (payloadSize > MAX_CHUNK_SIZE) {\n                        console.warn(\"Payload size exceeds \".concat(MAX_CHUNK_SIZE / 1e6, \"MB, splitting the update into smaller chunks\"));\n                        const chunks = [];\n                        let currentChunk = [];\n                        let currentChunkSize = 0;\n                        for (const attachment of attachmentsToProcess){\n                            const attachmentSize = new TextEncoder().encode(JSON.stringify(attachment)).length;\n                            if (currentChunkSize + attachmentSize > MAX_CHUNK_SIZE && currentChunk.length > 0) {\n                                chunks.push(currentChunk);\n                                currentChunk = [];\n                                currentChunkSize = 0;\n                            }\n                            currentChunk.push(attachment);\n                            currentChunkSize += attachmentSize;\n                        }\n                        if (currentChunk.length > 0) {\n                            chunks.push(currentChunk);\n                        }\n                        const metadataUpdateResults = await Promise.allSettled(chunks.map((chunk)=>(0,_app_actions__WEBPACK_IMPORTED_MODULE_0__.updateThreadMetadata)(chunk.flatMap((att)=>att.messageIds), {\n                                attachments: chunk\n                            })));\n                        const failedChunks = metadataUpdateResults.filter((result)=>result.status === 'rejected');\n                        console.info(failedChunks.length > 0 ? 'Some chunks failed to update metadata:' : 'All chunks updated metadata successfully  ——> chunk strategy.', {\n                            failedChunks\n                        });\n                    } else {\n                        const metadataUpdateResults = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_0__.updateThreadMetadata)(messagesIds, {\n                            attachments: attachmentsToProcess\n                        });\n                        if (mb_env__WEBPACK_IMPORTED_MODULE_4__.appConfig.features.devMode) {\n                            console.log('metadataUpdateResults ——> no chunk strategy', metadataUpdateResults);\n                        }\n                    }\n                    // If new attachments are not equal from remote/local\n                    if (!lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default()(attachments, newAttachments)) {\n                        console.log('Detected attachments not equal with new attachments hence, either the new attachments or local has to be updates. Remote has a url, local a base64 hash.', {\n                            newAttachments: {\n                                length: newAttachments.length,\n                                msgIds: newAttachments.map((att)=>att.messageIds.length)\n                            },\n                            attachments: {\n                                length: attachments.length,\n                                msgIds: attachments.map((att)=>att.messageIds.length)\n                            }\n                        });\n                    }\n                    return resolve(newAttachments);\n                } finally{\n                    // Clear processing state\n                    for (const id of newProcessingIds){\n                        processingAttachmentsRef.current.delete(id);\n                    }\n                }\n            // return resolve(newAttachments)\n            };\n            request.onerror = ()=>{\n                reject(request.error);\n            };\n        });\n    };\n    const updateItem = (id, updatedItem)=>{\n        const db = dbRef.current;\n        if (!db) return;\n        const transaction = db.transaction(storeName, 'readwrite');\n        const store = transaction.objectStore(storeName);\n        const itemToUpdate = {\n            ...updatedItem,\n            id\n        };\n        store.put(itemToUpdate);\n    };\n    const deleteItem = (id)=>{\n        const db = dbRef.current;\n        if (!db) return;\n        const transaction = db.transaction(storeName, 'readwrite');\n        const store = transaction.objectStore(storeName);\n        store.delete(id);\n    };\n    return {\n        mounted,\n        addItem,\n        getItem,\n        getAllItems,\n        updateItem,\n        deleteItem\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-indexed-db.ts\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-mb-chat.tsx":
      /*!***********************************!*\
  !*** ./lib/hooks/use-mb-chat.tsx ***!
  \***********************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MBChatProvider: () => (/* binding */ MBChatProvider),\n/* harmony export */   useMBChat: () => (/* binding */ useMBChat)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _app_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/actions */ \"(app-pages-browser)/./app/actions/index.ts\");\n/* harmony import */ var _lib_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/actions */ \"(app-pages-browser)/./lib/actions.ts\");\n/* harmony import */ var _lib_constants_prompts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/constants/prompts */ \"(app-pages-browser)/./lib/constants/prompts.ts\");\n/* harmony import */ var _lib_helpers_ai_classification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/helpers/ai-classification */ \"(app-pages-browser)/./lib/helpers/ai-classification.ts\");\n/* harmony import */ var _lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/helpers/ai-helpers */ \"(app-pages-browser)/./lib/helpers/ai-helpers.ts\");\n/* harmony import */ var _lib_hooks_use_chat_attachments__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/hooks/use-chat-attachments */ \"(app-pages-browser)/./lib/hooks/use-chat-attachments.ts\");\n/* harmony import */ var _lib_hooks_use_continue_generation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/lib/hooks/use-continue-generation */ \"(app-pages-browser)/./lib/hooks/use-continue-generation.tsx\");\n/* harmony import */ var _lib_hooks_use_indexed_db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/hooks/use-indexed-db */ \"(app-pages-browser)/./lib/hooks/use-indexed-db.ts\");\n/* harmony import */ var _lib_hooks_use_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/hooks/use-model */ \"(app-pages-browser)/./lib/hooks/use-model.tsx\");\n/* harmony import */ var _lib_hooks_use_power_up__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/lib/hooks/use-power-up */ \"(app-pages-browser)/./lib/hooks/use-power-up.tsx\");\n/* harmony import */ var _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/lib/hooks/use-sidebar */ \"(app-pages-browser)/./lib/hooks/use-sidebar.tsx\");\n/* harmony import */ var _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/lib/hooks/use-thread */ \"(app-pages-browser)/./lib/hooks/use-thread.tsx\");\n/* harmony import */ var _lib_hooks_use_thread_visibility__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/lib/hooks/use-thread-visibility */ \"(app-pages-browser)/./lib/hooks/use-thread-visibility.tsx\");\n/* harmony import */ var _lib_sentry__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/lib/sentry */ \"(app-pages-browser)/./lib/sentry.ts\");\n/* harmony import */ var _lib_url__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/lib/url */ \"(app-pages-browser)/./lib/url.ts\");\n/* harmony import */ var _services_hasura__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/services/hasura */ \"(app-pages-browser)/./services/hasura/index.ts\");\n/* harmony import */ var _ai_sdk_react__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ai-sdk/react */ \"(app-pages-browser)/../../node_modules/@ai-sdk/react/dist/index.mjs\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! lodash/throttle */ \"(app-pages-browser)/../../node_modules/lodash/throttle.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! lodash/uniqBy */ \"(app-pages-browser)/../../node_modules/lodash/uniqBy.js\");\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var mb_env__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! mb-env */ \"(app-pages-browser)/../../packages/mb-env/src/index.ts\");\n/* harmony import */ var mb_lib__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! mb-lib */ \"(app-pages-browser)/../../packages/mb-lib/src/index.ts\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/../../node_modules/nanoid/index.browser.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/../../node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/../../node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _barrel_optimize_names_useSetState_react_use__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=useSetState!=!react-use */ \"(app-pages-browser)/../../node_modules/react-use/esm/useSetState.js\");\n/* harmony import */ var _useSonner__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./useSonner */ \"(app-pages-browser)/./lib/hooks/useSonner.tsx\");\n/* __next_internal_client_entry_do_not_use__ useMBChat,MBChatProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction useMBChat() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_23__.useContext)(MBChatContext);\n    if (!context) {\n        throw new Error('useMBChat must be used within a MBChatProvider');\n    }\n    return context;\n}\n_s(useMBChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction MBChatProvider(param) {\n    let { children } = param;\n    var _session_user, _activeThread_messages, _initialMessages_concat;\n    _s1();\n    const { data: session } = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_21__.useSession)();\n    const { isOpenPopup, activeThread, webSearch, loadingState, setWebSearch, setActiveThread, setIsNewResponse, setIsOpenPopup, setActiveTool, setLoadingState } = (0,_lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_12__.useThread)();\n    const { activeChatbot, navigateTo } = (0,_lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_11__.useSidebar)();\n    const userContentRef = (0,react__WEBPACK_IMPORTED_MODULE_23__.useRef)('');\n    const randomThreadId = (0,react__WEBPACK_IMPORTED_MODULE_23__.useRef)(crypto.randomUUID());\n    const { isContinuousThread, setIsContinuousThread } = (0,_lib_hooks_use_thread_visibility__WEBPACK_IMPORTED_MODULE_13__.useThreadVisibility)();\n    const { customSonner } = (0,_useSonner__WEBPACK_IMPORTED_MODULE_24__.useSonner)();\n    const { isPowerUp } = (0,_lib_hooks_use_power_up__WEBPACK_IMPORTED_MODULE_10__.usePowerUp)();\n    const { setIsCutOff } = (0,_lib_hooks_use_continue_generation__WEBPACK_IMPORTED_MODULE_7__.useContinueGeneration)();\n    const params = (0,next_navigation__WEBPACK_IMPORTED_MODULE_22__.useParams)();\n    const { selectedModel, clientType } = (0,_lib_hooks_use_model__WEBPACK_IMPORTED_MODULE_9__.useModel)();\n    // const initialIsNewChat = Boolean(isContinuousThread || !activeThread?.messages.length)\n    const [{ messagesFromDB, isNewChat }, setState] = (0,_barrel_optimize_names_useSetState_react_use__WEBPACK_IMPORTED_MODULE_25__[\"default\"])({\n        isInitLoaded: false,\n        webSearch: false,\n        messagesFromDB: (activeThread === null || activeThread === void 0 ? void 0 : activeThread.messages) || [],\n        isNewChat: true\n    });\n    var _activeThread_chatbot;\n    const chatbotData = (_activeThread_chatbot = activeThread === null || activeThread === void 0 ? void 0 : activeThread.chatbot) !== null && _activeThread_chatbot !== void 0 ? _activeThread_chatbot : activeChatbot;\n    const chatbotSystemPrompts = (0,_lib_actions__WEBPACK_IMPORTED_MODULE_2__.formatSystemPrompts)(chatbotData === null || chatbotData === void 0 ? void 0 : chatbotData.prompts);\n    const userPreferencesPrompts = chatbotData ? [\n        (0,_lib_constants_prompts__WEBPACK_IMPORTED_MODULE_3__.setDefaultUserPreferencesPrompt)(chatbotData)\n    ] : [];\n    /**\n\t * @description\n\t * Format all User prompts and AI 'assistant' messages.\n\t * */ const userAndAssistantMessages = activeThread ? messagesFromDB.map((m)=>({\n            ...m,\n            id: m.messageId,\n            role: m.role,\n            content: m.content,\n            createdAt: m.createdAt\n        })) : [];\n    /**\n\t * @description\n\t * Concatenate all Masterbots system prompts to pass it to chat context. This represents the initial/continuing state of the chat.\n\t * The system prompts is the identify of each Masterbot and how this will interact with Users. Prompt order is important to provide a good user experience.\n\t *\n\t * **Prompt Formatting:**\n\t *\n\t * 1. Masterbot Expertise.\n\t * 2. Masterbot Default or User Preferences Config. Instructions.\n\t * 3. Masterbot Final Enhancer (IQ) Instructions.\n\t * 4. Masterbot Output Instructions (Goes before appending the new message).\n\t * 5. Masterbot Examples (Goes before appending the new message).\n\t * */ const systemPrompts = chatbotSystemPrompts.length && userPreferencesPrompts.length ? [\n        chatbotSystemPrompts[0],\n        ...userPreferencesPrompts,\n        chatbotSystemPrompts[1]\n    ].filter((prompt)=>prompt !== undefined) : [];\n    /**\n\t * @description\n\t * Concatenate all message to pass it to chat UI component. This list is the initial state of the chat UI and updates on every new message with `allMessages`.\n\t *\n\t * **Prompt Formatting:**\n\t *\n\t * 1. Masterbot Expertise.\n\t * 2. Masterbot Default or User Preferences Config. Instructions.\n\t * 3. Masterbot Final Enhancer (IQ) Instructions.\n\t * 4. Masterbot Output Instructions.\n\t * 5. Conversation between user and assistant.\n\t * */ // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n    const initialMessages = (0,react__WEBPACK_IMPORTED_MODULE_23__.useMemo)({\n        \"MBChatProvider.useMemo[initialMessages]\": ()=>systemPrompts.concat(userAndAssistantMessages)\n    }[\"MBChatProvider.useMemo[initialMessages]\"], [\n        activeChatbot,\n        activeThread\n    ]);\n    const threadId = isContinuousThread ? randomThreadId.current : (activeThread === null || activeThread === void 0 ? void 0 : activeThread.threadId) || randomThreadId.current;\n    const chatbot = (activeThread === null || activeThread === void 0 ? void 0 : activeThread.chatbot) || activeChatbot;\n    const resolveThreadId = (params)=>{\n        const { isContinuousThread, randomThreadId, threadId, activeThreadId } = params;\n        if (isContinuousThread) return randomThreadId;\n        if (isNewChat) return threadId;\n        return activeThreadId;\n    };\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_22__.useSearchParams)();\n    const messageAttachments = (0,react__WEBPACK_IMPORTED_MODULE_23__.useRef)([]);\n    const clickedContentRef = (0,react__WEBPACK_IMPORTED_MODULE_23__.useRef)('');\n    const dbKeys = (0,_lib_hooks_use_chat_attachments__WEBPACK_IMPORTED_MODULE_6__.getUserIndexedDBKeys)(session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.id);\n    const indexedDBActions = (0,_lib_hooks_use_indexed_db__WEBPACK_IMPORTED_MODULE_8__.useIndexedDB)(dbKeys);\n    /**\n\t * Custom function to check if the current URL has a specific search param. This has been created as this due to the fact that\n\t * the `useSearchParams` hook does not update the URL when the page is reloaded and nextjs/react is unable to know the latest state\n\t * even though that we pass it and check.\n\t *\n\t *\n\t * @returns The check and params objects to check what are the current search params. It can be expanded in the future to check for more params.\n\t */ const getCurrentSearchParams = ()=>{\n        const recentSearchParams = new URLSearchParams(window.location.search);\n        const continuousThreadId = recentSearchParams.get('continuousThreadId');\n        return {\n            checks: {\n                isContinuingThread: Boolean(continuousThreadId)\n            },\n            params: {\n                continuousThreadId: continuousThreadId\n            }\n        };\n    };\n    const useChatConfig = {\n        initialMessages,\n        id: threadId,\n        // TODO: Check this experimental feature: https://sdk.vercel.ai/docs/reference/ai-sdk-ui/use-chat#experimental_prepare-request-body\n        // ? We might need it depending what the AI returns to us and what kind of data it has... this is might be useful for:\n        // ? - Web Search (Tool + Global)\n        // ? - Any additional tool with multiple steps or user decisions and react according to them...\n        // experimental_prepareRequestBody\n        body: {\n            id: threadId,\n            model: selectedModel,\n            clientType,\n            webSearch,\n            isPowerUp\n        }\n    };\n    const { input, messages, isLoading, stop, append, reload, setInput, setMessages } = (0,_ai_sdk_react__WEBPACK_IMPORTED_MODULE_26__.useChat)({\n        ...useChatConfig,\n        // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n        async onResponse (response) {\n            if (response.status >= 400) {\n                customSonner({\n                    type: 'error',\n                    text: response.statusText\n                });\n                if (isNewChat) {\n                    var _session_user;\n                    await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.deleteThread)({\n                        threadId,\n                        jwt: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.hasuraJwt,\n                        userId: session === null || session === void 0 ? void 0 : session.user.id\n                    });\n                }\n            }\n        },\n        // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n        async onFinish (message, options) {\n            try {\n                var _session_user, _finalMessage_parts_find, _finalMessage_parts;\n                if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                    customSonner({\n                        type: 'info',\n                        text: \"Ai generation finished, reason: \".concat(options.finishReason)\n                    });\n                }\n                const finalMessage = {\n                    ...message\n                };\n                //? Handle generated image files if present\n                if (options.files && options.files.length > 0) {\n                    finalMessage.parts = options.files.map({\n                        \"MBChatProvider.useChat\": (file)=>({\n                                type: 'file',\n                                data: file.base64,\n                                mimeType: file.mimeType\n                            })\n                    }[\"MBChatProvider.useChat\"]);\n                    if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                        customSonner({\n                            type: 'info',\n                            text: 'Generated image(s)'\n                        });\n                    }\n                }\n                //? Check if the generation was cut off\n                const isCutOff = [\n                    'length',\n                    'content-filter',\n                    'error',\n                    'unknown'\n                ].includes(options.finishReason);\n                setIsCutOff(isCutOff);\n                if (isCutOff) {\n                    (0,_lib_sentry__WEBPACK_IMPORTED_MODULE_14__.logErrorToSentry)('Generation was cut off', {\n                        error: new Error('The AI generation was cut off. Click on \"Continue\" to finish the response.'),\n                        message: 'Ai failed to finish generate the message.',\n                        level: 'warning',\n                        extra: {\n                            threadSlug: activeThread === null || activeThread === void 0 ? void 0 : activeThread.slug,\n                            userId: session === null || session === void 0 ? void 0 : session.user.id,\n                            chatbotName: activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name,\n                            attachments: messageAttachments.current\n                        }\n                    });\n                    customSonner({\n                        type: 'continue',\n                        text: 'The AI generation was cut off. Click on \"Continue\" to finish the response.'\n                    });\n                }\n                if (options.finishReason === 'error') {\n                    (0,_lib_sentry__WEBPACK_IMPORTED_MODULE_14__.logErrorToSentry)('Error saving new message', {\n                        error: new Error('Error saving new message'),\n                        message: 'Failed to save the Masterbot message.',\n                        level: 'warning',\n                        extra: {\n                            threadSlug: activeThread === null || activeThread === void 0 ? void 0 : activeThread.slug,\n                            userId: session === null || session === void 0 ? void 0 : session.user.id,\n                            chatbotName: activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name,\n                            attachments: messageAttachments.current.map({\n                                \"MBChatProvider.useChat\": (att)=>({\n                                        name: att.name,\n                                        size: att.size,\n                                        contentType: att.contentType\n                                    })\n                            }[\"MBChatProvider.useChat\"])\n                        }\n                    });\n                    customSonner({\n                        type: 'error',\n                        text: 'Failed to finish communication with the Masterbot. Please try again.'\n                    });\n                    if (isNewChat) {\n                        var _session_user1;\n                        await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.deleteThread)({\n                            threadId: activeThread === null || activeThread === void 0 ? void 0 : activeThread.threadId,\n                            jwt: session === null || session === void 0 ? void 0 : (_session_user1 = session.user) === null || _session_user1 === void 0 ? void 0 : _session_user1.hasuraJwt,\n                            userId: session === null || session === void 0 ? void 0 : session.user.id\n                        });\n                    }\n                    return;\n                }\n                const aiChatThreadId = resolveThreadId({\n                    isContinuousThread,\n                    randomThreadId: randomThreadId.current,\n                    threadId,\n                    activeThreadId: activeThread === null || activeThread === void 0 ? void 0 : activeThread.threadId\n                });\n                const userMessageId = crypto.randomUUID();\n                const assistantMessageId = crypto.randomUUID();\n                // Saving attachments to indexedDB and attaching them to the message\n                const attachments = messageAttachments.current;\n                const newAttachments = attachments ? attachments.map({\n                    \"MBChatProvider.useChat\": (attachment)=>({\n                            ...attachment,\n                            // We make the relationship of the attachment with the user and assistant messages, making it flexible\n                            messageIds: [\n                                ...(attachment === null || attachment === void 0 ? void 0 : attachment.messageIds) || [],\n                                userMessageId,\n                                assistantMessageId\n                            ]\n                        })\n                }[\"MBChatProvider.useChat\"]) : [];\n                for (const attachment of newAttachments){\n                    try {\n                        indexedDBActions.updateItem(attachment.id, attachment);\n                    } catch (error) {\n                        console.error('Error saving attachment: ', error);\n                        indexedDBActions.addItem(attachment);\n                    }\n                }\n                messageAttachments.current = newAttachments;\n                const newBaseMessage = {\n                    threadId: aiChatThreadId !== null && aiChatThreadId !== void 0 ? aiChatThreadId : '',\n                    jwt: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.hasuraJwt\n                };\n                const curatedPreUserMessageSlug = userContentRef.current.toLocaleLowerCase().replace(/(explain more in-depth and in detail about |explain more in depth and in detail about |explain more in-depth about |explain more in depth about |can you provide a detailed explanation of )/g, '');\n                // ? assistant message with reasoning information\n                const assistantMessageThinking = (0,_lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__.hasReasoning)(finalMessage) ? {\n                    thinking: (_finalMessage_parts = finalMessage.parts) === null || _finalMessage_parts === void 0 ? void 0 : (_finalMessage_parts_find = _finalMessage_parts.find({\n                        \"MBChatProvider.useChat\": (msg)=>msg.type === 'reasoning'\n                    }[\"MBChatProvider.useChat\"])) === null || _finalMessage_parts_find === void 0 ? void 0 : _finalMessage_parts_find.reasoning\n                } : {};\n                const uploadNewMessages = {\n                    \"MBChatProvider.useChat.uploadNewMessages\": async ()=>{\n                        var _finalMessage_parts;\n                        // Generate unique slugs for both messages\n                        const userMessageSlug = await (0,_lib_url__WEBPACK_IMPORTED_MODULE_15__.generateUniqueSlug)(curatedPreUserMessageSlug, 'message');\n                        const assistantMessageSlug = await (0,_lib_url__WEBPACK_IMPORTED_MODULE_15__.generateUniqueSlug)(message.content, 'message');\n                        // Create new messages and save them to the database\n                        const [newUserMessage, newAssistantMessage] = [\n                            {\n                                ...newBaseMessage,\n                                messageId: userMessageId,\n                                slug: userMessageSlug,\n                                role: 'user',\n                                model: selectedModel,\n                                content: userContentRef.current,\n                                createdAt: new Date().toISOString()\n                            },\n                            {\n                                ...newBaseMessage,\n                                ...assistantMessageThinking,\n                                messageId: assistantMessageId,\n                                slug: assistantMessageSlug,\n                                role: 'assistant',\n                                model: selectedModel,\n                                content: finalMessage.content,\n                                createdAt: new Date(Date.now() + 1000).toISOString(),\n                                examples: ((_finalMessage_parts = finalMessage.parts) === null || _finalMessage_parts === void 0 ? void 0 : _finalMessage_parts.filter({\n                                    \"MBChatProvider.useChat.uploadNewMessages\": (part)=>part.type === 'file'\n                                }[\"MBChatProvider.useChat.uploadNewMessages\"])) || []\n                            }\n                        ];\n                        return await Promise.all([\n                            (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.saveNewMessage)(newUserMessage),\n                            (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.saveNewMessage)(newAssistantMessage)\n                        ]);\n                    }\n                }[\"MBChatProvider.useChat.uploadNewMessages\"];\n                let newThreadMessages = [];\n                try {\n                    newThreadMessages = await uploadNewMessages();\n                } catch (error) {\n                    console.error('Error generating message slugs: ', error);\n                    // ? If the error is due to duplicate key value, we retry the upload one more time to do the recursive check again\n                    // ! This might be an edge case now that we use drizzle for this query, but it is still a good practice to handle this error\n                    if (error.message.includes('duplicate key value')) {\n                        await uploadNewMessages();\n                    }\n                }\n                setState({\n                    isNewChat: false\n                });\n                const newSearchParams = new URLSearchParams(searchParams.toString());\n                const { checks } = getCurrentSearchParams();\n                if (checks.isContinuingThread) {\n                    // Remove continuousThreadId search param\n                    newSearchParams.delete('continuousThreadId');\n                    setIsContinuousThread(false);\n                }\n                lodash_throttle__WEBPACK_IMPORTED_MODULE_17___default()({\n                    \"MBChatProvider.useChat\": async ()=>{\n                        const newThread = activeThread ? {\n                            ...activeThread,\n                            messages: [\n                                ...activeThread.messages,\n                                ...newThreadMessages\n                            ],\n                            metadata: newAttachments.length ? {\n                                attachments: lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default()([\n                                    ...newAttachments,\n                                    ...activeThread.metadata.attachments || []\n                                ], 'id')\n                            } : undefined\n                        } : undefined;\n                        const thread = await updateActiveThread(newThread);\n                        if (isNewChat || isContinuousThread || thread.messages.length > 0 && thread.messages.length <= 2) {\n                            var _activeChatbot_categories__category, _activeChatbot_categories_;\n                            // console.log('thread', thread)\n                            const domain = (0,_lib_url__WEBPACK_IMPORTED_MODULE_15__.getCanonicalDomain)((activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name) || 'blankbot');\n                            const category = (activeChatbot === null || activeChatbot === void 0 ? void 0 : (_activeChatbot_categories_ = activeChatbot.categories[0]) === null || _activeChatbot_categories_ === void 0 ? void 0 : (_activeChatbot_categories__category = _activeChatbot_categories_.category) === null || _activeChatbot_categories__category === void 0 ? void 0 : _activeChatbot_categories__category.name) || params.category;\n                            const chatbot = (activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name) || params.chatbot;\n                            const threadSlug = (params === null || params === void 0 ? void 0 : params.threadSlug) || thread.slug;\n                            navigateTo({\n                                urlType: 'threadUrl',\n                                shallow: true,\n                                navigationParams: {\n                                    type: 'personal',\n                                    category,\n                                    domain,\n                                    chatbot,\n                                    threadSlug\n                                }\n                            });\n                        }\n                        setLoadingState('finished');\n                        setActiveTool(undefined);\n                        setIsNewResponse(false);\n                    }\n                }[\"MBChatProvider.useChat\"], 140)();\n            } catch (error) {\n                console.error('Error saving new message: ', error);\n                (0,_lib_sentry__WEBPACK_IMPORTED_MODULE_14__.logErrorToSentry)('Error saving new message', {\n                    error,\n                    message: 'Failed to save the Masterbot message.',\n                    level: 'error',\n                    extra: {\n                        threadSlug: activeThread === null || activeThread === void 0 ? void 0 : activeThread.slug,\n                        userId: session === null || session === void 0 ? void 0 : session.user.id,\n                        chatbotName: activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name,\n                        attachments: messageAttachments.current\n                    }\n                });\n                customSonner({\n                    type: 'error',\n                    text: 'Failed to save the Masterbot message. Please try again.'\n                });\n                if (isNewChat) {\n                    var _session_user2;\n                    await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.deleteThread)({\n                        threadId,\n                        jwt: session === null || session === void 0 ? void 0 : (_session_user2 = session.user) === null || _session_user2 === void 0 ? void 0 : _session_user2.hasuraJwt,\n                        userId: session === null || session === void 0 ? void 0 : session.user.id\n                    });\n                }\n            } finally{\n                // ? resetting refs\n                clickedContentRef.current = '';\n            }\n        },\n        // @ts-ignore\n        onToolCall (param) {\n            let { toolCall } = param;\n            console.log('Tool call:', toolCall);\n            if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                customSonner({\n                    type: 'info',\n                    text: \"Tool call executed: \".concat(toolCall.toolName)\n                });\n            }\n            setActiveTool(toolCall);\n        },\n        // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n        async onError (error) {\n            console.error('Error in chat: ', error);\n            (0,_lib_sentry__WEBPACK_IMPORTED_MODULE_14__.logErrorToSentry)('Error in the chat', {\n                error,\n                message: 'Failed to complete chat.',\n                level: 'error',\n                extra: {\n                    threadSlug: activeThread === null || activeThread === void 0 ? void 0 : activeThread.slug,\n                    userId: session === null || session === void 0 ? void 0 : session.user.id,\n                    chatbotName: activeChatbot === null || activeChatbot === void 0 ? void 0 : activeChatbot.name,\n                    attachments: messageAttachments.current\n                }\n            });\n            customSonner({\n                type: 'error',\n                text: 'Failed to send message. Please try again.'\n            });\n            if (isNewChat) {\n                var _session_user;\n                await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.deleteThread)({\n                    threadId,\n                    jwt: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.hasuraJwt,\n                    userId: session === null || session === void 0 ? void 0 : session.user.id\n                });\n            }\n            setLoadingState(undefined);\n            setActiveTool(undefined);\n            setIsNewResponse(false);\n            clickedContentRef.current = '';\n        }\n    });\n    /**\n\t * @description\n\t * All messages coming from DB and continuing the chat, omitting the system prompts to provide to the LLM context.\n\t */ const allMessages = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default()(initialMessages === null || initialMessages === void 0 ? void 0 : (_initialMessages_concat = initialMessages.concat(messages)) === null || _initialMessages_concat === void 0 ? void 0 : _initialMessages_concat.concat((activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_messages = activeThread.messages) === null || _activeThread_messages === void 0 ? void 0 : _activeThread_messages.map((msg)=>({\n            ...msg,\n            id: msg.messageId,\n            role: msg.role\n        }))) || []), _lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__.verifyDuplicateMessage).filter(Boolean).filter((m)=>m.role !== 'system').sort((a, b)=>{\n        // Extract timestamps, defaulting to 0 if missing\n        const timeA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n        const timeB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n        // If timestamps are different, use them for sorting (chronological order)\n        if (timeA !== timeB) {\n            return timeA - timeB;\n        }\n        // If timestamps are the same or both missing:\n        // 1. Find previous message(s) to determine conversation flow and\n        // 2. Ensure assistant message appears after its corresponding user message\n        if (a.role === 'assistant' && b.role === 'assistant') {\n            // If both are assistant messages, maintain chronological order and\n            // ensures multiple assistant messages appear in the correct sequence\n            return timeA - timeB || 0;\n        }\n        // Keep user messages before assistant messages when timestamps are identical\n        if (a.role === 'user' && b.role === 'assistant') return -1;\n        if (a.role === 'assistant' && b.role === 'user') return 1;\n        // If both have the same role, maintain original order\n        return 0;\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_23__.useEffect)({\n        \"MBChatProvider.useEffect\": ()=>{\n            // Resetting the chat when the popup is closed\n            if (!activeThread && !isOpenPopup) {\n                resetState();\n            }\n            if (!isOpenPopup) {\n                randomThreadId.current = crypto.randomUUID() //* Generates a new thread ID\n                ;\n            }\n            if (!activeThread) return;\n            updateNewThread();\n        }\n    }[\"MBChatProvider.useEffect\"], [\n        activeThread,\n        isOpenPopup\n    ]);\n    const resetState = ()=>{\n        setState({\n            isInitLoaded: false,\n            isNewChat: true,\n            messagesFromDB: []\n        });\n        setInput('');\n        setMessages([]);\n    };\n    // biome-ignore lint/correctness/useExhaustiveDependencies: not required\n    (0,react__WEBPACK_IMPORTED_MODULE_23__.useEffect)({\n        \"MBChatProvider.useEffect\": ()=>{\n            // reset all states when unmounting the context hook\n            return resetState;\n        }\n    }[\"MBChatProvider.useEffect\"], []);\n    const updateNewThread = ()=>{\n        // console.log('activeThread.messages length --> ', activeThread?.messages)\n        const isNewChatState = Boolean(!allMessages.length || !(activeThread === null || activeThread === void 0 ? void 0 : activeThread.messages.length));\n        setState({\n            isNewChat: isNewChatState\n        });\n        return isNewChatState;\n    };\n    const updateActiveThread = async (newThread)=>{\n        let thread = newThread;\n        if (!thread || !thread.slug) {\n            var _session_user;\n            thread = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.getThread)({\n                threadId,\n                isPersonal: true,\n                jwt: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.hasuraJwt\n            });\n        }\n        if (thread) {\n            setActiveThread(thread);\n            setState({\n                isNewChat: Boolean(!allMessages.length || !thread.messages.length),\n                messagesFromDB: thread.messages\n            });\n        }\n        return thread;\n    };\n    const tunningUserContent = async (userMessage, thread)=>{\n        var _activeThread_thread;\n        setLoadingState('digesting');\n        let previousAiUserMessages = [];\n        if (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread = activeThread.thread) === null || _activeThread_thread === void 0 ? void 0 : _activeThread_thread.messages) {\n            previousAiUserMessages = activeThread.thread.messages.map((msg)=>({\n                    id: msg.messageId,\n                    role: msg.role,\n                    content: msg.content,\n                    createdAt: msg.createdAt\n                })).filter((msg)=>msg.role === 'user');\n        }\n        const userPrompt = {\n            content: userMessage.content,\n            allUserMessages: previousAiUserMessages.concat(allMessages)\n        };\n        const { content, error } = await (0,_lib_helpers_ai_classification__WEBPACK_IMPORTED_MODULE_4__.processUserMessage)(userPrompt, clientType, selectedModel);\n        // console.log('thread::tunninUserContent  --> ', thread)\n        if (thread) {\n            updateActiveThread({\n                ...thread,\n                messages: thread.messages.filter((m)=>m.content !== userPrompt.content)\n            });\n        }\n        userContentRef.current = content;\n    };\n    const isPreProcessing = Boolean(loadingState === null || loadingState === void 0 ? void 0 : loadingState.match(/processing|digesting|polishing/));\n    const formDisabled = !chatbot || isPreProcessing;\n    // we extend append function to add our system prompts\n    const appendWithMbContextPrompts = async (userMessage, chatRequestOptions)=>{\n        var _activeThread_metadata;\n        if (formDisabled) {\n            console.info('Form is disabled while processing, skipping submit of new message.');\n            return;\n        }\n        if (!(session === null || session === void 0 ? void 0 : session.user) || !chatbot) {\n            console.error('User is not logged in or session expired.');\n            customSonner({\n                type: 'error',\n                text: 'Failed to start conversation. Please reload and try again.'\n            });\n            return;\n        }\n        // * Loading: processing your request + opening pop-up...\n        messageAttachments.current = (chatRequestOptions === null || chatRequestOptions === void 0 ? void 0 : chatRequestOptions.experimental_attachments) || [];\n        setLoadingState('processing');\n        setIsNewResponse(true);\n        updateNewThread();\n        const defaultUserMessage = {\n            ...userMessage,\n            content: (0,_lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__.cleanPrompt)(userMessage.content),\n            slug: (0,mb_lib__WEBPACK_IMPORTED_MODULE_20__.toSlug)(userMessage.content),\n            role: 'user',\n            messageId: randomThreadId.current,\n            createdAt: new Date().toISOString(),\n            augmentedFrom: null,\n            examples: [],\n            threadId\n        };\n        // ! Optimistic won't update on time due the ID's are not totally formed hence,\n        // ! when it wants to attach related content it can't because the references doesn't exist\n        // ! at the time we pre-populate information.\n        // ! So, we need to wait for the response to be processed and then update the thread with the new message. (currently working)\n        // We need a temporal state object that can be replaced with the real state object (like a ref) for the thread to be able to update it optimistically\n        const optimisticThread = {\n            ...activeThread,\n            threadId,\n            chatbotId: chatbot === null || chatbot === void 0 ? void 0 : chatbot.chatbotId,\n            chatbot,\n            createdAt: new Date().toISOString(),\n            isApproved: false,\n            isBlocked: false,\n            // @ts-ignore\n            messages: lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default()([\n                ...allMessages,\n                defaultUserMessage\n            ], _lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__.verifyDuplicateMessage),\n            metadata: {\n                attachments: lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default()([\n                    ...messageAttachments.current || [],\n                    ...(activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_metadata = activeThread.metadata) === null || _activeThread_metadata === void 0 ? void 0 : _activeThread_metadata.attachments) || []\n                ], 'id')\n            },\n            thread: isContinuousThread ? (activeThread === null || activeThread === void 0 ? void 0 : activeThread.thread) || null : null,\n            userId: session === null || session === void 0 ? void 0 : session.user.id\n        };\n        const thread = await updateActiveThread(optimisticThread);\n        try {\n            await tunningUserContent(userMessage, thread);\n        // ! At this point, the UI respond and provides a feedback to the user... before it is now even showing the updated active thread, event though that it does update the active thread...\n        // TODO: improve response velocity here (split this fn to yet another cb fn? 🤔)\n        } catch (error) {\n            console.error('Error processing user message. Using og message. Error: ', error);\n        }\n        if (!isOpenPopup) {\n            setIsOpenPopup(true);\n        }\n        return await appendNewMessage(userMessage, chatRequestOptions);\n    };\n    const getMetadataLabels = // biome-ignore lint/correctness/useExhaustiveDependencies: I need to hear the chatbot and isPowerUp changes only\n    (0,react__WEBPACK_IMPORTED_MODULE_23__.useCallback)({\n        \"MBChatProvider.useCallback[getMetadataLabels]\": async ()=>{\n            var _chatMetadata_errors;\n            let chatMetadata;\n            try {\n                setLoadingState('polishing');\n                // console.log('isPowerUp', isPowerUp)\n                chatMetadata = await (0,_app_actions__WEBPACK_IMPORTED_MODULE_1__.getChatbotMetadata)({\n                    chatbot: chatbot === null || chatbot === void 0 ? void 0 : chatbot.chatbotId,\n                    isPowerUp\n                }, userContentRef.current, clientType);\n            // console.log('Full responses from ChatbotMetadata:', chatMetadata)\n            // * Loading: Polishing Ai request... 'polishing'\n            } catch (error) {\n                console.error('Error getting chatbot metadata:', error);\n                if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                    customSonner({\n                        type: 'error',\n                        text: error === null || error === void 0 ? void 0 : error.message\n                    });\n                }\n            }\n            if ((chatMetadata === null || chatMetadata === void 0 ? void 0 : (_chatMetadata_errors = chatMetadata.errors) === null || _chatMetadata_errors === void 0 ? void 0 : _chatMetadata_errors.length) && mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                customSonner({\n                    type: 'error',\n                    text: \"\".concat(chatMetadata.domainName, \":\\n\").concat(chatMetadata.errors.join('.\\n'))\n                });\n            }\n            return await (0,_lib_helpers_ai_classification__WEBPACK_IMPORTED_MODULE_4__.aiExampleClassification)({\n                chatMetadata,\n                customSonner\n            });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"MBChatProvider.useCallback[getMetadataLabels]\"], [\n        chatbot,\n        isPowerUp\n    ]);\n    const appendAsContinuousThread = async (userMessage)=>{\n        const optimisticUserMessage = {\n            ...userMessage,\n            id: randomThreadId.current\n        };\n        await appendWithMbContextPrompts(optimisticUserMessage);\n        return null;\n    };\n    const sendMessageFromResponse = async (param, callback)=>{\n        let { bulletContent, messageId } = param;\n        const fullMessage = bulletContent;\n        clickedContentRef.current = messageId;\n        await appendWithMbContextPrompts({\n            id: threadId,\n            content: fullMessage,\n            role: 'user'\n        }).finally(callback);\n    };\n    const toggleWebSearch = ()=>{\n        setWebSearch(!webSearch);\n    };\n    const appendNewMessage = async (userMessage, chatMessagesOptions)=>{\n        try {\n            var _activeThread_thread;\n            const chatbotMetadata = await getMetadataLabels();\n            const { checks: { isContinuingThread }, params: { continuousThreadId } } = getCurrentSearchParams();\n            const isNewThread = (!allMessages.length && isNewChat || isContinuingThread) && chatbot;\n            if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                console.info('Before appending a new message, we check the following to know if is new chat or not: ');\n                console.log('isNewChat guard --> ', isNewChat);\n                console.log('allMessages --> ', allMessages);\n                console.log('activeThread --> ', activeThread);\n                console.log('isContinuousThread --> ', isContinuingThread);\n                console.log('isNewThread (combining set of conditions when threads are created and continuing conversation in the same user session) --> ', isNewThread);\n            }\n            if (isNewThread) {\n                var _session_user;\n                const threadSlug = await (0,_lib_url__WEBPACK_IMPORTED_MODULE_15__.generateUniqueSlug)(userContentRef.current);\n                await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_16__.createThread)({\n                    threadId,\n                    slug: threadSlug,\n                    chatbotId: chatbot.chatbotId,\n                    // model: selectedModel as ModelsEnumEnum,\n                    parentThreadId: isContinuingThread ? continuousThreadId : undefined,\n                    jwt: session === null || session === void 0 ? void 0 : (_session_user = session.user) === null || _session_user === void 0 ? void 0 : _session_user.hasuraJwt\n                });\n            }\n            const chatMessagesToAppend = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_18___default()([\n                ...systemPrompts,\n                (0,_lib_constants_prompts__WEBPACK_IMPORTED_MODULE_3__.setOutputInstructionPrompt)(userContentRef.current),\n                {\n                    id: \"examples-\".concat((0,nanoid__WEBPACK_IMPORTED_MODULE_27__.nanoid)(10)),\n                    role: 'system',\n                    content: (0,_lib_constants_prompts__WEBPACK_IMPORTED_MODULE_3__.examplesPrompt)(chatbotMetadata)\n                }\n            ], _lib_helpers_ai_helpers__WEBPACK_IMPORTED_MODULE_5__.verifyDuplicateMessage);\n            setMessages(chatMessagesToAppend);\n            // What remedies are good for stress relieve?\n            if (mb_env__WEBPACK_IMPORTED_MODULE_19__.appConfig.features.devMode) {\n                console.log('chatMessagesToAppend --> ', chatMessagesToAppend);\n                console.log('Chatbot metadata --> ', chatbotMetadata);\n            }\n            let previousAiUserMessages = [];\n            if (activeThread === null || activeThread === void 0 ? void 0 : (_activeThread_thread = activeThread.thread) === null || _activeThread_thread === void 0 ? void 0 : _activeThread_thread.messages) {\n                previousAiUserMessages = activeThread.thread.messages.map((msg)=>({\n                        id: msg.messageId,\n                        role: msg.role,\n                        content: msg.content,\n                        createdAt: msg.createdAt\n                    })).filter((msg)=>msg.role === 'user');\n            }\n            setLoadingState('generating');\n            const appendResponse = await append({\n                ...userMessage,\n                content: !allMessages.length && isNewChat && chatbot ? userContentRef.current // improved user message\n                 : (0,_lib_constants_prompts__WEBPACK_IMPORTED_MODULE_3__.followingQuestionsPrompt)(userContentRef.current, previousAiUserMessages.concat(allMessages), clickedContentRef.current)\n            }, chatMessagesOptions);\n            return appendResponse;\n        } catch (error) {\n            setLoadingState(undefined);\n            stop();\n            console.error('Error appending new message: ', error);\n            customSonner({\n                type: 'error',\n                text: 'Failed to send the message to the Masterbot. Please try again.'\n            });\n            return null;\n        }\n    };\n    // console.log('loadingState --> ', loadingState)\n    // ? return [state, actions]\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MBChatContext.Provider, {\n        value: [\n            {\n                input,\n                isNewChat,\n                webSearch,\n                isLoading,\n                allMessages: allMessages,\n                initialMessages: initialMessages,\n                newChatThreadId: threadId\n            },\n            {\n                appendWithMbContextPrompts,\n                appendAsContinuousThread,\n                sendMessageFromResponse,\n                toggleWebSearch,\n                setMessages,\n                setInput,\n                append,\n                reload,\n                stop\n            }\n        ],\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/lib/hooks/use-mb-chat.tsx\",\n        lineNumber: 1034,\n        columnNumber: 3\n    }, this);\n}\n_s1(MBChatProvider, \"3teuAry1FPlHDK4B05QCUZhsGrM=\", false, function() {\n    return [\n        next_auth_react__WEBPACK_IMPORTED_MODULE_21__.useSession,\n        _lib_hooks_use_thread__WEBPACK_IMPORTED_MODULE_12__.useThread,\n        _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_11__.useSidebar,\n        _lib_hooks_use_thread_visibility__WEBPACK_IMPORTED_MODULE_13__.useThreadVisibility,\n        _useSonner__WEBPACK_IMPORTED_MODULE_24__.useSonner,\n        _lib_hooks_use_power_up__WEBPACK_IMPORTED_MODULE_10__.usePowerUp,\n        _lib_hooks_use_continue_generation__WEBPACK_IMPORTED_MODULE_7__.useContinueGeneration,\n        next_navigation__WEBPACK_IMPORTED_MODULE_22__.useParams,\n        _lib_hooks_use_model__WEBPACK_IMPORTED_MODULE_9__.useModel,\n        _barrel_optimize_names_useSetState_react_use__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n        next_navigation__WEBPACK_IMPORTED_MODULE_22__.useSearchParams,\n        _lib_hooks_use_indexed_db__WEBPACK_IMPORTED_MODULE_8__.useIndexedDB,\n        _ai_sdk_react__WEBPACK_IMPORTED_MODULE_26__.useChat\n    ];\n});\n_c = MBChatProvider;\nconst MBChatContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_23__.createContext)(undefined);\nvar _c;\n$RefreshReg$(_c, \"MBChatProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ob29rcy91c2UtbWItY2hhdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWtEO0FBQ0M7QUFNbkI7QUFJUTtBQU1QO0FBSVE7QUFDa0M7QUFDbEI7QUFDVDtBQUNLO0FBQ0Q7QUFDRjtBQUNxQjtBQUN4QjtBQUNtQjtBQU14QztBQVNrQztBQU9uQjtBQUFBO0FBQ1A7QUFFSDtBQUNBO0FBQ2E7QUFDZ0I7QUFROUM7QUFDeUI7QUFDQTtBQUVoQyxTQUFTMkM7O0lBQ2YsTUFBTUMsVUFBVVAsa0RBQVVBLENBQUNRO0lBQzNCLElBQUksQ0FBQ0QsU0FBUztRQUNiLE1BQU0sSUFBSUUsTUFBTTtJQUNqQjtJQUNBLE9BQU9GO0FBQ1I7R0FOZ0JEO0FBUVQsU0FBU0ksZUFBZSxLQUEyQztRQUEzQyxFQUFFQyxRQUFRLEVBQWlDLEdBQTNDO1FBd0hNQyxlQWthakNDLHdCQUhGOztJQXRoQkQsTUFBTSxFQUFFQyxNQUFNRixPQUFPLEVBQUUsR0FBR2pCLDREQUFVQTtJQUNwQyxNQUFNLEVBQ0xvQixXQUFXLEVBQ1hGLFlBQVksRUFDWkcsU0FBUyxFQUNUQyxZQUFZLEVBQ1pDLFlBQVksRUFDWkMsZUFBZSxFQUNmQyxnQkFBZ0IsRUFDaEJDLGNBQWMsRUFDZEMsYUFBYSxFQUNiQyxlQUFlLEVBQ2YsR0FBRzNDLGlFQUFTQTtJQUNiLE1BQU0sRUFBRTRDLGFBQWEsRUFBRUMsVUFBVSxFQUFFLEdBQUc5QyxtRUFBVUE7SUFDaEQsTUFBTStDLGlCQUFpQnZCLDhDQUFNQSxDQUFTO0lBQ3RDLE1BQU13QixpQkFBaUJ4Qiw4Q0FBTUEsQ0FBU3lCLE9BQU9DLFVBQVU7SUFDdkQsTUFBTSxFQUFFQyxrQkFBa0IsRUFBRUMscUJBQXFCLEVBQUUsR0FBR2xELHNGQUFtQkE7SUFDekUsTUFBTSxFQUFFbUQsWUFBWSxFQUFFLEdBQUczQixzREFBU0E7SUFDbEMsTUFBTSxFQUFFNEIsU0FBUyxFQUFFLEdBQUd2RCxvRUFBVUE7SUFDaEMsTUFBTSxFQUFFd0QsV0FBVyxFQUFFLEdBQUczRCx5RkFBcUJBO0lBQzdDLE1BQU00RCxTQUFTdkMsMkRBQVNBO0lBTXhCLE1BQU0sRUFBRXdDLGFBQWEsRUFBRUMsVUFBVSxFQUFFLEdBQUc1RCw4REFBUUE7SUFFOUMseUZBQXlGO0lBQ3pGLE1BQU0sQ0FBQyxFQUFFNkQsY0FBYyxFQUFFQyxTQUFTLEVBQUUsRUFBRUMsU0FBUyxHQUFHcEMseUZBQVdBLENBSzFEO1FBQ0ZxQyxjQUFjO1FBQ2R6QixXQUFXO1FBQ1hzQixnQkFBZ0J6QixDQUFBQSx5QkFBQUEsbUNBQUFBLGFBQWM2QixRQUFRLEtBQUksRUFBRTtRQUM1Q0gsV0FBVztJQUNaO1FBQ29CMUI7SUFBcEIsTUFBTThCLGNBQWM5QixDQUFBQSx3QkFBQUEseUJBQUFBLG1DQUFBQSxhQUFjK0IsT0FBTyxjQUFyQi9CLG1DQUFBQSx3QkFBMEJXO0lBQzlDLE1BQU1xQix1QkFBb0NqRixpRUFBbUJBLENBQzVEK0Usd0JBQUFBLGtDQUFBQSxZQUFhRyxPQUFPO0lBRXJCLE1BQU1DLHlCQUFzQ0osY0FDekM7UUFBQzVFLHVGQUErQkEsQ0FBQzRFO0tBQWEsR0FDOUMsRUFBRTtJQUNMOzs7SUFHRyxHQUNILE1BQU1LLDJCQUF3Q25DLGVBQzNDeUIsZUFBZVcsR0FBRyxDQUFDLENBQUNDLElBQU87WUFDM0IsR0FBR0EsQ0FBQztZQUNKQyxJQUFJRCxFQUFFRSxTQUFTO1lBQ2ZDLE1BQU1ILEVBQUVHLElBQUk7WUFDWkMsU0FBU0osRUFBRUksT0FBTztZQUNsQkMsV0FBV0wsRUFBRUssU0FBUztRQUN2QixNQUNDLEVBQUU7SUFDTDs7Ozs7Ozs7Ozs7O0lBWUcsR0FDSCxNQUFNQyxnQkFDTFgscUJBQXFCWSxNQUFNLElBQUlWLHVCQUF1QlUsTUFBTSxHQUN6RDtRQUNBWixvQkFBb0IsQ0FBQyxFQUFFO1dBQ3BCRTtRQUNIRixvQkFBb0IsQ0FBQyxFQUFFO0tBQ3ZCLENBQUNhLE1BQU0sQ0FBQyxDQUFDQyxTQUFXQSxXQUFXQyxhQUMvQixFQUFFO0lBQ047Ozs7Ozs7Ozs7O0lBV0csR0FDSCx5RUFBeUU7SUFDekUsTUFBTUMsa0JBQStCM0QsK0NBQU9BO21EQUMzQyxJQUFNc0QsY0FBY00sTUFBTSxDQUFDZDtrREFDM0I7UUFBQ3hCO1FBQWVYO0tBQWE7SUFFOUIsTUFBTWtELFdBQVdqQyxxQkFDZEgsZUFBZXFDLE9BQU8sR0FDdEJuRCxDQUFBQSx5QkFBQUEsbUNBQUFBLGFBQWNrRCxRQUFRLEtBQUlwQyxlQUFlcUMsT0FBTztJQUNuRCxNQUFNcEIsVUFBVS9CLENBQUFBLHlCQUFBQSxtQ0FBQUEsYUFBYytCLE9BQU8sS0FBSXBCO0lBRXpDLE1BQU15QyxrQkFBa0IsQ0FBQzlCO1FBTXhCLE1BQU0sRUFBRUwsa0JBQWtCLEVBQUVILGNBQWMsRUFBRW9DLFFBQVEsRUFBRUcsY0FBYyxFQUFFLEdBQ3JFL0I7UUFDRCxJQUFJTCxvQkFBb0IsT0FBT0g7UUFDL0IsSUFBSVksV0FBVyxPQUFPd0I7UUFDdEIsT0FBT0c7SUFDUjtJQUVBLE1BQU1DLGVBQWV0RSxpRUFBZUE7SUFDcEMsTUFBTXVFLHFCQUFxQmpFLDhDQUFNQSxDQUFtQixFQUFFO0lBQ3RELE1BQU1rRSxvQkFBb0JsRSw4Q0FBTUEsQ0FBUztJQUN6QyxNQUFNbUUsU0FBU2hHLHFGQUFvQkEsQ0FBQ3NDLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVMyRCxJQUFJLGNBQWIzRCxvQ0FBQUEsY0FBZXVDLEVBQUU7SUFDckQsTUFBTXFCLG1CQUFtQmhHLHVFQUFZQSxDQUFDOEY7SUFFdEM7Ozs7Ozs7RUFPQyxHQUNELE1BQU1HLHlCQUF5QjtRQUM5QixNQUFNQyxxQkFBcUIsSUFBSUMsZ0JBQWdCQyxPQUFPQyxRQUFRLENBQUNDLE1BQU07UUFDckUsTUFBTUMscUJBQXFCTCxtQkFBbUJNLEdBQUcsQ0FBQztRQUVsRCxPQUFPO1lBQ05DLFFBQVE7Z0JBQ1BDLG9CQUFvQkMsUUFBUUo7WUFDN0I7WUFDQTVDLFFBQVE7Z0JBQ1A0QyxvQkFBb0JBO1lBQ3JCO1FBQ0Q7SUFDRDtJQUVBLE1BQU1LLGdCQUF5QztRQUM5Q3ZCO1FBQ0FWLElBQUlZO1FBQ0osbUlBQW1JO1FBQ25JLHNIQUFzSDtRQUN0SCxpQ0FBaUM7UUFDakMsK0ZBQStGO1FBQy9GLGtDQUFrQztRQUNsQ3NCLE1BQU07WUFDTGxDLElBQUlZO1lBQ0p1QixPQUFPbEQ7WUFDUEM7WUFDQXJCO1lBQ0FpQjtRQUNEO0lBQ0Q7SUFDQSxNQUFNLEVBQ0xzRCxLQUFLLEVBQ0w3QyxRQUFRLEVBQ1I4QyxTQUFTLEVBQ1RDLElBQUksRUFDSkMsTUFBTSxFQUNOQyxNQUFNLEVBQ05DLFFBQVEsRUFDUkMsV0FBVyxFQUNYLEdBQUd4Ryx1REFBT0EsQ0FBQztRQUNYLEdBQUcrRixhQUFhO1FBQ2hCLDREQUE0RDtRQUM1RCxNQUFNVSxZQUFXQyxRQUFhO1lBQzdCLElBQUlBLFNBQVNDLE1BQU0sSUFBSSxLQUFLO2dCQUMzQmhFLGFBQWE7b0JBQUVpRSxNQUFNO29CQUFTQyxNQUFNSCxTQUFTSSxVQUFVO2dCQUFDO2dCQUV4RCxJQUFJNUQsV0FBVzt3QkFHUjNCO29CQUZOLE1BQU0xQiwrREFBWUEsQ0FBQzt3QkFDbEI2RTt3QkFDQXFDLEdBQUcsRUFBRXhGLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVMyRCxJQUFJLGNBQWIzRCxvQ0FBQUEsY0FBZXlGLFNBQVM7d0JBQzdCQyxNQUFNLEVBQUUxRixvQkFBQUEsOEJBQUFBLFFBQVMyRCxJQUFJLENBQUNwQixFQUFFO29CQUN6QjtnQkFDRDtZQUNEO1FBQ0Q7UUFDQSw0REFBNEQ7UUFDNUQsTUFBTW9ELFVBQVNDLE9BQXVCLEVBQUVDLE9BQVk7WUFDbkQsSUFBSTtvQkE2SEc3RixlQVlPOEYsMEJBQUFBO2dCQXhJYixJQUFJbEgsOENBQVNBLENBQUNtSCxRQUFRLENBQUNDLE9BQU8sRUFBRTtvQkFDL0I1RSxhQUFhO3dCQUNaaUUsTUFBTTt3QkFDTkMsTUFBTSxtQ0FBd0QsT0FBckJPLFFBQVFJLFlBQVk7b0JBQzlEO2dCQUNEO2dCQUNBLE1BQU1ILGVBQWU7b0JBQUUsR0FBR0YsT0FBTztnQkFBQztnQkFFbEMsMkNBQTJDO2dCQUMzQyxJQUFJQyxRQUFRSyxLQUFLLElBQUlMLFFBQVFLLEtBQUssQ0FBQ3JELE1BQU0sR0FBRyxHQUFHO29CQUM5Q2lELGFBQWFLLEtBQUssR0FBR04sUUFBUUssS0FBSyxDQUFDN0QsR0FBRztrREFDckMsQ0FBQytELE9BS007Z0NBQ05mLE1BQU07Z0NBQ05uRixNQUFNa0csS0FBS0MsTUFBTTtnQ0FDakJDLFVBQVVGLEtBQUtFLFFBQVE7NEJBQ3hCOztvQkFFRCxJQUFJMUgsOENBQVNBLENBQUNtSCxRQUFRLENBQUNDLE9BQU8sRUFBRTt3QkFDL0I1RSxhQUFhOzRCQUNaaUUsTUFBTTs0QkFDTkMsTUFBTTt3QkFDUDtvQkFDRDtnQkFDRDtnQkFFQSx1Q0FBdUM7Z0JBQ3ZDLE1BQU1pQixXQUFXO29CQUNoQjtvQkFDQTtvQkFDQTtvQkFDQTtpQkFDQSxDQUFDQyxRQUFRLENBQUNYLFFBQVFJLFlBQVk7Z0JBQy9CM0UsWUFBWWlGO2dCQUNaLElBQUlBLFVBQVU7b0JBQ2JySSw4REFBZ0JBLENBQUMsMEJBQTBCO3dCQUMxQ3VJLE9BQU8sSUFBSTVHLE1BQ1Y7d0JBRUQrRixTQUFTO3dCQUNUYyxPQUFPO3dCQUNQQyxPQUFPOzRCQUNOQyxVQUFVLEVBQUUzRyx5QkFBQUEsbUNBQUFBLGFBQWM0RyxJQUFJOzRCQUM5Qm5CLE1BQU0sRUFBRTFGLG9CQUFBQSw4QkFBQUEsUUFBUzJELElBQUksQ0FBQ3BCLEVBQUU7NEJBQ3hCdUUsV0FBVyxFQUFFbEcsMEJBQUFBLG9DQUFBQSxjQUFlbUcsSUFBSTs0QkFDaENDLGFBQWF4RCxtQkFBbUJKLE9BQU87d0JBQ3hDO29CQUNEO29CQUNBaEMsYUFBYTt3QkFDWmlFLE1BQU07d0JBQ05DLE1BQU07b0JBQ1A7Z0JBQ0Q7Z0JBQ0EsSUFBSU8sUUFBUUksWUFBWSxLQUFLLFNBQVM7b0JBQ3JDL0gsOERBQWdCQSxDQUFDLDRCQUE0Qjt3QkFDNUN1SSxPQUFPLElBQUk1RyxNQUFNO3dCQUNqQitGLFNBQVM7d0JBQ1RjLE9BQU87d0JBQ1BDLE9BQU87NEJBQ05DLFVBQVUsRUFBRTNHLHlCQUFBQSxtQ0FBQUEsYUFBYzRHLElBQUk7NEJBQzlCbkIsTUFBTSxFQUFFMUYsb0JBQUFBLDhCQUFBQSxRQUFTMkQsSUFBSSxDQUFDcEIsRUFBRTs0QkFDeEJ1RSxXQUFXLEVBQUVsRywwQkFBQUEsb0NBQUFBLGNBQWVtRyxJQUFJOzRCQUNoQ0MsYUFBYXhELG1CQUFtQkosT0FBTyxDQUFDZixHQUFHOzBEQUFDLENBQUM0RSxNQUFTO3dDQUNyREYsTUFBTUUsSUFBSUYsSUFBSTt3Q0FDZEcsTUFBTUQsSUFBSUMsSUFBSTt3Q0FDZEMsYUFBYUYsSUFBSUUsV0FBVztvQ0FDN0I7O3dCQUNEO29CQUNEO29CQUNBL0YsYUFBYTt3QkFDWmlFLE1BQU07d0JBQ05DLE1BQU07b0JBQ1A7b0JBRUEsSUFBSTNELFdBQVc7NEJBR1IzQjt3QkFGTixNQUFNMUIsK0RBQVlBLENBQUM7NEJBQ2xCNkUsUUFBUSxFQUFFbEQseUJBQUFBLG1DQUFBQSxhQUFja0QsUUFBUTs0QkFDaENxQyxHQUFHLEVBQUV4RixvQkFBQUEsK0JBQUFBLGlCQUFBQSxRQUFTMkQsSUFBSSxjQUFiM0QscUNBQUFBLGVBQWV5RixTQUFTOzRCQUM3QkMsTUFBTSxFQUFFMUYsb0JBQUFBLDhCQUFBQSxRQUFTMkQsSUFBSSxDQUFDcEIsRUFBRTt3QkFDekI7b0JBQ0Q7b0JBRUE7Z0JBQ0Q7Z0JBQ0EsTUFBTTZFLGlCQUFpQi9ELGdCQUFnQjtvQkFDdENuQztvQkFDQUgsZ0JBQWdCQSxlQUFlcUMsT0FBTztvQkFDdENEO29CQUNBRyxjQUFjLEVBQUVyRCx5QkFBQUEsbUNBQUFBLGFBQWNrRCxRQUFRO2dCQUN2QztnQkFFQSxNQUFNa0UsZ0JBQWdCckcsT0FBT0MsVUFBVTtnQkFDdkMsTUFBTXFHLHFCQUFxQnRHLE9BQU9DLFVBQVU7Z0JBRTVDLG9FQUFvRTtnQkFDcEUsTUFBTStGLGNBQWN4RCxtQkFBbUJKLE9BQU87Z0JBQzlDLE1BQU1tRSxpQkFBaUJQLGNBQ3BCQSxZQUFZM0UsR0FBRzs4Q0FBQyxDQUFDbUYsYUFBZ0I7NEJBQ2pDLEdBQUdBLFVBQVU7NEJBQ2Isc0dBQXNHOzRCQUN0R0MsWUFBWTttQ0FDUEQsQ0FBQUEsdUJBQUFBLGlDQUFBQSxXQUFZQyxVQUFVLEtBQUksRUFBRTtnQ0FDaENKO2dDQUNBQzs2QkFDQTt3QkFDRjsrQ0FDQyxFQUFFO2dCQUVMLEtBQUssTUFBTUUsY0FBY0QsZUFBZ0I7b0JBQ3hDLElBQUk7d0JBQ0gzRCxpQkFBaUI4RCxVQUFVLENBQUNGLFdBQVdqRixFQUFFLEVBQUVpRjtvQkFDNUMsRUFBRSxPQUFPZixPQUFPO3dCQUNma0IsUUFBUWxCLEtBQUssQ0FBQyw2QkFBNkJBO3dCQUMzQzdDLGlCQUFpQmdFLE9BQU8sQ0FBQ0o7b0JBQzFCO2dCQUNEO2dCQUNBaEUsbUJBQW1CSixPQUFPLEdBQUdtRTtnQkFFN0IsTUFBTU0saUJBQWdEO29CQUNyRDFFLFVBQVVpRSwyQkFBQUEsNEJBQUFBLGlCQUFrQjtvQkFDNUI1QixHQUFHLEVBQUV4RixvQkFBQUEsK0JBQUFBLGdCQUFBQSxRQUFTMkQsSUFBSSxjQUFiM0Qsb0NBQUFBLGNBQWV5RixTQUFTO2dCQUM5QjtnQkFFQSxNQUFNcUMsNEJBQTRCaEgsZUFBZXNDLE9BQU8sQ0FDdEQyRSxpQkFBaUIsR0FDakJDLE9BQU8sQ0FDUCxpTUFDQTtnQkFFRixpREFBaUQ7Z0JBQ2pELE1BQU1DLDJCQUEyQnpLLHFFQUFZQSxDQUFDc0ksZ0JBQzNDO29CQUNBb0MsUUFBUSxHQUFFcEMsc0JBQUFBLGFBQWFLLEtBQUssY0FBbEJMLDJDQUFBQSwyQkFBQUEsb0JBQW9CcUMsSUFBSTtrREFDakMsQ0FBQ0MsTUFBUUEsSUFBSS9DLElBQUksS0FBSzs4REFEYlMsK0NBQUFBLHlCQUVQdUMsU0FBUztnQkFDYixJQUNDLENBQUM7Z0JBQ0osTUFBTUM7Z0VBQW9COzRCQW1DdEJ4Qzt3QkFsQ0gsMENBQTBDO3dCQUMxQyxNQUFNeUMsa0JBQWtCLE1BQU1wSyw2REFBa0JBLENBQy9DMkosMkJBQ0E7d0JBRUQsTUFBTVUsdUJBQXVCLE1BQU1ySyw2REFBa0JBLENBQ3BEeUgsUUFBUWxELE9BQU8sRUFDZjt3QkFHRCxvREFBb0Q7d0JBQ3BELE1BQU0sQ0FDTCtGLGdCQUNBQyxvQkFDQSxHQUFvQzs0QkFDcEM7Z0NBQ0MsR0FBR2IsY0FBYztnQ0FDakJyRixXQUFXNkU7Z0NBQ1hSLE1BQU0wQjtnQ0FDTjlGLE1BQU07Z0NBQ05pQyxPQUFPbEQ7Z0NBQ1BrQixTQUFTNUIsZUFBZXNDLE9BQU87Z0NBQy9CVCxXQUFXLElBQUlnRyxPQUFPQyxXQUFXOzRCQUNsQzs0QkFDQTtnQ0FDQyxHQUFHZixjQUFjO2dDQUNqQixHQUFHSSx3QkFBd0I7Z0NBQzNCekYsV0FBVzhFO2dDQUNYVCxNQUFNMkI7Z0NBQ04vRixNQUFNO2dDQUNOaUMsT0FBT2xEO2dDQUNQa0IsU0FBU29ELGFBQWFwRCxPQUFPO2dDQUM3QkMsV0FBVyxJQUFJZ0csS0FBS0EsS0FBS0UsR0FBRyxLQUFLLE1BQU1ELFdBQVc7Z0NBQ2xERSxVQUNDaEQsRUFBQUEsc0JBQUFBLGFBQWFLLEtBQUssY0FBbEJMLDBDQUFBQSxvQkFBb0JoRCxNQUFNO2dGQUFDLENBQUNpRyxPQUFTQSxLQUFLMUQsSUFBSSxLQUFLO21GQUNuRCxFQUFFOzRCQUNKO3lCQUNBO3dCQUVELE9BQVEsTUFBTTJELFFBQVFDLEdBQUcsQ0FBQzs0QkFDekJ6SyxpRUFBY0EsQ0FBQ2lLOzRCQUNmakssaUVBQWNBLENBQUNrSzt5QkFDZjtvQkFDRjs7Z0JBRUEsSUFBSVEsb0JBQStCLEVBQUU7Z0JBRXJDLElBQUk7b0JBQ0hBLG9CQUFvQixNQUFNWjtnQkFDM0IsRUFBRSxPQUFPN0IsT0FBTztvQkFDZmtCLFFBQVFsQixLQUFLLENBQUMsb0NBQW9DQTtvQkFFbEQsa0hBQWtIO29CQUNsSCw0SEFBNEg7b0JBQzVILElBQUksTUFBaUJiLE9BQU8sQ0FBQ1ksUUFBUSxDQUFDLHdCQUF3Qjt3QkFDN0QsTUFBTThCO29CQUNQO2dCQUNEO2dCQUVBMUcsU0FBUztvQkFDUkQsV0FBVztnQkFDWjtnQkFFQSxNQUFNd0gsa0JBQWtCLElBQUlwRixnQkFBZ0JSLGFBQWE2RixRQUFRO2dCQUNqRSxNQUFNLEVBQUUvRSxNQUFNLEVBQUUsR0FBR1I7Z0JBRW5CLElBQUlRLE9BQU9DLGtCQUFrQixFQUFFO29CQUM5Qix5Q0FBeUM7b0JBQ3pDNkUsZ0JBQWdCRSxNQUFNLENBQUM7b0JBQ3ZCbEksc0JBQXNCO2dCQUN2QjtnQkFFQXpDLHVEQUFRQTs4Q0FBQzt3QkFDUixNQUFNNEssWUFBWXJKLGVBQ2Y7NEJBQ0EsR0FBR0EsWUFBWTs0QkFDZjZCLFVBQVU7bUNBQUk3QixhQUFhNkIsUUFBUTttQ0FBS29IOzZCQUFrQjs0QkFDMURLLFVBQVVoQyxlQUFlMUUsTUFBTSxHQUM1QjtnQ0FDQW1FLGFBQWFySSxxREFBTUEsQ0FDbEI7dUNBQ0k0STt1Q0FDQ3RILGFBQWFzSixRQUFRLENBQUN2QyxXQUFXLElBQUksRUFBRTtpQ0FDM0MsRUFDRDs0QkFFRixJQUNDaEU7d0JBQ0osSUFDQ0E7d0JBQ0gsTUFBTXdHLFNBQVMsTUFBTUMsbUJBQW1CSDt3QkFFeEMsSUFDQzNILGFBQ0FULHNCQUNDc0ksT0FBTzFILFFBQVEsQ0FBQ2UsTUFBTSxHQUFHLEtBQUsyRyxPQUFPMUgsUUFBUSxDQUFDZSxNQUFNLElBQUksR0FDeEQ7Z0NBSUFqQyxxQ0FBQUE7NEJBSEQsZ0NBQWdDOzRCQUNoQyxNQUFNOEksU0FBU3RMLDZEQUFrQkEsQ0FBQ3dDLENBQUFBLDBCQUFBQSxvQ0FBQUEsY0FBZW1HLElBQUksS0FBSTs0QkFDekQsTUFBTTRDLFdBQ0wvSSxDQUFBQSwwQkFBQUEscUNBQUFBLDZCQUFBQSxjQUFlZ0osVUFBVSxDQUFDLEVBQUUsY0FBNUJoSixrREFBQUEsc0NBQUFBLDJCQUE4QitJLFFBQVEsY0FBdEMvSSwwREFBQUEsb0NBQXdDbUcsSUFBSSxLQUFJeEYsT0FBT29JLFFBQVE7NEJBQ2hFLE1BQU0zSCxVQUFVcEIsQ0FBQUEsMEJBQUFBLG9DQUFBQSxjQUFlbUcsSUFBSSxLQUFJeEYsT0FBT1MsT0FBTzs0QkFDckQsTUFBTTRFLGFBQWFyRixDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVFxRixVQUFVLEtBQUk0QyxPQUFPM0MsSUFBSTs0QkFFcERoRyxXQUFXO2dDQUNWZ0osU0FBUztnQ0FDVEMsU0FBUztnQ0FDVEMsa0JBQWtCO29DQUNqQjFFLE1BQU07b0NBQ05zRTtvQ0FDQUQ7b0NBQ0ExSDtvQ0FDQTRFO2dDQUNEOzRCQUNEO3dCQUNEO3dCQUVBakcsZ0JBQWdCO3dCQUNoQkQsY0FBY3NDO3dCQUNkeEMsaUJBQWlCO29CQUNsQjs2Q0FBRztZQUNKLEVBQUUsT0FBT2lHLE9BQU87Z0JBQ2ZrQixRQUFRbEIsS0FBSyxDQUFDLDhCQUE4QkE7Z0JBQzVDdkksOERBQWdCQSxDQUFDLDRCQUE0QjtvQkFDNUN1STtvQkFDQWIsU0FBUztvQkFDVGMsT0FBTztvQkFDUEMsT0FBTzt3QkFDTkMsVUFBVSxFQUFFM0cseUJBQUFBLG1DQUFBQSxhQUFjNEcsSUFBSTt3QkFDOUJuQixNQUFNLEVBQUUxRixvQkFBQUEsOEJBQUFBLFFBQVMyRCxJQUFJLENBQUNwQixFQUFFO3dCQUN4QnVFLFdBQVcsRUFBRWxHLDBCQUFBQSxvQ0FBQUEsY0FBZW1HLElBQUk7d0JBQ2hDQyxhQUFheEQsbUJBQW1CSixPQUFPO29CQUN4QztnQkFDRDtnQkFDQWhDLGFBQWE7b0JBQ1ppRSxNQUFNO29CQUNOQyxNQUFNO2dCQUNQO2dCQUVBLElBQUkzRCxXQUFXO3dCQUdSM0I7b0JBRk4sTUFBTTFCLCtEQUFZQSxDQUFDO3dCQUNsQjZFO3dCQUNBcUMsR0FBRyxFQUFFeEYsb0JBQUFBLCtCQUFBQSxpQkFBQUEsUUFBUzJELElBQUksY0FBYjNELHFDQUFBQSxlQUFleUYsU0FBUzt3QkFDN0JDLE1BQU0sRUFBRTFGLG9CQUFBQSw4QkFBQUEsUUFBUzJELElBQUksQ0FBQ3BCLEVBQUU7b0JBQ3pCO2dCQUNEO1lBQ0QsU0FBVTtnQkFDVCxtQkFBbUI7Z0JBQ25Ca0Isa0JBQWtCTCxPQUFPLEdBQUc7WUFDN0I7UUFDRDtRQUNBLGFBQWE7UUFDYjRHLFlBQVcsS0FBc0M7Z0JBQXRDLEVBQUVDLFFBQVEsRUFBNEIsR0FBdEM7WUFDVnRDLFFBQVF1QyxHQUFHLENBQUMsY0FBY0Q7WUFFMUIsSUFBSXJMLDhDQUFTQSxDQUFDbUgsUUFBUSxDQUFDQyxPQUFPLEVBQUU7Z0JBQy9CNUUsYUFBYTtvQkFDWmlFLE1BQU07b0JBQ05DLE1BQU0sdUJBQXlDLE9BQWxCMkUsU0FBU0UsUUFBUTtnQkFDL0M7WUFDRDtZQUVBekosY0FBY3VKO1FBQ2Y7UUFDQSw0REFBNEQ7UUFDNUQsTUFBTUcsU0FBUTNELEtBQVU7WUFDdkJrQixRQUFRbEIsS0FBSyxDQUFDLG1CQUFtQkE7WUFDakN2SSw4REFBZ0JBLENBQUMscUJBQXFCO2dCQUNyQ3VJO2dCQUNBYixTQUFTO2dCQUNUYyxPQUFPO2dCQUNQQyxPQUFPO29CQUNOQyxVQUFVLEVBQUUzRyx5QkFBQUEsbUNBQUFBLGFBQWM0RyxJQUFJO29CQUM5Qm5CLE1BQU0sRUFBRTFGLG9CQUFBQSw4QkFBQUEsUUFBUzJELElBQUksQ0FBQ3BCLEVBQUU7b0JBQ3hCdUUsV0FBVyxFQUFFbEcsMEJBQUFBLG9DQUFBQSxjQUFlbUcsSUFBSTtvQkFDaENDLGFBQWF4RCxtQkFBbUJKLE9BQU87Z0JBQ3hDO1lBQ0Q7WUFDQWhDLGFBQWE7Z0JBQ1ppRSxNQUFNO2dCQUNOQyxNQUFNO1lBQ1A7WUFFQSxJQUFJM0QsV0FBVztvQkFHUjNCO2dCQUZOLE1BQU0xQiwrREFBWUEsQ0FBQztvQkFDbEI2RTtvQkFDQXFDLEdBQUcsRUFBRXhGLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVMyRCxJQUFJLGNBQWIzRCxvQ0FBQUEsY0FBZXlGLFNBQVM7b0JBQzdCQyxNQUFNLEVBQUUxRixvQkFBQUEsOEJBQUFBLFFBQVMyRCxJQUFJLENBQUNwQixFQUFFO2dCQUN6QjtZQUNEO1lBRUE1QixnQkFBZ0JxQztZQUNoQnRDLGNBQWNzQztZQUNkeEMsaUJBQWlCO1lBRWpCaUQsa0JBQWtCTCxPQUFPLEdBQUc7UUFDN0I7SUFDRDtJQUVBOzs7RUFHQyxHQUNELE1BQU1pSCxjQUFjMUwscURBQU1BLENBQ3hCc0UsNEJBQUFBLHVDQUFELDBDQUNHQyxNQUFNLENBQUNwQix1QkFEVixzRUFFR29CLE1BQU0sQ0FDUGpELENBQUFBLHlCQUFBQSxvQ0FBQUEseUJBQUFBLGFBQWM2QixRQUFRLGNBQXRCN0IsNkNBQUFBLHVCQUF3Qm9DLEdBQUcsQ0FBQyxDQUFDK0YsTUFBUztZQUNyQyxHQUFHQSxHQUFHO1lBQ043RixJQUFJNkYsSUFBSTVGLFNBQVM7WUFDakJDLE1BQU0yRixJQUFJM0YsSUFBSTtRQUNmLFFBQU8sRUFBRSxHQUVYaEYsMkVBQXNCQSxFQUVyQnFGLE1BQU0sQ0FBQ3lCLFNBQ1B6QixNQUFNLENBQUMsQ0FBQ1IsSUFBTUEsRUFBRUcsSUFBSSxLQUFLLFVBQ3pCNkgsSUFBSSxDQUFDLENBQUNDLEdBQUdDO1FBQ1QsaURBQWlEO1FBQ2pELE1BQU1DLFFBQVFGLEVBQUU1SCxTQUFTLEdBQUcsSUFBSWdHLEtBQUs0QixFQUFFNUgsU0FBUyxFQUFFK0gsT0FBTyxLQUFLO1FBQzlELE1BQU1DLFFBQVFILEVBQUU3SCxTQUFTLEdBQUcsSUFBSWdHLEtBQUs2QixFQUFFN0gsU0FBUyxFQUFFK0gsT0FBTyxLQUFLO1FBRTlELDBFQUEwRTtRQUMxRSxJQUFJRCxVQUFVRSxPQUFPO1lBQ3BCLE9BQU9GLFFBQVFFO1FBQ2hCO1FBRUEsOENBQThDO1FBQzlDLGlFQUFpRTtRQUNqRSwyRUFBMkU7UUFDM0UsSUFBSUosRUFBRTlILElBQUksS0FBSyxlQUFlK0gsRUFBRS9ILElBQUksS0FBSyxhQUFhO1lBQ3JELG1FQUFtRTtZQUNuRSxxRUFBcUU7WUFDckUsT0FBT2dJLFFBQVFFLFNBQVM7UUFDekI7UUFFQSw2RUFBNkU7UUFDN0UsSUFBSUosRUFBRTlILElBQUksS0FBSyxVQUFVK0gsRUFBRS9ILElBQUksS0FBSyxhQUFhLE9BQU8sQ0FBQztRQUN6RCxJQUFJOEgsRUFBRTlILElBQUksS0FBSyxlQUFlK0gsRUFBRS9ILElBQUksS0FBSyxRQUFRLE9BQU87UUFFeEQsc0RBQXNEO1FBQ3RELE9BQU87SUFDUjtJQUVEcEQsaURBQVNBO29DQUFDO1lBQ1QsOENBQThDO1lBQzlDLElBQUksQ0FBQ1ksZ0JBQWdCLENBQUNFLGFBQWE7Z0JBQ2xDeUs7WUFDRDtZQUNBLElBQUksQ0FBQ3pLLGFBQWE7Z0JBQ2pCWSxlQUFlcUMsT0FBTyxHQUFHcEMsT0FBT0MsVUFBVSxHQUFHLDZCQUE2Qjs7WUFDM0U7WUFDQSxJQUFJLENBQUNoQixjQUFjO1lBRW5CNEs7UUFDRDttQ0FBRztRQUFDNUs7UUFBY0U7S0FBWTtJQUU5QixNQUFNeUssYUFBYTtRQUNsQmhKLFNBQVM7WUFDUkMsY0FBYztZQUNkRixXQUFXO1lBQ1hELGdCQUFnQixFQUFFO1FBQ25CO1FBQ0FzRCxTQUFTO1FBQ1RDLFlBQVksRUFBRTtJQUNmO0lBRUEsd0VBQXdFO0lBQ3hFNUYsaURBQVNBO29DQUFDO1lBQ1Qsb0RBQW9EO1lBQ3BELE9BQU91TDtRQUNSO21DQUFHLEVBQUU7SUFFTCxNQUFNQyxrQkFBa0I7UUFDdkIsMkVBQTJFO1FBQzNFLE1BQU1DLGlCQUFpQnZHLFFBQ3RCLENBQUM4RixZQUFZeEgsTUFBTSxJQUFJLEVBQUM1Qyx5QkFBQUEsbUNBQUFBLGFBQWM2QixRQUFRLENBQUNlLE1BQU07UUFHdERqQixTQUFTO1lBQ1JELFdBQVdtSjtRQUNaO1FBRUEsT0FBT0E7SUFDUjtJQUVBLE1BQU1yQixxQkFBcUIsT0FBT0g7UUFDakMsSUFBSUUsU0FBU0Y7UUFFYixJQUFJLENBQUNFLFVBQVUsQ0FBQ0EsT0FBTzNDLElBQUksRUFBRTtnQkFJdEI3RztZQUhOd0osU0FBUyxNQUFNakwsNERBQVNBLENBQUM7Z0JBQ3hCNEU7Z0JBQ0E0SCxZQUFZO2dCQUNadkYsR0FBRyxFQUFFeEYsb0JBQUFBLCtCQUFBQSxnQkFBQUEsUUFBUzJELElBQUksY0FBYjNELG9DQUFBQSxjQUFleUYsU0FBUztZQUM5QjtRQUNEO1FBQ0EsSUFBSStELFFBQVE7WUFDWGpKLGdCQUFnQmlKO1lBQ2hCNUgsU0FBUztnQkFDUkQsV0FBVzRDLFFBQVEsQ0FBQzhGLFlBQVl4SCxNQUFNLElBQUksQ0FBQzJHLE9BQU8xSCxRQUFRLENBQUNlLE1BQU07Z0JBQ2pFbkIsZ0JBQWdCOEgsT0FBTzFILFFBQVE7WUFDaEM7UUFDRDtRQUVBLE9BQU8wSDtJQUNSO0lBRUEsTUFBTXdCLHFCQUFxQixPQUMxQkMsYUFDQXpCO1lBTUl2SjtRQUpKVSxnQkFBZ0I7UUFFaEIsSUFBSXVLLHlCQUFzQyxFQUFFO1FBRTVDLElBQUlqTCx5QkFBQUEsb0NBQUFBLHVCQUFBQSxhQUFjdUosTUFBTSxjQUFwQnZKLDJDQUFBQSxxQkFBc0I2QixRQUFRLEVBQUU7WUFDbkNvSix5QkFBeUJqTCxhQUFhdUosTUFBTSxDQUFDMUgsUUFBUSxDQUNuRE8sR0FBRyxDQUFDLENBQUMrRixNQUFTO29CQUNkN0YsSUFBSTZGLElBQUk1RixTQUFTO29CQUNqQkMsTUFBTTJGLElBQUkzRixJQUFJO29CQUNkQyxTQUFTMEYsSUFBSTFGLE9BQU87b0JBQ3BCQyxXQUFXeUYsSUFBSXpGLFNBQVM7Z0JBQ3pCLElBQ0NHLE1BQU0sQ0FBQyxDQUFDc0YsTUFBUUEsSUFBSTNGLElBQUksS0FBSztRQUNoQztRQUNBLE1BQU0wSSxhQUFhO1lBQ2xCekksU0FBU3VJLFlBQVl2SSxPQUFPO1lBQzVCMEksaUJBQWlCRix1QkFBdUJoSSxNQUFNLENBQUNtSDtRQUNoRDtRQUNBLE1BQU0sRUFBRTNILE9BQU8sRUFBRStELEtBQUssRUFBRSxHQUFHLE1BQU1uSixrRkFBa0JBLENBQ2xENk4sWUFDQTFKLFlBQ0FEO1FBR0QseURBQXlEO1FBQ3pELElBQUlnSSxRQUFRO1lBQ1hDLG1CQUFtQjtnQkFDbEIsR0FBR0QsTUFBTTtnQkFDVDFILFVBQVUwSCxPQUFPMUgsUUFBUSxDQUFDZ0IsTUFBTSxDQUMvQixDQUFDUixJQUFNQSxFQUFFSSxPQUFPLEtBQUt5SSxXQUFXekksT0FBTztZQUV6QztRQUNEO1FBRUE1QixlQUFlc0MsT0FBTyxHQUFHVjtJQUMxQjtJQUVBLE1BQU0ySSxrQkFBa0I5RyxRQUN2QmxFLHlCQUFBQSxtQ0FBQUEsYUFBY2lMLEtBQUssQ0FBQztJQUVyQixNQUFNQyxlQUFlLENBQUN2SixXQUFXcUo7SUFFakMsc0RBQXNEO0lBQ3RELE1BQU1HLDZCQUE2QixPQUNsQ1AsYUFDQVE7WUF5RFF4TDtRQXZEUixJQUFJc0wsY0FBYztZQUNqQjVELFFBQVErRCxJQUFJLENBQ1g7WUFFRDtRQUNEO1FBQ0EsSUFBSSxFQUFDMUwsb0JBQUFBLDhCQUFBQSxRQUFTMkQsSUFBSSxLQUFJLENBQUMzQixTQUFTO1lBQy9CMkYsUUFBUWxCLEtBQUssQ0FBQztZQUNkckYsYUFBYTtnQkFDWmlFLE1BQU07Z0JBQ05DLE1BQU07WUFDUDtZQUNBO1FBQ0Q7UUFFQSx5REFBeUQ7UUFDekQ5QixtQkFBbUJKLE9BQU8sR0FDeEJxSSxDQUFBQSwrQkFBQUEseUNBQUFBLG1CQUFvQkUsd0JBQXdCLEtBQUksRUFBRTtRQUNwRGhMLGdCQUFnQjtRQUNoQkgsaUJBQWlCO1FBQ2pCcUs7UUFFQSxNQUFNZSxxQkFBdUM7WUFDNUMsR0FBR1gsV0FBVztZQUNkdkksU0FBU25GLG9FQUFXQSxDQUFDME4sWUFBWXZJLE9BQU87WUFDeENtRSxNQUFNaEksK0NBQU1BLENBQUNvTSxZQUFZdkksT0FBTztZQUNoQ0QsTUFBTTtZQUNORCxXQUFXekIsZUFBZXFDLE9BQU87WUFDakNULFdBQVcsSUFBSWdHLE9BQU9DLFdBQVc7WUFDakNpRCxlQUFlO1lBQ2YvQyxVQUFVLEVBQUU7WUFDWjNGO1FBQ0Q7UUFDQSwrRUFBK0U7UUFDL0UsMEZBQTBGO1FBQzFGLDZDQUE2QztRQUM3Qyw4SEFBOEg7UUFDOUgscUpBQXFKO1FBQ3JKLE1BQU0ySSxtQkFBMkI7WUFDaEMsR0FBRzdMLFlBQVk7WUFDZmtEO1lBQ0E0SSxTQUFTLEVBQUUvSixvQkFBQUEsOEJBQUFBLFFBQVMrSixTQUFTO1lBQzdCL0o7WUFDQVcsV0FBVyxJQUFJZ0csT0FBT0MsV0FBVztZQUNqQ29ELFlBQVk7WUFDWkMsV0FBVztZQUNYLGFBQWE7WUFDYm5LLFVBQVVuRCxxREFBTUEsQ0FDZjttQkFBSTBMO2dCQUFhdUI7YUFBbUIsRUFDcENuTywyRUFBc0JBO1lBRXZCOEwsVUFBVTtnQkFDVHZDLGFBQWFySSxxREFBTUEsQ0FDbEI7dUJBQ0s2RSxtQkFBbUJKLE9BQU8sSUFBSSxFQUFFO3VCQUNoQ25ELENBQUFBLHlCQUFBQSxvQ0FBQUEseUJBQUFBLGFBQWNzSixRQUFRLGNBQXRCdEosNkNBQUFBLHVCQUF3QitHLFdBQVcsS0FBSSxFQUFFO2lCQUM3QyxFQUNEO1lBRUY7WUFDQXdDLFFBQVF0SSxxQkFBcUJqQixDQUFBQSx5QkFBQUEsbUNBQUFBLGFBQWN1SixNQUFNLEtBQUksT0FBTztZQUM1RDlELE1BQU0sRUFBRTFGLG9CQUFBQSw4QkFBQUEsUUFBUzJELElBQUksQ0FBQ3BCLEVBQUU7UUFDekI7UUFDQSxNQUFNaUgsU0FBUyxNQUFNQyxtQkFBbUJxQztRQUV4QyxJQUFJO1lBQ0gsTUFBTWQsbUJBQW1CQyxhQUFhekI7UUFDdEMsd0xBQXdMO1FBQ3hMLGdGQUFnRjtRQUNqRixFQUFFLE9BQU8vQyxPQUFPO1lBQ2ZrQixRQUFRbEIsS0FBSyxDQUNaLDREQUNBQTtRQUVGO1FBRUEsSUFBSSxDQUFDdEcsYUFBYTtZQUNqQk0sZUFBZTtRQUNoQjtRQUNBLE9BQU8sTUFBTXlMLGlCQUFpQmpCLGFBQWFRO0lBQzVDO0lBRUEsTUFBTVUsb0JBQ0wsaUhBQWlIO0lBQ2pIaE4sbURBQVdBO3lEQUFDO2dCQXVCUGlOO1lBdEJKLElBQUlBO1lBQ0osSUFBSTtnQkFDSHpMLGdCQUFnQjtnQkFDaEIsc0NBQXNDO2dCQUN0Q3lMLGVBQWUsTUFBTXJQLGdFQUFrQkEsQ0FDdEM7b0JBQ0NpRixPQUFPLEVBQUVBLG9CQUFBQSw4QkFBQUEsUUFBUytKLFNBQVM7b0JBQzNCMUs7Z0JBQ0QsR0FDQVAsZUFBZXNDLE9BQU8sRUFDdEIzQjtZQUVELG9FQUFvRTtZQUVwRSxpREFBaUQ7WUFDbEQsRUFBRSxPQUFPZ0YsT0FBTztnQkFDZmtCLFFBQVFsQixLQUFLLENBQUMsbUNBQW1DQTtnQkFDakQsSUFBSTdILDhDQUFTQSxDQUFDbUgsUUFBUSxDQUFDQyxPQUFPLEVBQUU7b0JBQy9CNUUsYUFBYTt3QkFBRWlFLE1BQU07d0JBQVNDLElBQUksRUFBR21CLGtCQUFBQSw0QkFBRCxNQUFrQmIsT0FBTztvQkFBQztnQkFDL0Q7WUFDRDtZQUVBLElBQUl3RyxDQUFBQSx5QkFBQUEsb0NBQUFBLHVCQUFBQSxhQUFjQyxNQUFNLGNBQXBCRCwyQ0FBQUEscUJBQXNCdkosTUFBTSxLQUFJakUsOENBQVNBLENBQUNtSCxRQUFRLENBQUNDLE9BQU8sRUFBRTtnQkFDL0Q1RSxhQUFhO29CQUNaaUUsTUFBTTtvQkFDTkMsTUFBTSxHQUFnQzhHLE9BQTdCQSxhQUFhRSxVQUFVLEVBQUMsT0FBcUMsT0FBaENGLGFBQWFDLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDO2dCQUNoRTtZQUNEO1lBRUEsT0FBTyxNQUFNbFAsdUZBQXVCQSxDQUFDO2dCQUNwQytPO2dCQUNBaEw7WUFDRDtRQUNBLHVEQUF1RDtRQUN4RDt3REFBRztRQUFDWTtRQUFTWDtLQUFVO0lBRXhCLE1BQU1tTCwyQkFBMkIsT0FDaEN2QjtRQUVBLE1BQU13Qix3QkFBd0I7WUFDN0IsR0FBR3hCLFdBQVc7WUFDZDFJLElBQUl4QixlQUFlcUMsT0FBTztRQUMzQjtRQUVBLE1BQU1vSSwyQkFBMkJpQjtRQUVqQyxPQUFPO0lBQ1I7SUFFQSxNQUFNQywwQkFBMEIsY0FFL0JDO1lBREEsRUFBRUMsYUFBYSxFQUFFcEssU0FBUyxFQUFzQztRQUdoRSxNQUFNcUssY0FBY0Q7UUFDcEJuSixrQkFBa0JMLE9BQU8sR0FBR1o7UUFFNUIsTUFBTWdKLDJCQUEyQjtZQUNoQ2pKLElBQUlZO1lBQ0pULFNBQVNtSztZQUNUcEssTUFBTTtRQUNQLEdBQUdxSyxPQUFPLENBQUNIO0lBQ1o7SUFFQSxNQUFNSSxrQkFBa0I7UUFDdkJ6TSxhQUFhLENBQUNGO0lBQ2Y7SUFFQSxNQUFNOEwsbUJBQW1CLE9BQ3hCakIsYUFDQStCO1FBRUEsSUFBSTtnQkE0REMvTTtZQTNESixNQUFNZ04sa0JBQWtCLE1BQU1kO1lBQzlCLE1BQU0sRUFDTDlILFFBQVEsRUFBRUMsa0JBQWtCLEVBQUUsRUFDOUIvQyxRQUFRLEVBQUU0QyxrQkFBa0IsRUFBRSxFQUM5QixHQUFHTjtZQUNKLE1BQU1xSixjQUNMLENBQUMsQ0FBRTdDLFlBQVl4SCxNQUFNLElBQUlsQixhQUFjMkMsa0JBQWlCLEtBQU10QztZQUUvRCxJQUFJcEQsOENBQVNBLENBQUNtSCxRQUFRLENBQUNDLE9BQU8sRUFBRTtnQkFDL0IyQixRQUFRK0QsSUFBSSxDQUNYO2dCQUVEL0QsUUFBUXVDLEdBQUcsQ0FBQyx3QkFBd0J2STtnQkFDcENnRyxRQUFRdUMsR0FBRyxDQUFDLG9CQUFvQkc7Z0JBQ2hDMUMsUUFBUXVDLEdBQUcsQ0FBQyxxQkFBcUJqSztnQkFDakMwSCxRQUFRdUMsR0FBRyxDQUFDLDJCQUEyQjVGO2dCQUN2Q3FELFFBQVF1QyxHQUFHLENBQ1YsZ0lBQ0FnRDtZQUVGO1lBRUEsSUFBSUEsYUFBYTtvQkFXVmxOO2dCQVZOLE1BQU00RyxhQUFhLE1BQU16SSw2REFBa0JBLENBQUMyQyxlQUFlc0MsT0FBTztnQkFFbEUsTUFBTS9FLCtEQUFZQSxDQUFDO29CQUNsQjhFO29CQUNBMEQsTUFBTUQ7b0JBQ05tRixXQUFXL0osUUFBUStKLFNBQVM7b0JBQzVCLDBDQUEwQztvQkFDMUNvQixnQkFBZ0I3SSxxQkFDWkgscUJBQ0RuQjtvQkFDSHdDLEdBQUcsRUFBRXhGLG9CQUFBQSwrQkFBQUEsZ0JBQUFBLFFBQVMyRCxJQUFJLGNBQWIzRCxvQ0FBQUEsY0FBZXlGLFNBQVM7Z0JBQzlCO1lBQ0Q7WUFFQSxNQUFNMkgsdUJBQXVCek8scURBQU1BLENBQ2xDO21CQUNJaUU7Z0JBQ0h4RixrRkFBMEJBLENBQUMwRCxlQUFlc0MsT0FBTztnQkFDakQ7b0JBQ0NiLElBQUksWUFBdUIsT0FBWHpELCtDQUFNQSxDQUFDO29CQUN2QjJELE1BQU07b0JBQ05DLFNBQVN6RixzRUFBY0EsQ0FBQ2dRO2dCQUN6QjthQUNBLEVBQ0R4UCwyRUFBc0JBO1lBRXZCd0gsWUFBWW1JO1lBRVosNkNBQTZDO1lBQzdDLElBQUl4Tyw4Q0FBU0EsQ0FBQ21ILFFBQVEsQ0FBQ0MsT0FBTyxFQUFFO2dCQUMvQjJCLFFBQVF1QyxHQUFHLENBQUMsNkJBQTZCa0Q7Z0JBQ3pDekYsUUFBUXVDLEdBQUcsQ0FBQyx5QkFBeUIrQztZQUN0QztZQUVBLElBQUkvQix5QkFBc0MsRUFBRTtZQUU1QyxJQUFJakwseUJBQUFBLG9DQUFBQSx1QkFBQUEsYUFBY3VKLE1BQU0sY0FBcEJ2SiwyQ0FBQUEscUJBQXNCNkIsUUFBUSxFQUFFO2dCQUNuQ29KLHlCQUF5QmpMLGFBQWF1SixNQUFNLENBQUMxSCxRQUFRLENBQ25ETyxHQUFHLENBQUMsQ0FBQytGLE1BQVM7d0JBQ2Q3RixJQUFJNkYsSUFBSTVGLFNBQVM7d0JBQ2pCQyxNQUFNMkYsSUFBSTNGLElBQUk7d0JBQ2RDLFNBQVMwRixJQUFJMUYsT0FBTzt3QkFDcEJDLFdBQVd5RixJQUFJekYsU0FBUztvQkFDekIsSUFDQ0csTUFBTSxDQUFDLENBQUNzRixNQUFRQSxJQUFJM0YsSUFBSSxLQUFLO1lBQ2hDO1lBRUE5QixnQkFBZ0I7WUFDaEIsTUFBTTBNLGlCQUFpQixNQUFNdkksT0FDNUI7Z0JBQ0MsR0FBR21HLFdBQVc7Z0JBQ2R2SSxTQUNDLENBQUMySCxZQUFZeEgsTUFBTSxJQUFJbEIsYUFBYUssVUFDakNsQixlQUFlc0MsT0FBTyxDQUFDLHdCQUF3QjttQkFDL0NsRyxnRkFBd0JBLENBQ3hCNEQsZUFBZXNDLE9BQU8sRUFDdEI4SCx1QkFBdUJoSSxNQUFNLENBQzVCbUgsY0FFRDVHLGtCQUFrQkwsT0FBTztZQUU5QixHQUNBNEo7WUFHRCxPQUFPSztRQUNSLEVBQUUsT0FBTzVHLE9BQU87WUFDZjlGLGdCQUFnQnFDO1lBQ2hCNkI7WUFFQThDLFFBQVFsQixLQUFLLENBQUMsaUNBQWlDQTtZQUMvQ3JGLGFBQWE7Z0JBQ1ppRSxNQUFNO2dCQUNOQyxNQUFNO1lBQ1A7WUFFQSxPQUFPO1FBQ1I7SUFDRDtJQUVBLGlEQUFpRDtJQUVqRCw0QkFBNEI7SUFDNUIscUJBQ0MsOERBQUMxRixjQUFjME4sUUFBUTtRQUN0QkMsT0FBTztZQUNOO2dCQUNDNUk7Z0JBQ0FoRDtnQkFDQXZCO2dCQUNBd0U7Z0JBQ0F5RixhQUFhQTtnQkFDYnBILGlCQUFpQkE7Z0JBQ2pCdUssaUJBQWlCcks7WUFDbEI7WUFDQTtnQkFDQ3FJO2dCQUNBZ0I7Z0JBQ0FFO2dCQUNBSztnQkFDQTlIO2dCQUNBRDtnQkFDQUY7Z0JBQ0FDO2dCQUNBRjtZQUNEO1NBQ0E7a0JBRUE5RTs7Ozs7O0FBR0o7SUFwOUJnQkQ7O1FBQ1dmLHdEQUFVQTtRQVloQ2YsNkRBQVNBO1FBQ3lCRCwrREFBVUE7UUFHTUUsa0ZBQW1CQTtRQUNoRHdCLGtEQUFTQTtRQUNaM0IsZ0VBQVVBO1FBQ1JILHFGQUFxQkE7UUFDOUJxQix1REFBU0E7UUFNY25CLDBEQUFRQTtRQUdJMkIscUZBQVdBO1FBdUZ4Q1AsNkRBQWVBO1FBSVhyQixtRUFBWUE7UUFpRGpDYSxtREFBT0E7OztLQTFLSXFCO0FBczlCaEIsTUFBTUYsOEJBQWdCVixxREFBYUEsQ0FBaUM4RCIsInNvdXJjZXMiOlsiL1VzZXJzL3NoZXJpZmYvRGVza3RvcC9iaXRjYXNoLWFwcHMvbWFzdGVyYm90cy9hcHBzL21hc3RlcmJvdHMuYWkvbGliL2hvb2tzL3VzZS1tYi1jaGF0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgZ2V0Q2hhdGJvdE1ldGFkYXRhIH0gZnJvbSAnQC9hcHAvYWN0aW9ucydcbmltcG9ydCB7IGZvcm1hdFN5c3RlbVByb21wdHMgfSBmcm9tICdAL2xpYi9hY3Rpb25zJ1xuaW1wb3J0IHtcblx0ZXhhbXBsZXNQcm9tcHQsXG5cdGZvbGxvd2luZ1F1ZXN0aW9uc1Byb21wdCxcblx0c2V0RGVmYXVsdFVzZXJQcmVmZXJlbmNlc1Byb21wdCxcblx0c2V0T3V0cHV0SW5zdHJ1Y3Rpb25Qcm9tcHQsXG59IGZyb20gJ0AvbGliL2NvbnN0YW50cy9wcm9tcHRzJ1xuaW1wb3J0IHtcblx0YWlFeGFtcGxlQ2xhc3NpZmljYXRpb24sXG5cdHByb2Nlc3NVc2VyTWVzc2FnZSxcbn0gZnJvbSAnQC9saWIvaGVscGVycy9haS1jbGFzc2lmaWNhdGlvbidcblxuaW1wb3J0IHtcblx0Y2xlYW5Qcm9tcHQsXG5cdGhhc1JlYXNvbmluZyxcblx0dmVyaWZ5RHVwbGljYXRlTWVzc2FnZSxcbn0gZnJvbSAnQC9saWIvaGVscGVycy9haS1oZWxwZXJzJ1xuaW1wb3J0IHtcblx0dHlwZSBGaWxlQXR0YWNobWVudCxcblx0Z2V0VXNlckluZGV4ZWREQktleXMsXG59IGZyb20gJ0AvbGliL2hvb2tzL3VzZS1jaGF0LWF0dGFjaG1lbnRzJ1xuaW1wb3J0IHsgdXNlQ29udGludWVHZW5lcmF0aW9uIH0gZnJvbSAnQC9saWIvaG9va3MvdXNlLWNvbnRpbnVlLWdlbmVyYXRpb24nXG5pbXBvcnQgeyB1c2VJbmRleGVkREIgfSBmcm9tICdAL2xpYi9ob29rcy91c2UtaW5kZXhlZC1kYidcbmltcG9ydCB7IHVzZU1vZGVsIH0gZnJvbSAnQC9saWIvaG9va3MvdXNlLW1vZGVsJ1xuaW1wb3J0IHsgdXNlUG93ZXJVcCB9IGZyb20gJ0AvbGliL2hvb2tzL3VzZS1wb3dlci11cCdcbmltcG9ydCB7IHVzZVNpZGViYXIgfSBmcm9tICdAL2xpYi9ob29rcy91c2Utc2lkZWJhcidcbmltcG9ydCB7IHVzZVRocmVhZCB9IGZyb20gJ0AvbGliL2hvb2tzL3VzZS10aHJlYWQnXG5pbXBvcnQgeyB1c2VUaHJlYWRWaXNpYmlsaXR5IH0gZnJvbSAnQC9saWIvaG9va3MvdXNlLXRocmVhZC12aXNpYmlsaXR5J1xuaW1wb3J0IHsgbG9nRXJyb3JUb1NlbnRyeSB9IGZyb20gJ0AvbGliL3NlbnRyeSdcbmltcG9ydCB7IGdlbmVyYXRlVW5pcXVlU2x1ZywgZ2V0Q2Fub25pY2FsRG9tYWluIH0gZnJvbSAnQC9saWIvdXJsJ1xuaW1wb3J0IHtcblx0Y3JlYXRlVGhyZWFkLFxuXHRkZWxldGVUaHJlYWQsXG5cdGdldFRocmVhZCxcblx0c2F2ZU5ld01lc3NhZ2UsXG59IGZyb20gJ0Avc2VydmljZXMvaGFzdXJhJ1xuaW1wb3J0IHR5cGUgeyBTYXZlTmV3TWVzc2FnZVBhcmFtcyB9IGZyb20gJ0Avc2VydmljZXMvaGFzdXJhL2hhc3VyYS5zZXJ2aWNlLnR5cGUnXG5pbXBvcnQgdHlwZSB7XG5cdEFpQ2xpZW50VHlwZSxcblx0QWlUb29sQ2FsbCxcblx0Q2hhdGJvdE1ldGFkYXRhQ2xhc3NpZmljYXRpb24sXG5cdENoYXRib3RNZXRhZGF0YUV4YW1wbGVzLFxuXHRTZW5kTWVzc2FnZUZyb21SZXNwb25zZU1lc3NhZ2VEYXRhLFxufSBmcm9tICdAL3R5cGVzL3R5cGVzJ1xuaW1wb3J0IHsgdHlwZSBVc2VDaGF0T3B0aW9ucywgdXNlQ2hhdCB9IGZyb20gJ0BhaS1zZGsvcmVhY3QnXG5pbXBvcnQgdHlwZSAqIGFzIE9wZW5BaSBmcm9tICdhaSdcbmltcG9ydCB0eXBlIHtcblx0TWVzc2FnZSBhcyBBaU1lc3NhZ2UsXG5cdENoYXRSZXF1ZXN0T3B0aW9ucyxcblx0Q3JlYXRlTWVzc2FnZSxcbn0gZnJvbSAnYWknXG5pbXBvcnQgeyB0aHJvdHRsZSwgdW5pcUJ5IH0gZnJvbSAnbG9kYXNoJ1xuaW1wb3J0IHsgYXBwQ29uZmlnIH0gZnJvbSAnbWItZW52J1xuaW1wb3J0IHR5cGUgeyBDaGF0Ym90LCBNZXNzYWdlLCBUaHJlYWQgfSBmcm9tICdtYi1nZW5xbCdcbmltcG9ydCB7IHRvU2x1ZyB9IGZyb20gJ21iLWxpYidcbmltcG9ydCB7IG5hbm9pZCB9IGZyb20gJ25hbm9pZCdcbmltcG9ydCB7IHVzZVNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgvcmVhY3QnXG5pbXBvcnQgeyB1c2VQYXJhbXMsIHVzZVNlYXJjaFBhcmFtcyB9IGZyb20gJ25leHQvbmF2aWdhdGlvbidcbmltcG9ydCB7XG5cdGNyZWF0ZUNvbnRleHQsXG5cdHVzZUNhbGxiYWNrLFxuXHR1c2VDb250ZXh0LFxuXHR1c2VFZmZlY3QsXG5cdHVzZU1lbW8sXG5cdHVzZVJlZixcbn0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VTZXRTdGF0ZSB9IGZyb20gJ3JlYWN0LXVzZSdcbmltcG9ydCB7IHVzZVNvbm5lciB9IGZyb20gJy4vdXNlU29ubmVyJ1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlTUJDaGF0KCk6IE1CQ2hhdEhvb2tDYWxsYmFjayB7XG5cdGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KE1CQ2hhdENvbnRleHQpXG5cdGlmICghY29udGV4dCkge1xuXHRcdHRocm93IG5ldyBFcnJvcigndXNlTUJDaGF0IG11c3QgYmUgdXNlZCB3aXRoaW4gYSBNQkNoYXRQcm92aWRlcicpXG5cdH1cblx0cmV0dXJuIGNvbnRleHRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIE1CQ2hhdFByb3ZpZGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pIHtcblx0Y29uc3QgeyBkYXRhOiBzZXNzaW9uIH0gPSB1c2VTZXNzaW9uKClcblx0Y29uc3Qge1xuXHRcdGlzT3BlblBvcHVwLFxuXHRcdGFjdGl2ZVRocmVhZCxcblx0XHR3ZWJTZWFyY2gsXG5cdFx0bG9hZGluZ1N0YXRlLFxuXHRcdHNldFdlYlNlYXJjaCxcblx0XHRzZXRBY3RpdmVUaHJlYWQsXG5cdFx0c2V0SXNOZXdSZXNwb25zZSxcblx0XHRzZXRJc09wZW5Qb3B1cCxcblx0XHRzZXRBY3RpdmVUb29sLFxuXHRcdHNldExvYWRpbmdTdGF0ZSxcblx0fSA9IHVzZVRocmVhZCgpXG5cdGNvbnN0IHsgYWN0aXZlQ2hhdGJvdCwgbmF2aWdhdGVUbyB9ID0gdXNlU2lkZWJhcigpXG5cdGNvbnN0IHVzZXJDb250ZW50UmVmID0gdXNlUmVmPHN0cmluZz4oJycpXG5cdGNvbnN0IHJhbmRvbVRocmVhZElkID0gdXNlUmVmPHN0cmluZz4oY3J5cHRvLnJhbmRvbVVVSUQoKSlcblx0Y29uc3QgeyBpc0NvbnRpbnVvdXNUaHJlYWQsIHNldElzQ29udGludW91c1RocmVhZCB9ID0gdXNlVGhyZWFkVmlzaWJpbGl0eSgpXG5cdGNvbnN0IHsgY3VzdG9tU29ubmVyIH0gPSB1c2VTb25uZXIoKVxuXHRjb25zdCB7IGlzUG93ZXJVcCB9ID0gdXNlUG93ZXJVcCgpXG5cdGNvbnN0IHsgc2V0SXNDdXRPZmYgfSA9IHVzZUNvbnRpbnVlR2VuZXJhdGlvbigpXG5cdGNvbnN0IHBhcmFtcyA9IHVzZVBhcmFtczx7XG5cdFx0Y2hhdGJvdDogc3RyaW5nXG5cdFx0dGhyZWFkU2x1Zz86IHN0cmluZ1xuXHRcdHRocmVhZFF1ZXN0aW9uU2x1Zz86IHN0cmluZ1xuXHRcdGNhdGVnb3J5OiBzdHJpbmdcblx0fT4oKVxuXHRjb25zdCB7IHNlbGVjdGVkTW9kZWwsIGNsaWVudFR5cGUgfSA9IHVzZU1vZGVsKClcblxuXHQvLyBjb25zdCBpbml0aWFsSXNOZXdDaGF0ID0gQm9vbGVhbihpc0NvbnRpbnVvdXNUaHJlYWQgfHwgIWFjdGl2ZVRocmVhZD8ubWVzc2FnZXMubGVuZ3RoKVxuXHRjb25zdCBbeyBtZXNzYWdlc0Zyb21EQiwgaXNOZXdDaGF0IH0sIHNldFN0YXRlXSA9IHVzZVNldFN0YXRlPHtcblx0XHRpc0luaXRMb2FkZWQ6IGJvb2xlYW5cblx0XHR3ZWJTZWFyY2g6IGJvb2xlYW5cblx0XHRtZXNzYWdlc0Zyb21EQjogTWVzc2FnZVtdXG5cdFx0aXNOZXdDaGF0OiBib29sZWFuXG5cdH0+KHtcblx0XHRpc0luaXRMb2FkZWQ6IGZhbHNlLFxuXHRcdHdlYlNlYXJjaDogZmFsc2UsXG5cdFx0bWVzc2FnZXNGcm9tREI6IGFjdGl2ZVRocmVhZD8ubWVzc2FnZXMgfHwgW10sXG5cdFx0aXNOZXdDaGF0OiB0cnVlLFxuXHR9KVxuXHRjb25zdCBjaGF0Ym90RGF0YSA9IGFjdGl2ZVRocmVhZD8uY2hhdGJvdCA/PyAoYWN0aXZlQ2hhdGJvdCBhcyBDaGF0Ym90KVxuXHRjb25zdCBjaGF0Ym90U3lzdGVtUHJvbXB0czogQWlNZXNzYWdlW10gPSBmb3JtYXRTeXN0ZW1Qcm9tcHRzKFxuXHRcdGNoYXRib3REYXRhPy5wcm9tcHRzLFxuXHQpXG5cdGNvbnN0IHVzZXJQcmVmZXJlbmNlc1Byb21wdHM6IEFpTWVzc2FnZVtdID0gY2hhdGJvdERhdGFcblx0XHQ/IFtzZXREZWZhdWx0VXNlclByZWZlcmVuY2VzUHJvbXB0KGNoYXRib3REYXRhKV1cblx0XHQ6IFtdXG5cdC8qKlxuXHQgKiBAZGVzY3JpcHRpb25cblx0ICogRm9ybWF0IGFsbCBVc2VyIHByb21wdHMgYW5kIEFJICdhc3Npc3RhbnQnIG1lc3NhZ2VzLlxuXHQgKiAqL1xuXHRjb25zdCB1c2VyQW5kQXNzaXN0YW50TWVzc2FnZXM6IEFpTWVzc2FnZVtdID0gYWN0aXZlVGhyZWFkXG5cdFx0PyBtZXNzYWdlc0Zyb21EQi5tYXAoKG0pID0+ICh7XG5cdFx0XHRcdC4uLm0sXG5cdFx0XHRcdGlkOiBtLm1lc3NhZ2VJZCxcblx0XHRcdFx0cm9sZTogbS5yb2xlIGFzIEFpTWVzc2FnZVsncm9sZSddLFxuXHRcdFx0XHRjb250ZW50OiBtLmNvbnRlbnQsXG5cdFx0XHRcdGNyZWF0ZWRBdDogbS5jcmVhdGVkQXQsXG5cdFx0XHR9KSlcblx0XHQ6IFtdXG5cdC8qKlxuXHQgKiBAZGVzY3JpcHRpb25cblx0ICogQ29uY2F0ZW5hdGUgYWxsIE1hc3RlcmJvdHMgc3lzdGVtIHByb21wdHMgdG8gcGFzcyBpdCB0byBjaGF0IGNvbnRleHQuIFRoaXMgcmVwcmVzZW50cyB0aGUgaW5pdGlhbC9jb250aW51aW5nIHN0YXRlIG9mIHRoZSBjaGF0LlxuXHQgKiBUaGUgc3lzdGVtIHByb21wdHMgaXMgdGhlIGlkZW50aWZ5IG9mIGVhY2ggTWFzdGVyYm90IGFuZCBob3cgdGhpcyB3aWxsIGludGVyYWN0IHdpdGggVXNlcnMuIFByb21wdCBvcmRlciBpcyBpbXBvcnRhbnQgdG8gcHJvdmlkZSBhIGdvb2QgdXNlciBleHBlcmllbmNlLlxuXHQgKlxuXHQgKiAqKlByb21wdCBGb3JtYXR0aW5nOioqXG5cdCAqXG5cdCAqIDEuIE1hc3RlcmJvdCBFeHBlcnRpc2UuXG5cdCAqIDIuIE1hc3RlcmJvdCBEZWZhdWx0IG9yIFVzZXIgUHJlZmVyZW5jZXMgQ29uZmlnLiBJbnN0cnVjdGlvbnMuXG5cdCAqIDMuIE1hc3RlcmJvdCBGaW5hbCBFbmhhbmNlciAoSVEpIEluc3RydWN0aW9ucy5cblx0ICogNC4gTWFzdGVyYm90IE91dHB1dCBJbnN0cnVjdGlvbnMgKEdvZXMgYmVmb3JlIGFwcGVuZGluZyB0aGUgbmV3IG1lc3NhZ2UpLlxuXHQgKiA1LiBNYXN0ZXJib3QgRXhhbXBsZXMgKEdvZXMgYmVmb3JlIGFwcGVuZGluZyB0aGUgbmV3IG1lc3NhZ2UpLlxuXHQgKiAqL1xuXHRjb25zdCBzeXN0ZW1Qcm9tcHRzOiBBaU1lc3NhZ2VbXSA9XG5cdFx0Y2hhdGJvdFN5c3RlbVByb21wdHMubGVuZ3RoICYmIHVzZXJQcmVmZXJlbmNlc1Byb21wdHMubGVuZ3RoXG5cdFx0XHQ/IFtcblx0XHRcdFx0XHRjaGF0Ym90U3lzdGVtUHJvbXB0c1swXSxcblx0XHRcdFx0XHQuLi51c2VyUHJlZmVyZW5jZXNQcm9tcHRzLFxuXHRcdFx0XHRcdGNoYXRib3RTeXN0ZW1Qcm9tcHRzWzFdLFxuXHRcdFx0XHRdLmZpbHRlcigocHJvbXB0KSA9PiBwcm9tcHQgIT09IHVuZGVmaW5lZClcblx0XHRcdDogW11cblx0LyoqXG5cdCAqIEBkZXNjcmlwdGlvblxuXHQgKiBDb25jYXRlbmF0ZSBhbGwgbWVzc2FnZSB0byBwYXNzIGl0IHRvIGNoYXQgVUkgY29tcG9uZW50LiBUaGlzIGxpc3QgaXMgdGhlIGluaXRpYWwgc3RhdGUgb2YgdGhlIGNoYXQgVUkgYW5kIHVwZGF0ZXMgb24gZXZlcnkgbmV3IG1lc3NhZ2Ugd2l0aCBgYWxsTWVzc2FnZXNgLlxuXHQgKlxuXHQgKiAqKlByb21wdCBGb3JtYXR0aW5nOioqXG5cdCAqXG5cdCAqIDEuIE1hc3RlcmJvdCBFeHBlcnRpc2UuXG5cdCAqIDIuIE1hc3RlcmJvdCBEZWZhdWx0IG9yIFVzZXIgUHJlZmVyZW5jZXMgQ29uZmlnLiBJbnN0cnVjdGlvbnMuXG5cdCAqIDMuIE1hc3RlcmJvdCBGaW5hbCBFbmhhbmNlciAoSVEpIEluc3RydWN0aW9ucy5cblx0ICogNC4gTWFzdGVyYm90IE91dHB1dCBJbnN0cnVjdGlvbnMuXG5cdCAqIDUuIENvbnZlcnNhdGlvbiBiZXR3ZWVuIHVzZXIgYW5kIGFzc2lzdGFudC5cblx0ICogKi9cblx0Ly8gYmlvbWUtaWdub3JlIGxpbnQvY29ycmVjdG5lc3MvdXNlRXhoYXVzdGl2ZURlcGVuZGVuY2llczogPGV4cGxhbmF0aW9uPlxuXHRjb25zdCBpbml0aWFsTWVzc2FnZXM6IEFpTWVzc2FnZVtdID0gdXNlTWVtbyhcblx0XHQoKSA9PiBzeXN0ZW1Qcm9tcHRzLmNvbmNhdCh1c2VyQW5kQXNzaXN0YW50TWVzc2FnZXMpLFxuXHRcdFthY3RpdmVDaGF0Ym90LCBhY3RpdmVUaHJlYWRdLFxuXHQpXG5cdGNvbnN0IHRocmVhZElkID0gaXNDb250aW51b3VzVGhyZWFkXG5cdFx0PyByYW5kb21UaHJlYWRJZC5jdXJyZW50XG5cdFx0OiBhY3RpdmVUaHJlYWQ/LnRocmVhZElkIHx8IHJhbmRvbVRocmVhZElkLmN1cnJlbnRcblx0Y29uc3QgY2hhdGJvdCA9IGFjdGl2ZVRocmVhZD8uY2hhdGJvdCB8fCBhY3RpdmVDaGF0Ym90XG5cblx0Y29uc3QgcmVzb2x2ZVRocmVhZElkID0gKHBhcmFtczoge1xuXHRcdGlzQ29udGludW91c1RocmVhZDogYm9vbGVhblxuXHRcdHJhbmRvbVRocmVhZElkOiBzdHJpbmdcblx0XHR0aHJlYWRJZDogc3RyaW5nXG5cdFx0YWN0aXZlVGhyZWFkSWQ/OiBzdHJpbmdcblx0fSkgPT4ge1xuXHRcdGNvbnN0IHsgaXNDb250aW51b3VzVGhyZWFkLCByYW5kb21UaHJlYWRJZCwgdGhyZWFkSWQsIGFjdGl2ZVRocmVhZElkIH0gPVxuXHRcdFx0cGFyYW1zXG5cdFx0aWYgKGlzQ29udGludW91c1RocmVhZCkgcmV0dXJuIHJhbmRvbVRocmVhZElkXG5cdFx0aWYgKGlzTmV3Q2hhdCkgcmV0dXJuIHRocmVhZElkXG5cdFx0cmV0dXJuIGFjdGl2ZVRocmVhZElkXG5cdH1cblxuXHRjb25zdCBzZWFyY2hQYXJhbXMgPSB1c2VTZWFyY2hQYXJhbXMoKVxuXHRjb25zdCBtZXNzYWdlQXR0YWNobWVudHMgPSB1c2VSZWY8RmlsZUF0dGFjaG1lbnRbXT4oW10pXG5cdGNvbnN0IGNsaWNrZWRDb250ZW50UmVmID0gdXNlUmVmPHN0cmluZz4oJycpXG5cdGNvbnN0IGRiS2V5cyA9IGdldFVzZXJJbmRleGVkREJLZXlzKHNlc3Npb24/LnVzZXI/LmlkKVxuXHRjb25zdCBpbmRleGVkREJBY3Rpb25zID0gdXNlSW5kZXhlZERCKGRiS2V5cylcblxuXHQvKipcblx0ICogQ3VzdG9tIGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBjdXJyZW50IFVSTCBoYXMgYSBzcGVjaWZpYyBzZWFyY2ggcGFyYW0uIFRoaXMgaGFzIGJlZW4gY3JlYXRlZCBhcyB0aGlzIGR1ZSB0byB0aGUgZmFjdCB0aGF0XG5cdCAqIHRoZSBgdXNlU2VhcmNoUGFyYW1zYCBob29rIGRvZXMgbm90IHVwZGF0ZSB0aGUgVVJMIHdoZW4gdGhlIHBhZ2UgaXMgcmVsb2FkZWQgYW5kIG5leHRqcy9yZWFjdCBpcyB1bmFibGUgdG8ga25vdyB0aGUgbGF0ZXN0IHN0YXRlXG5cdCAqIGV2ZW4gdGhvdWdoIHRoYXQgd2UgcGFzcyBpdCBhbmQgY2hlY2suXG5cdCAqXG5cdCAqXG5cdCAqIEByZXR1cm5zIFRoZSBjaGVjayBhbmQgcGFyYW1zIG9iamVjdHMgdG8gY2hlY2sgd2hhdCBhcmUgdGhlIGN1cnJlbnQgc2VhcmNoIHBhcmFtcy4gSXQgY2FuIGJlIGV4cGFuZGVkIGluIHRoZSBmdXR1cmUgdG8gY2hlY2sgZm9yIG1vcmUgcGFyYW1zLlxuXHQgKi9cblx0Y29uc3QgZ2V0Q3VycmVudFNlYXJjaFBhcmFtcyA9ICgpID0+IHtcblx0XHRjb25zdCByZWNlbnRTZWFyY2hQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpXG5cdFx0Y29uc3QgY29udGludW91c1RocmVhZElkID0gcmVjZW50U2VhcmNoUGFyYW1zLmdldCgnY29udGludW91c1RocmVhZElkJylcblxuXHRcdHJldHVybiB7XG5cdFx0XHRjaGVja3M6IHtcblx0XHRcdFx0aXNDb250aW51aW5nVGhyZWFkOiBCb29sZWFuKGNvbnRpbnVvdXNUaHJlYWRJZCksXG5cdFx0XHR9LFxuXHRcdFx0cGFyYW1zOiB7XG5cdFx0XHRcdGNvbnRpbnVvdXNUaHJlYWRJZDogY29udGludW91c1RocmVhZElkLFxuXHRcdFx0fSxcblx0XHR9XG5cdH1cblxuXHRjb25zdCB1c2VDaGF0Q29uZmlnOiBQYXJ0aWFsPFVzZUNoYXRPcHRpb25zPiA9IHtcblx0XHRpbml0aWFsTWVzc2FnZXMsXG5cdFx0aWQ6IHRocmVhZElkLFxuXHRcdC8vIFRPRE86IENoZWNrIHRoaXMgZXhwZXJpbWVudGFsIGZlYXR1cmU6IGh0dHBzOi8vc2RrLnZlcmNlbC5haS9kb2NzL3JlZmVyZW5jZS9haS1zZGstdWkvdXNlLWNoYXQjZXhwZXJpbWVudGFsX3ByZXBhcmUtcmVxdWVzdC1ib2R5XG5cdFx0Ly8gPyBXZSBtaWdodCBuZWVkIGl0IGRlcGVuZGluZyB3aGF0IHRoZSBBSSByZXR1cm5zIHRvIHVzIGFuZCB3aGF0IGtpbmQgb2YgZGF0YSBpdCBoYXMuLi4gdGhpcyBpcyBtaWdodCBiZSB1c2VmdWwgZm9yOlxuXHRcdC8vID8gLSBXZWIgU2VhcmNoIChUb29sICsgR2xvYmFsKVxuXHRcdC8vID8gLSBBbnkgYWRkaXRpb25hbCB0b29sIHdpdGggbXVsdGlwbGUgc3RlcHMgb3IgdXNlciBkZWNpc2lvbnMgYW5kIHJlYWN0IGFjY29yZGluZyB0byB0aGVtLi4uXG5cdFx0Ly8gZXhwZXJpbWVudGFsX3ByZXBhcmVSZXF1ZXN0Qm9keVxuXHRcdGJvZHk6IHtcblx0XHRcdGlkOiB0aHJlYWRJZCxcblx0XHRcdG1vZGVsOiBzZWxlY3RlZE1vZGVsLFxuXHRcdFx0Y2xpZW50VHlwZSxcblx0XHRcdHdlYlNlYXJjaCxcblx0XHRcdGlzUG93ZXJVcCxcblx0XHR9LFxuXHR9XG5cdGNvbnN0IHtcblx0XHRpbnB1dCxcblx0XHRtZXNzYWdlcyxcblx0XHRpc0xvYWRpbmcsXG5cdFx0c3RvcCxcblx0XHRhcHBlbmQsXG5cdFx0cmVsb2FkLFxuXHRcdHNldElucHV0LFxuXHRcdHNldE1lc3NhZ2VzLFxuXHR9ID0gdXNlQ2hhdCh7XG5cdFx0Li4udXNlQ2hhdENvbmZpZyxcblx0XHQvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IDxleHBsYW5hdGlvbj5cblx0XHRhc3luYyBvblJlc3BvbnNlKHJlc3BvbnNlOiBhbnkpIHtcblx0XHRcdGlmIChyZXNwb25zZS5zdGF0dXMgPj0gNDAwKSB7XG5cdFx0XHRcdGN1c3RvbVNvbm5lcih7IHR5cGU6ICdlcnJvcicsIHRleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQgfSlcblxuXHRcdFx0XHRpZiAoaXNOZXdDaGF0KSB7XG5cdFx0XHRcdFx0YXdhaXQgZGVsZXRlVGhyZWFkKHtcblx0XHRcdFx0XHRcdHRocmVhZElkLFxuXHRcdFx0XHRcdFx0and0OiBzZXNzaW9uPy51c2VyPy5oYXN1cmFKd3QsXG5cdFx0XHRcdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0Ly8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiA8ZXhwbGFuYXRpb24+XG5cdFx0YXN5bmMgb25GaW5pc2gobWVzc2FnZTogT3BlbkFpLk1lc3NhZ2UsIG9wdGlvbnM6IGFueSkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0aWYgKGFwcENvbmZpZy5mZWF0dXJlcy5kZXZNb2RlKSB7XG5cdFx0XHRcdFx0Y3VzdG9tU29ubmVyKHtcblx0XHRcdFx0XHRcdHR5cGU6ICdpbmZvJyxcblx0XHRcdFx0XHRcdHRleHQ6IGBBaSBnZW5lcmF0aW9uIGZpbmlzaGVkLCByZWFzb246ICR7b3B0aW9ucy5maW5pc2hSZWFzb259YCxcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGZpbmFsTWVzc2FnZSA9IHsgLi4ubWVzc2FnZSB9XG5cblx0XHRcdFx0Ly8/IEhhbmRsZSBnZW5lcmF0ZWQgaW1hZ2UgZmlsZXMgaWYgcHJlc2VudFxuXHRcdFx0XHRpZiAob3B0aW9ucy5maWxlcyAmJiBvcHRpb25zLmZpbGVzLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0XHRmaW5hbE1lc3NhZ2UucGFydHMgPSBvcHRpb25zLmZpbGVzLm1hcChcblx0XHRcdFx0XHRcdChmaWxlOiB7XG5cdFx0XHRcdFx0XHRcdGJhc2U2NDogc3RyaW5nXG5cdFx0XHRcdFx0XHRcdHVpbnQ4QXJyYXk6IFVpbnQ4QXJyYXlcblx0XHRcdFx0XHRcdFx0bWltZVR5cGU6IHN0cmluZ1xuXHRcdFx0XHRcdFx0XHRmaWxlTmFtZTogc3RyaW5nXG5cdFx0XHRcdFx0XHR9KSA9PiAoe1xuXHRcdFx0XHRcdFx0XHR0eXBlOiAnZmlsZScsXG5cdFx0XHRcdFx0XHRcdGRhdGE6IGZpbGUuYmFzZTY0LFxuXHRcdFx0XHRcdFx0XHRtaW1lVHlwZTogZmlsZS5taW1lVHlwZSxcblx0XHRcdFx0XHRcdH0pLFxuXHRcdFx0XHRcdClcblx0XHRcdFx0XHRpZiAoYXBwQ29uZmlnLmZlYXR1cmVzLmRldk1vZGUpIHtcblx0XHRcdFx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdFx0XHRcdHR5cGU6ICdpbmZvJyxcblx0XHRcdFx0XHRcdFx0dGV4dDogJ0dlbmVyYXRlZCBpbWFnZShzKScsXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vPyBDaGVjayBpZiB0aGUgZ2VuZXJhdGlvbiB3YXMgY3V0IG9mZlxuXHRcdFx0XHRjb25zdCBpc0N1dE9mZiA9IFtcblx0XHRcdFx0XHQnbGVuZ3RoJyxcblx0XHRcdFx0XHQnY29udGVudC1maWx0ZXInLFxuXHRcdFx0XHRcdCdlcnJvcicsXG5cdFx0XHRcdFx0J3Vua25vd24nLFxuXHRcdFx0XHRdLmluY2x1ZGVzKG9wdGlvbnMuZmluaXNoUmVhc29uKVxuXHRcdFx0XHRzZXRJc0N1dE9mZihpc0N1dE9mZilcblx0XHRcdFx0aWYgKGlzQ3V0T2ZmKSB7XG5cdFx0XHRcdFx0bG9nRXJyb3JUb1NlbnRyeSgnR2VuZXJhdGlvbiB3YXMgY3V0IG9mZicsIHtcblx0XHRcdFx0XHRcdGVycm9yOiBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdCdUaGUgQUkgZ2VuZXJhdGlvbiB3YXMgY3V0IG9mZi4gQ2xpY2sgb24gXCJDb250aW51ZVwiIHRvIGZpbmlzaCB0aGUgcmVzcG9uc2UuJyxcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0XHRtZXNzYWdlOiAnQWkgZmFpbGVkIHRvIGZpbmlzaCBnZW5lcmF0ZSB0aGUgbWVzc2FnZS4nLFxuXHRcdFx0XHRcdFx0bGV2ZWw6ICd3YXJuaW5nJyxcblx0XHRcdFx0XHRcdGV4dHJhOiB7XG5cdFx0XHRcdFx0XHRcdHRocmVhZFNsdWc6IGFjdGl2ZVRocmVhZD8uc2x1Zyxcblx0XHRcdFx0XHRcdFx0dXNlcklkOiBzZXNzaW9uPy51c2VyLmlkLFxuXHRcdFx0XHRcdFx0XHRjaGF0Ym90TmFtZTogYWN0aXZlQ2hhdGJvdD8ubmFtZSxcblx0XHRcdFx0XHRcdFx0YXR0YWNobWVudHM6IG1lc3NhZ2VBdHRhY2htZW50cy5jdXJyZW50LFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdFx0XHR0eXBlOiAnY29udGludWUnLFxuXHRcdFx0XHRcdFx0dGV4dDogJ1RoZSBBSSBnZW5lcmF0aW9uIHdhcyBjdXQgb2ZmLiBDbGljayBvbiBcIkNvbnRpbnVlXCIgdG8gZmluaXNoIHRoZSByZXNwb25zZS4nLFxuXHRcdFx0XHRcdH0pXG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKG9wdGlvbnMuZmluaXNoUmVhc29uID09PSAnZXJyb3InKSB7XG5cdFx0XHRcdFx0bG9nRXJyb3JUb1NlbnRyeSgnRXJyb3Igc2F2aW5nIG5ldyBtZXNzYWdlJywge1xuXHRcdFx0XHRcdFx0ZXJyb3I6IG5ldyBFcnJvcignRXJyb3Igc2F2aW5nIG5ldyBtZXNzYWdlJyksXG5cdFx0XHRcdFx0XHRtZXNzYWdlOiAnRmFpbGVkIHRvIHNhdmUgdGhlIE1hc3RlcmJvdCBtZXNzYWdlLicsXG5cdFx0XHRcdFx0XHRsZXZlbDogJ3dhcm5pbmcnLFxuXHRcdFx0XHRcdFx0ZXh0cmE6IHtcblx0XHRcdFx0XHRcdFx0dGhyZWFkU2x1ZzogYWN0aXZlVGhyZWFkPy5zbHVnLFxuXHRcdFx0XHRcdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0XHRcdFx0XHRcdGNoYXRib3ROYW1lOiBhY3RpdmVDaGF0Ym90Py5uYW1lLFxuXHRcdFx0XHRcdFx0XHRhdHRhY2htZW50czogbWVzc2FnZUF0dGFjaG1lbnRzLmN1cnJlbnQubWFwKChhdHQpID0+ICh7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZTogYXR0Lm5hbWUsXG5cdFx0XHRcdFx0XHRcdFx0c2l6ZTogYXR0LnNpemUsXG5cdFx0XHRcdFx0XHRcdFx0Y29udGVudFR5cGU6IGF0dC5jb250ZW50VHlwZSxcblx0XHRcdFx0XHRcdFx0fSkpLFxuXHRcdFx0XHRcdFx0fSxcblx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdFx0XHR0eXBlOiAnZXJyb3InLFxuXHRcdFx0XHRcdFx0dGV4dDogJ0ZhaWxlZCB0byBmaW5pc2ggY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBNYXN0ZXJib3QuIFBsZWFzZSB0cnkgYWdhaW4uJyxcblx0XHRcdFx0XHR9KVxuXG5cdFx0XHRcdFx0aWYgKGlzTmV3Q2hhdCkge1xuXHRcdFx0XHRcdFx0YXdhaXQgZGVsZXRlVGhyZWFkKHtcblx0XHRcdFx0XHRcdFx0dGhyZWFkSWQ6IGFjdGl2ZVRocmVhZD8udGhyZWFkSWQsXG5cdFx0XHRcdFx0XHRcdGp3dDogc2Vzc2lvbj8udXNlcj8uaGFzdXJhSnd0LFxuXHRcdFx0XHRcdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVyblxuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnN0IGFpQ2hhdFRocmVhZElkID0gcmVzb2x2ZVRocmVhZElkKHtcblx0XHRcdFx0XHRpc0NvbnRpbnVvdXNUaHJlYWQsXG5cdFx0XHRcdFx0cmFuZG9tVGhyZWFkSWQ6IHJhbmRvbVRocmVhZElkLmN1cnJlbnQsXG5cdFx0XHRcdFx0dGhyZWFkSWQsXG5cdFx0XHRcdFx0YWN0aXZlVGhyZWFkSWQ6IGFjdGl2ZVRocmVhZD8udGhyZWFkSWQsXG5cdFx0XHRcdH0pXG5cblx0XHRcdFx0Y29uc3QgdXNlck1lc3NhZ2VJZCA9IGNyeXB0by5yYW5kb21VVUlEKClcblx0XHRcdFx0Y29uc3QgYXNzaXN0YW50TWVzc2FnZUlkID0gY3J5cHRvLnJhbmRvbVVVSUQoKVxuXG5cdFx0XHRcdC8vIFNhdmluZyBhdHRhY2htZW50cyB0byBpbmRleGVkREIgYW5kIGF0dGFjaGluZyB0aGVtIHRvIHRoZSBtZXNzYWdlXG5cdFx0XHRcdGNvbnN0IGF0dGFjaG1lbnRzID0gbWVzc2FnZUF0dGFjaG1lbnRzLmN1cnJlbnRcblx0XHRcdFx0Y29uc3QgbmV3QXR0YWNobWVudHMgPSBhdHRhY2htZW50c1xuXHRcdFx0XHRcdD8gYXR0YWNobWVudHMubWFwKChhdHRhY2htZW50KSA9PiAoe1xuXHRcdFx0XHRcdFx0XHQuLi5hdHRhY2htZW50LFxuXHRcdFx0XHRcdFx0XHQvLyBXZSBtYWtlIHRoZSByZWxhdGlvbnNoaXAgb2YgdGhlIGF0dGFjaG1lbnQgd2l0aCB0aGUgdXNlciBhbmQgYXNzaXN0YW50IG1lc3NhZ2VzLCBtYWtpbmcgaXQgZmxleGlibGVcblx0XHRcdFx0XHRcdFx0bWVzc2FnZUlkczogW1xuXHRcdFx0XHRcdFx0XHRcdC4uLihhdHRhY2htZW50Py5tZXNzYWdlSWRzIHx8IFtdKSxcblx0XHRcdFx0XHRcdFx0XHR1c2VyTWVzc2FnZUlkLFxuXHRcdFx0XHRcdFx0XHRcdGFzc2lzdGFudE1lc3NhZ2VJZCxcblx0XHRcdFx0XHRcdFx0XSxcblx0XHRcdFx0XHRcdH0pKVxuXHRcdFx0XHRcdDogW11cblxuXHRcdFx0XHRmb3IgKGNvbnN0IGF0dGFjaG1lbnQgb2YgbmV3QXR0YWNobWVudHMpIHtcblx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0aW5kZXhlZERCQWN0aW9ucy51cGRhdGVJdGVtKGF0dGFjaG1lbnQuaWQsIGF0dGFjaG1lbnQpXG5cdFx0XHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBhdHRhY2htZW50OiAnLCBlcnJvcilcblx0XHRcdFx0XHRcdGluZGV4ZWREQkFjdGlvbnMuYWRkSXRlbShhdHRhY2htZW50KVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRtZXNzYWdlQXR0YWNobWVudHMuY3VycmVudCA9IG5ld0F0dGFjaG1lbnRzXG5cblx0XHRcdFx0Y29uc3QgbmV3QmFzZU1lc3NhZ2U6IFBhcnRpYWw8U2F2ZU5ld01lc3NhZ2VQYXJhbXM+ID0ge1xuXHRcdFx0XHRcdHRocmVhZElkOiBhaUNoYXRUaHJlYWRJZCA/PyAnJyxcblx0XHRcdFx0XHRqd3Q6IHNlc3Npb24/LnVzZXI/Lmhhc3VyYUp3dCxcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNvbnN0IGN1cmF0ZWRQcmVVc2VyTWVzc2FnZVNsdWcgPSB1c2VyQ29udGVudFJlZi5jdXJyZW50XG5cdFx0XHRcdFx0LnRvTG9jYWxlTG93ZXJDYXNlKClcblx0XHRcdFx0XHQucmVwbGFjZShcblx0XHRcdFx0XHRcdC8oZXhwbGFpbiBtb3JlIGluLWRlcHRoIGFuZCBpbiBkZXRhaWwgYWJvdXQgfGV4cGxhaW4gbW9yZSBpbiBkZXB0aCBhbmQgaW4gZGV0YWlsIGFib3V0IHxleHBsYWluIG1vcmUgaW4tZGVwdGggYWJvdXQgfGV4cGxhaW4gbW9yZSBpbiBkZXB0aCBhYm91dCB8Y2FuIHlvdSBwcm92aWRlIGEgZGV0YWlsZWQgZXhwbGFuYXRpb24gb2YgKS9nLFxuXHRcdFx0XHRcdFx0JycsXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHQvLyA/IGFzc2lzdGFudCBtZXNzYWdlIHdpdGggcmVhc29uaW5nIGluZm9ybWF0aW9uXG5cdFx0XHRcdGNvbnN0IGFzc2lzdGFudE1lc3NhZ2VUaGlua2luZyA9IGhhc1JlYXNvbmluZyhmaW5hbE1lc3NhZ2UpXG5cdFx0XHRcdFx0PyB7XG5cdFx0XHRcdFx0XHRcdHRoaW5raW5nOiBmaW5hbE1lc3NhZ2UucGFydHM/LmZpbmQoXG5cdFx0XHRcdFx0XHRcdFx0KG1zZykgPT4gbXNnLnR5cGUgPT09ICdyZWFzb25pbmcnLFxuXHRcdFx0XHRcdFx0XHQpPy5yZWFzb25pbmcsXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0OiB7fVxuXHRcdFx0XHRjb25zdCB1cGxvYWROZXdNZXNzYWdlcyA9IGFzeW5jICgpID0+IHtcblx0XHRcdFx0XHQvLyBHZW5lcmF0ZSB1bmlxdWUgc2x1Z3MgZm9yIGJvdGggbWVzc2FnZXNcblx0XHRcdFx0XHRjb25zdCB1c2VyTWVzc2FnZVNsdWcgPSBhd2FpdCBnZW5lcmF0ZVVuaXF1ZVNsdWcoXG5cdFx0XHRcdFx0XHRjdXJhdGVkUHJlVXNlck1lc3NhZ2VTbHVnLFxuXHRcdFx0XHRcdFx0J21lc3NhZ2UnLFxuXHRcdFx0XHRcdClcblx0XHRcdFx0XHRjb25zdCBhc3Npc3RhbnRNZXNzYWdlU2x1ZyA9IGF3YWl0IGdlbmVyYXRlVW5pcXVlU2x1Zyhcblx0XHRcdFx0XHRcdG1lc3NhZ2UuY29udGVudCxcblx0XHRcdFx0XHRcdCdtZXNzYWdlJyxcblx0XHRcdFx0XHQpXG5cblx0XHRcdFx0XHQvLyBDcmVhdGUgbmV3IG1lc3NhZ2VzIGFuZCBzYXZlIHRoZW0gdG8gdGhlIGRhdGFiYXNlXG5cdFx0XHRcdFx0Y29uc3QgW1xuXHRcdFx0XHRcdFx0bmV3VXNlck1lc3NhZ2UsXG5cdFx0XHRcdFx0XHRuZXdBc3Npc3RhbnRNZXNzYWdlLFxuXHRcdFx0XHRcdF06IFBhcnRpYWw8U2F2ZU5ld01lc3NhZ2VQYXJhbXM+W10gPSBbXG5cdFx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRcdC4uLm5ld0Jhc2VNZXNzYWdlLFxuXHRcdFx0XHRcdFx0XHRtZXNzYWdlSWQ6IHVzZXJNZXNzYWdlSWQsXG5cdFx0XHRcdFx0XHRcdHNsdWc6IHVzZXJNZXNzYWdlU2x1Zyxcblx0XHRcdFx0XHRcdFx0cm9sZTogJ3VzZXInLFxuXHRcdFx0XHRcdFx0XHRtb2RlbDogc2VsZWN0ZWRNb2RlbCxcblx0XHRcdFx0XHRcdFx0Y29udGVudDogdXNlckNvbnRlbnRSZWYuY3VycmVudCxcblx0XHRcdFx0XHRcdFx0Y3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG5cdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0XHQuLi5uZXdCYXNlTWVzc2FnZSxcblx0XHRcdFx0XHRcdFx0Li4uYXNzaXN0YW50TWVzc2FnZVRoaW5raW5nLFxuXHRcdFx0XHRcdFx0XHRtZXNzYWdlSWQ6IGFzc2lzdGFudE1lc3NhZ2VJZCxcblx0XHRcdFx0XHRcdFx0c2x1ZzogYXNzaXN0YW50TWVzc2FnZVNsdWcsXG5cdFx0XHRcdFx0XHRcdHJvbGU6ICdhc3Npc3RhbnQnLFxuXHRcdFx0XHRcdFx0XHRtb2RlbDogc2VsZWN0ZWRNb2RlbCxcblx0XHRcdFx0XHRcdFx0Y29udGVudDogZmluYWxNZXNzYWdlLmNvbnRlbnQsXG5cdFx0XHRcdFx0XHRcdGNyZWF0ZWRBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIDEwMDApLnRvSVNPU3RyaW5nKCksXG5cdFx0XHRcdFx0XHRcdGV4YW1wbGVzOlxuXHRcdFx0XHRcdFx0XHRcdGZpbmFsTWVzc2FnZS5wYXJ0cz8uZmlsdGVyKChwYXJ0KSA9PiBwYXJ0LnR5cGUgPT09ICdmaWxlJykgfHxcblx0XHRcdFx0XHRcdFx0XHRbXSxcblx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XVxuXG5cdFx0XHRcdFx0cmV0dXJuIChhd2FpdCBQcm9taXNlLmFsbChbXG5cdFx0XHRcdFx0XHRzYXZlTmV3TWVzc2FnZShuZXdVc2VyTWVzc2FnZSksXG5cdFx0XHRcdFx0XHRzYXZlTmV3TWVzc2FnZShuZXdBc3Npc3RhbnRNZXNzYWdlKSxcblx0XHRcdFx0XHRdKSkgYXMgTWVzc2FnZVtdXG5cdFx0XHRcdH1cblxuXHRcdFx0XHRsZXQgbmV3VGhyZWFkTWVzc2FnZXM6IE1lc3NhZ2VbXSA9IFtdXG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRuZXdUaHJlYWRNZXNzYWdlcyA9IGF3YWl0IHVwbG9hZE5ld01lc3NhZ2VzKClcblx0XHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIG1lc3NhZ2Ugc2x1Z3M6ICcsIGVycm9yKVxuXG5cdFx0XHRcdFx0Ly8gPyBJZiB0aGUgZXJyb3IgaXMgZHVlIHRvIGR1cGxpY2F0ZSBrZXkgdmFsdWUsIHdlIHJldHJ5IHRoZSB1cGxvYWQgb25lIG1vcmUgdGltZSB0byBkbyB0aGUgcmVjdXJzaXZlIGNoZWNrIGFnYWluXG5cdFx0XHRcdFx0Ly8gISBUaGlzIG1pZ2h0IGJlIGFuIGVkZ2UgY2FzZSBub3cgdGhhdCB3ZSB1c2UgZHJpenpsZSBmb3IgdGhpcyBxdWVyeSwgYnV0IGl0IGlzIHN0aWxsIGEgZ29vZCBwcmFjdGljZSB0byBoYW5kbGUgdGhpcyBlcnJvclxuXHRcdFx0XHRcdGlmICgoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2UuaW5jbHVkZXMoJ2R1cGxpY2F0ZSBrZXkgdmFsdWUnKSkge1xuXHRcdFx0XHRcdFx0YXdhaXQgdXBsb2FkTmV3TWVzc2FnZXMoKVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHNldFN0YXRlKHtcblx0XHRcdFx0XHRpc05ld0NoYXQ6IGZhbHNlLFxuXHRcdFx0XHR9KVxuXG5cdFx0XHRcdGNvbnN0IG5ld1NlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoc2VhcmNoUGFyYW1zLnRvU3RyaW5nKCkpXG5cdFx0XHRcdGNvbnN0IHsgY2hlY2tzIH0gPSBnZXRDdXJyZW50U2VhcmNoUGFyYW1zKClcblxuXHRcdFx0XHRpZiAoY2hlY2tzLmlzQ29udGludWluZ1RocmVhZCkge1xuXHRcdFx0XHRcdC8vIFJlbW92ZSBjb250aW51b3VzVGhyZWFkSWQgc2VhcmNoIHBhcmFtXG5cdFx0XHRcdFx0bmV3U2VhcmNoUGFyYW1zLmRlbGV0ZSgnY29udGludW91c1RocmVhZElkJylcblx0XHRcdFx0XHRzZXRJc0NvbnRpbnVvdXNUaHJlYWQoZmFsc2UpXG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0aHJvdHRsZShhc3luYyAoKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgbmV3VGhyZWFkID0gYWN0aXZlVGhyZWFkXG5cdFx0XHRcdFx0XHQ/IHtcblx0XHRcdFx0XHRcdFx0XHQuLi5hY3RpdmVUaHJlYWQsXG5cdFx0XHRcdFx0XHRcdFx0bWVzc2FnZXM6IFsuLi5hY3RpdmVUaHJlYWQubWVzc2FnZXMsIC4uLm5ld1RocmVhZE1lc3NhZ2VzXSxcblx0XHRcdFx0XHRcdFx0XHRtZXRhZGF0YTogbmV3QXR0YWNobWVudHMubGVuZ3RoXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhdHRhY2htZW50czogdW5pcUJ5KFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQuLi5uZXdBdHRhY2htZW50cyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Li4uKGFjdGl2ZVRocmVhZC5tZXRhZGF0YS5hdHRhY2htZW50cyB8fCBbXSksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0J2lkJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHQ6IHVuZGVmaW5lZCxcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0OiB1bmRlZmluZWRcblx0XHRcdFx0XHRjb25zdCB0aHJlYWQgPSBhd2FpdCB1cGRhdGVBY3RpdmVUaHJlYWQobmV3VGhyZWFkKVxuXG5cdFx0XHRcdFx0aWYgKFxuXHRcdFx0XHRcdFx0aXNOZXdDaGF0IHx8XG5cdFx0XHRcdFx0XHRpc0NvbnRpbnVvdXNUaHJlYWQgfHxcblx0XHRcdFx0XHRcdCh0aHJlYWQubWVzc2FnZXMubGVuZ3RoID4gMCAmJiB0aHJlYWQubWVzc2FnZXMubGVuZ3RoIDw9IDIpXG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHQvLyBjb25zb2xlLmxvZygndGhyZWFkJywgdGhyZWFkKVxuXHRcdFx0XHRcdFx0Y29uc3QgZG9tYWluID0gZ2V0Q2Fub25pY2FsRG9tYWluKGFjdGl2ZUNoYXRib3Q/Lm5hbWUgfHwgJ2JsYW5rYm90Jylcblx0XHRcdFx0XHRcdGNvbnN0IGNhdGVnb3J5ID1cblx0XHRcdFx0XHRcdFx0YWN0aXZlQ2hhdGJvdD8uY2F0ZWdvcmllc1swXT8uY2F0ZWdvcnk/Lm5hbWUgfHwgcGFyYW1zLmNhdGVnb3J5XG5cdFx0XHRcdFx0XHRjb25zdCBjaGF0Ym90ID0gYWN0aXZlQ2hhdGJvdD8ubmFtZSB8fCBwYXJhbXMuY2hhdGJvdFxuXHRcdFx0XHRcdFx0Y29uc3QgdGhyZWFkU2x1ZyA9IHBhcmFtcz8udGhyZWFkU2x1ZyB8fCB0aHJlYWQuc2x1Z1xuXG5cdFx0XHRcdFx0XHRuYXZpZ2F0ZVRvKHtcblx0XHRcdFx0XHRcdFx0dXJsVHlwZTogJ3RocmVhZFVybCcsXG5cdFx0XHRcdFx0XHRcdHNoYWxsb3c6IHRydWUsXG5cdFx0XHRcdFx0XHRcdG5hdmlnYXRpb25QYXJhbXM6IHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiAncGVyc29uYWwnLFxuXHRcdFx0XHRcdFx0XHRcdGNhdGVnb3J5LFxuXHRcdFx0XHRcdFx0XHRcdGRvbWFpbixcblx0XHRcdFx0XHRcdFx0XHRjaGF0Ym90LFxuXHRcdFx0XHRcdFx0XHRcdHRocmVhZFNsdWcsXG5cdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHR9KVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHNldExvYWRpbmdTdGF0ZSgnZmluaXNoZWQnKVxuXHRcdFx0XHRcdHNldEFjdGl2ZVRvb2wodW5kZWZpbmVkKVxuXHRcdFx0XHRcdHNldElzTmV3UmVzcG9uc2UoZmFsc2UpXG5cdFx0XHRcdH0sIDE0MCkoKVxuXHRcdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignRXJyb3Igc2F2aW5nIG5ldyBtZXNzYWdlOiAnLCBlcnJvcilcblx0XHRcdFx0bG9nRXJyb3JUb1NlbnRyeSgnRXJyb3Igc2F2aW5nIG5ldyBtZXNzYWdlJywge1xuXHRcdFx0XHRcdGVycm9yLFxuXHRcdFx0XHRcdG1lc3NhZ2U6ICdGYWlsZWQgdG8gc2F2ZSB0aGUgTWFzdGVyYm90IG1lc3NhZ2UuJyxcblx0XHRcdFx0XHRsZXZlbDogJ2Vycm9yJyxcblx0XHRcdFx0XHRleHRyYToge1xuXHRcdFx0XHRcdFx0dGhyZWFkU2x1ZzogYWN0aXZlVGhyZWFkPy5zbHVnLFxuXHRcdFx0XHRcdFx0dXNlcklkOiBzZXNzaW9uPy51c2VyLmlkLFxuXHRcdFx0XHRcdFx0Y2hhdGJvdE5hbWU6IGFjdGl2ZUNoYXRib3Q/Lm5hbWUsXG5cdFx0XHRcdFx0XHRhdHRhY2htZW50czogbWVzc2FnZUF0dGFjaG1lbnRzLmN1cnJlbnQsXG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0fSlcblx0XHRcdFx0Y3VzdG9tU29ubmVyKHtcblx0XHRcdFx0XHR0eXBlOiAnZXJyb3InLFxuXHRcdFx0XHRcdHRleHQ6ICdGYWlsZWQgdG8gc2F2ZSB0aGUgTWFzdGVyYm90IG1lc3NhZ2UuIFBsZWFzZSB0cnkgYWdhaW4uJyxcblx0XHRcdFx0fSlcblxuXHRcdFx0XHRpZiAoaXNOZXdDaGF0KSB7XG5cdFx0XHRcdFx0YXdhaXQgZGVsZXRlVGhyZWFkKHtcblx0XHRcdFx0XHRcdHRocmVhZElkLFxuXHRcdFx0XHRcdFx0and0OiBzZXNzaW9uPy51c2VyPy5oYXN1cmFKd3QsXG5cdFx0XHRcdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0fVxuXHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0Ly8gPyByZXNldHRpbmcgcmVmc1xuXHRcdFx0XHRjbGlja2VkQ29udGVudFJlZi5jdXJyZW50ID0gJydcblx0XHRcdH1cblx0XHR9LFxuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRvblRvb2xDYWxsKHsgdG9vbENhbGwgfTogeyB0b29sQ2FsbDogQWlUb29sQ2FsbCB9KSB7XG5cdFx0XHRjb25zb2xlLmxvZygnVG9vbCBjYWxsOicsIHRvb2xDYWxsKVxuXG5cdFx0XHRpZiAoYXBwQ29uZmlnLmZlYXR1cmVzLmRldk1vZGUpIHtcblx0XHRcdFx0Y3VzdG9tU29ubmVyKHtcblx0XHRcdFx0XHR0eXBlOiAnaW5mbycsXG5cdFx0XHRcdFx0dGV4dDogYFRvb2wgY2FsbCBleGVjdXRlZDogJHt0b29sQ2FsbC50b29sTmFtZX1gLFxuXHRcdFx0XHR9KVxuXHRcdFx0fVxuXG5cdFx0XHRzZXRBY3RpdmVUb29sKHRvb2xDYWxsIGFzIEFpVG9vbENhbGwpXG5cdFx0fSxcblx0XHQvLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IDxleHBsYW5hdGlvbj5cblx0XHRhc3luYyBvbkVycm9yKGVycm9yOiBhbnkpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGNoYXQ6ICcsIGVycm9yKVxuXHRcdFx0bG9nRXJyb3JUb1NlbnRyeSgnRXJyb3IgaW4gdGhlIGNoYXQnLCB7XG5cdFx0XHRcdGVycm9yLFxuXHRcdFx0XHRtZXNzYWdlOiAnRmFpbGVkIHRvIGNvbXBsZXRlIGNoYXQuJyxcblx0XHRcdFx0bGV2ZWw6ICdlcnJvcicsXG5cdFx0XHRcdGV4dHJhOiB7XG5cdFx0XHRcdFx0dGhyZWFkU2x1ZzogYWN0aXZlVGhyZWFkPy5zbHVnLFxuXHRcdFx0XHRcdHVzZXJJZDogc2Vzc2lvbj8udXNlci5pZCxcblx0XHRcdFx0XHRjaGF0Ym90TmFtZTogYWN0aXZlQ2hhdGJvdD8ubmFtZSxcblx0XHRcdFx0XHRhdHRhY2htZW50czogbWVzc2FnZUF0dGFjaG1lbnRzLmN1cnJlbnQsXG5cdFx0XHRcdH0sXG5cdFx0XHR9KVxuXHRcdFx0Y3VzdG9tU29ubmVyKHtcblx0XHRcdFx0dHlwZTogJ2Vycm9yJyxcblx0XHRcdFx0dGV4dDogJ0ZhaWxlZCB0byBzZW5kIG1lc3NhZ2UuIFBsZWFzZSB0cnkgYWdhaW4uJyxcblx0XHRcdH0pXG5cblx0XHRcdGlmIChpc05ld0NoYXQpIHtcblx0XHRcdFx0YXdhaXQgZGVsZXRlVGhyZWFkKHtcblx0XHRcdFx0XHR0aHJlYWRJZCxcblx0XHRcdFx0XHRqd3Q6IHNlc3Npb24/LnVzZXI/Lmhhc3VyYUp3dCxcblx0XHRcdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0XHRcdH0pXG5cdFx0XHR9XG5cblx0XHRcdHNldExvYWRpbmdTdGF0ZSh1bmRlZmluZWQpXG5cdFx0XHRzZXRBY3RpdmVUb29sKHVuZGVmaW5lZClcblx0XHRcdHNldElzTmV3UmVzcG9uc2UoZmFsc2UpXG5cblx0XHRcdGNsaWNrZWRDb250ZW50UmVmLmN1cnJlbnQgPSAnJ1xuXHRcdH0sXG5cdH0pXG5cblx0LyoqXG5cdCAqIEBkZXNjcmlwdGlvblxuXHQgKiBBbGwgbWVzc2FnZXMgY29taW5nIGZyb20gREIgYW5kIGNvbnRpbnVpbmcgdGhlIGNoYXQsIG9taXR0aW5nIHRoZSBzeXN0ZW0gcHJvbXB0cyB0byBwcm92aWRlIHRvIHRoZSBMTE0gY29udGV4dC5cblx0ICovXG5cdGNvbnN0IGFsbE1lc3NhZ2VzID0gdW5pcUJ5KFxuXHRcdChpbml0aWFsTWVzc2FnZXMgYXMgQXJyYXk8TWVzc2FnZSAmIEFpTWVzc2FnZT4pXG5cdFx0XHQ/LmNvbmNhdChtZXNzYWdlcyBhcyBBcnJheTxNZXNzYWdlICYgQWlNZXNzYWdlPilcblx0XHRcdD8uY29uY2F0KFxuXHRcdFx0XHRhY3RpdmVUaHJlYWQ/Lm1lc3NhZ2VzPy5tYXAoKG1zZykgPT4gKHtcblx0XHRcdFx0XHQuLi5tc2csXG5cdFx0XHRcdFx0aWQ6IG1zZy5tZXNzYWdlSWQsXG5cdFx0XHRcdFx0cm9sZTogbXNnLnJvbGUgYXMgJ2RhdGEnIHwgJ3N5c3RlbScgfCAndXNlcicgfCAnYXNzaXN0YW50Jyxcblx0XHRcdFx0fSkpIHx8IFtdLFxuXHRcdFx0KSxcblx0XHR2ZXJpZnlEdXBsaWNhdGVNZXNzYWdlLFxuXHQpXG5cdFx0LmZpbHRlcihCb29sZWFuKVxuXHRcdC5maWx0ZXIoKG0pID0+IG0ucm9sZSAhPT0gJ3N5c3RlbScpXG5cdFx0LnNvcnQoKGEsIGIpID0+IHtcblx0XHRcdC8vIEV4dHJhY3QgdGltZXN0YW1wcywgZGVmYXVsdGluZyB0byAwIGlmIG1pc3Npbmdcblx0XHRcdGNvbnN0IHRpbWVBID0gYS5jcmVhdGVkQXQgPyBuZXcgRGF0ZShhLmNyZWF0ZWRBdCkuZ2V0VGltZSgpIDogMFxuXHRcdFx0Y29uc3QgdGltZUIgPSBiLmNyZWF0ZWRBdCA/IG5ldyBEYXRlKGIuY3JlYXRlZEF0KS5nZXRUaW1lKCkgOiAwXG5cblx0XHRcdC8vIElmIHRpbWVzdGFtcHMgYXJlIGRpZmZlcmVudCwgdXNlIHRoZW0gZm9yIHNvcnRpbmcgKGNocm9ub2xvZ2ljYWwgb3JkZXIpXG5cdFx0XHRpZiAodGltZUEgIT09IHRpbWVCKSB7XG5cdFx0XHRcdHJldHVybiB0aW1lQSAtIHRpbWVCXG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRpbWVzdGFtcHMgYXJlIHRoZSBzYW1lIG9yIGJvdGggbWlzc2luZzpcblx0XHRcdC8vIDEuIEZpbmQgcHJldmlvdXMgbWVzc2FnZShzKSB0byBkZXRlcm1pbmUgY29udmVyc2F0aW9uIGZsb3cgYW5kXG5cdFx0XHQvLyAyLiBFbnN1cmUgYXNzaXN0YW50IG1lc3NhZ2UgYXBwZWFycyBhZnRlciBpdHMgY29ycmVzcG9uZGluZyB1c2VyIG1lc3NhZ2Vcblx0XHRcdGlmIChhLnJvbGUgPT09ICdhc3Npc3RhbnQnICYmIGIucm9sZSA9PT0gJ2Fzc2lzdGFudCcpIHtcblx0XHRcdFx0Ly8gSWYgYm90aCBhcmUgYXNzaXN0YW50IG1lc3NhZ2VzLCBtYWludGFpbiBjaHJvbm9sb2dpY2FsIG9yZGVyIGFuZFxuXHRcdFx0XHQvLyBlbnN1cmVzIG11bHRpcGxlIGFzc2lzdGFudCBtZXNzYWdlcyBhcHBlYXIgaW4gdGhlIGNvcnJlY3Qgc2VxdWVuY2Vcblx0XHRcdFx0cmV0dXJuIHRpbWVBIC0gdGltZUIgfHwgMFxuXHRcdFx0fVxuXG5cdFx0XHQvLyBLZWVwIHVzZXIgbWVzc2FnZXMgYmVmb3JlIGFzc2lzdGFudCBtZXNzYWdlcyB3aGVuIHRpbWVzdGFtcHMgYXJlIGlkZW50aWNhbFxuXHRcdFx0aWYgKGEucm9sZSA9PT0gJ3VzZXInICYmIGIucm9sZSA9PT0gJ2Fzc2lzdGFudCcpIHJldHVybiAtMVxuXHRcdFx0aWYgKGEucm9sZSA9PT0gJ2Fzc2lzdGFudCcgJiYgYi5yb2xlID09PSAndXNlcicpIHJldHVybiAxXG5cblx0XHRcdC8vIElmIGJvdGggaGF2ZSB0aGUgc2FtZSByb2xlLCBtYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIDBcblx0XHR9KVxuXG5cdHVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Ly8gUmVzZXR0aW5nIHRoZSBjaGF0IHdoZW4gdGhlIHBvcHVwIGlzIGNsb3NlZFxuXHRcdGlmICghYWN0aXZlVGhyZWFkICYmICFpc09wZW5Qb3B1cCkge1xuXHRcdFx0cmVzZXRTdGF0ZSgpXG5cdFx0fVxuXHRcdGlmICghaXNPcGVuUG9wdXApIHtcblx0XHRcdHJhbmRvbVRocmVhZElkLmN1cnJlbnQgPSBjcnlwdG8ucmFuZG9tVVVJRCgpIC8vKiBHZW5lcmF0ZXMgYSBuZXcgdGhyZWFkIElEXG5cdFx0fVxuXHRcdGlmICghYWN0aXZlVGhyZWFkKSByZXR1cm5cblxuXHRcdHVwZGF0ZU5ld1RocmVhZCgpXG5cdH0sIFthY3RpdmVUaHJlYWQsIGlzT3BlblBvcHVwXSlcblxuXHRjb25zdCByZXNldFN0YXRlID0gKCkgPT4ge1xuXHRcdHNldFN0YXRlKHtcblx0XHRcdGlzSW5pdExvYWRlZDogZmFsc2UsXG5cdFx0XHRpc05ld0NoYXQ6IHRydWUsXG5cdFx0XHRtZXNzYWdlc0Zyb21EQjogW10sXG5cdFx0fSlcblx0XHRzZXRJbnB1dCgnJylcblx0XHRzZXRNZXNzYWdlcyhbXSlcblx0fVxuXG5cdC8vIGJpb21lLWlnbm9yZSBsaW50L2NvcnJlY3RuZXNzL3VzZUV4aGF1c3RpdmVEZXBlbmRlbmNpZXM6IG5vdCByZXF1aXJlZFxuXHR1c2VFZmZlY3QoKCkgPT4ge1xuXHRcdC8vIHJlc2V0IGFsbCBzdGF0ZXMgd2hlbiB1bm1vdW50aW5nIHRoZSBjb250ZXh0IGhvb2tcblx0XHRyZXR1cm4gcmVzZXRTdGF0ZVxuXHR9LCBbXSlcblxuXHRjb25zdCB1cGRhdGVOZXdUaHJlYWQgPSAoKSA9PiB7XG5cdFx0Ly8gY29uc29sZS5sb2coJ2FjdGl2ZVRocmVhZC5tZXNzYWdlcyBsZW5ndGggLS0+ICcsIGFjdGl2ZVRocmVhZD8ubWVzc2FnZXMpXG5cdFx0Y29uc3QgaXNOZXdDaGF0U3RhdGUgPSBCb29sZWFuKFxuXHRcdFx0IWFsbE1lc3NhZ2VzLmxlbmd0aCB8fCAhYWN0aXZlVGhyZWFkPy5tZXNzYWdlcy5sZW5ndGgsXG5cdFx0KVxuXG5cdFx0c2V0U3RhdGUoe1xuXHRcdFx0aXNOZXdDaGF0OiBpc05ld0NoYXRTdGF0ZSxcblx0XHR9KVxuXG5cdFx0cmV0dXJuIGlzTmV3Q2hhdFN0YXRlXG5cdH1cblxuXHRjb25zdCB1cGRhdGVBY3RpdmVUaHJlYWQgPSBhc3luYyAobmV3VGhyZWFkPzogVGhyZWFkIHwgbnVsbCkgPT4ge1xuXHRcdGxldCB0aHJlYWQgPSBuZXdUaHJlYWRcblxuXHRcdGlmICghdGhyZWFkIHx8ICF0aHJlYWQuc2x1Zykge1xuXHRcdFx0dGhyZWFkID0gYXdhaXQgZ2V0VGhyZWFkKHtcblx0XHRcdFx0dGhyZWFkSWQsXG5cdFx0XHRcdGlzUGVyc29uYWw6IHRydWUsXG5cdFx0XHRcdGp3dDogc2Vzc2lvbj8udXNlcj8uaGFzdXJhSnd0LFxuXHRcdFx0fSlcblx0XHR9XG5cdFx0aWYgKHRocmVhZCkge1xuXHRcdFx0c2V0QWN0aXZlVGhyZWFkKHRocmVhZClcblx0XHRcdHNldFN0YXRlKHtcblx0XHRcdFx0aXNOZXdDaGF0OiBCb29sZWFuKCFhbGxNZXNzYWdlcy5sZW5ndGggfHwgIXRocmVhZC5tZXNzYWdlcy5sZW5ndGgpLFxuXHRcdFx0XHRtZXNzYWdlc0Zyb21EQjogdGhyZWFkLm1lc3NhZ2VzLFxuXHRcdFx0fSlcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhyZWFkIGFzIFRocmVhZFxuXHR9XG5cblx0Y29uc3QgdHVubmluZ1VzZXJDb250ZW50ID0gYXN5bmMgKFxuXHRcdHVzZXJNZXNzYWdlOiBBaU1lc3NhZ2UgfCBDcmVhdGVNZXNzYWdlLFxuXHRcdHRocmVhZDogVGhyZWFkLFxuXHQpID0+IHtcblx0XHRzZXRMb2FkaW5nU3RhdGUoJ2RpZ2VzdGluZycpXG5cblx0XHRsZXQgcHJldmlvdXNBaVVzZXJNZXNzYWdlczogQWlNZXNzYWdlW10gPSBbXVxuXG5cdFx0aWYgKGFjdGl2ZVRocmVhZD8udGhyZWFkPy5tZXNzYWdlcykge1xuXHRcdFx0cHJldmlvdXNBaVVzZXJNZXNzYWdlcyA9IGFjdGl2ZVRocmVhZC50aHJlYWQubWVzc2FnZXNcblx0XHRcdFx0Lm1hcCgobXNnKSA9PiAoe1xuXHRcdFx0XHRcdGlkOiBtc2cubWVzc2FnZUlkLFxuXHRcdFx0XHRcdHJvbGU6IG1zZy5yb2xlIGFzIEFpTWVzc2FnZVsncm9sZSddLFxuXHRcdFx0XHRcdGNvbnRlbnQ6IG1zZy5jb250ZW50LFxuXHRcdFx0XHRcdGNyZWF0ZWRBdDogbXNnLmNyZWF0ZWRBdCxcblx0XHRcdFx0fSkpXG5cdFx0XHRcdC5maWx0ZXIoKG1zZykgPT4gbXNnLnJvbGUgPT09ICd1c2VyJylcblx0XHR9XG5cdFx0Y29uc3QgdXNlclByb21wdCA9IHtcblx0XHRcdGNvbnRlbnQ6IHVzZXJNZXNzYWdlLmNvbnRlbnQsXG5cdFx0XHRhbGxVc2VyTWVzc2FnZXM6IHByZXZpb3VzQWlVc2VyTWVzc2FnZXMuY29uY2F0KGFsbE1lc3NhZ2VzKSxcblx0XHR9XG5cdFx0Y29uc3QgeyBjb250ZW50LCBlcnJvciB9ID0gYXdhaXQgcHJvY2Vzc1VzZXJNZXNzYWdlKFxuXHRcdFx0dXNlclByb21wdCxcblx0XHRcdGNsaWVudFR5cGUgYXMgQWlDbGllbnRUeXBlLFxuXHRcdFx0c2VsZWN0ZWRNb2RlbCxcblx0XHQpXG5cblx0XHQvLyBjb25zb2xlLmxvZygndGhyZWFkOjp0dW5uaW5Vc2VyQ29udGVudCAgLS0+ICcsIHRocmVhZClcblx0XHRpZiAodGhyZWFkKSB7XG5cdFx0XHR1cGRhdGVBY3RpdmVUaHJlYWQoe1xuXHRcdFx0XHQuLi50aHJlYWQsXG5cdFx0XHRcdG1lc3NhZ2VzOiB0aHJlYWQubWVzc2FnZXMuZmlsdGVyKFxuXHRcdFx0XHRcdChtKSA9PiBtLmNvbnRlbnQgIT09IHVzZXJQcm9tcHQuY29udGVudCxcblx0XHRcdFx0KSxcblx0XHRcdH0pXG5cdFx0fVxuXG5cdFx0dXNlckNvbnRlbnRSZWYuY3VycmVudCA9IGNvbnRlbnRcblx0fVxuXG5cdGNvbnN0IGlzUHJlUHJvY2Vzc2luZyA9IEJvb2xlYW4oXG5cdFx0bG9hZGluZ1N0YXRlPy5tYXRjaCgvcHJvY2Vzc2luZ3xkaWdlc3Rpbmd8cG9saXNoaW5nLyksXG5cdClcblx0Y29uc3QgZm9ybURpc2FibGVkID0gIWNoYXRib3QgfHwgaXNQcmVQcm9jZXNzaW5nXG5cblx0Ly8gd2UgZXh0ZW5kIGFwcGVuZCBmdW5jdGlvbiB0byBhZGQgb3VyIHN5c3RlbSBwcm9tcHRzXG5cdGNvbnN0IGFwcGVuZFdpdGhNYkNvbnRleHRQcm9tcHRzID0gYXN5bmMgKFxuXHRcdHVzZXJNZXNzYWdlOiBBaU1lc3NhZ2UgfCBDcmVhdGVNZXNzYWdlLFxuXHRcdGNoYXRSZXF1ZXN0T3B0aW9ucz86IENoYXRSZXF1ZXN0T3B0aW9ucyxcblx0KTogUHJvbWlzZTxzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkPiA9PiB7XG5cdFx0aWYgKGZvcm1EaXNhYmxlZCkge1xuXHRcdFx0Y29uc29sZS5pbmZvKFxuXHRcdFx0XHQnRm9ybSBpcyBkaXNhYmxlZCB3aGlsZSBwcm9jZXNzaW5nLCBza2lwcGluZyBzdWJtaXQgb2YgbmV3IG1lc3NhZ2UuJyxcblx0XHRcdClcblx0XHRcdHJldHVyblxuXHRcdH1cblx0XHRpZiAoIXNlc3Npb24/LnVzZXIgfHwgIWNoYXRib3QpIHtcblx0XHRcdGNvbnNvbGUuZXJyb3IoJ1VzZXIgaXMgbm90IGxvZ2dlZCBpbiBvciBzZXNzaW9uIGV4cGlyZWQuJylcblx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdHR5cGU6ICdlcnJvcicsXG5cdFx0XHRcdHRleHQ6ICdGYWlsZWQgdG8gc3RhcnQgY29udmVyc2F0aW9uLiBQbGVhc2UgcmVsb2FkIGFuZCB0cnkgYWdhaW4uJyxcblx0XHRcdH0pXG5cdFx0XHRyZXR1cm5cblx0XHR9XG5cblx0XHQvLyAqIExvYWRpbmc6IHByb2Nlc3NpbmcgeW91ciByZXF1ZXN0ICsgb3BlbmluZyBwb3AtdXAuLi5cblx0XHRtZXNzYWdlQXR0YWNobWVudHMuY3VycmVudCA9XG5cdFx0XHQoY2hhdFJlcXVlc3RPcHRpb25zPy5leHBlcmltZW50YWxfYXR0YWNobWVudHMgfHwgW10pIGFzIEZpbGVBdHRhY2htZW50W11cblx0XHRzZXRMb2FkaW5nU3RhdGUoJ3Byb2Nlc3NpbmcnKVxuXHRcdHNldElzTmV3UmVzcG9uc2UodHJ1ZSlcblx0XHR1cGRhdGVOZXdUaHJlYWQoKVxuXG5cdFx0Y29uc3QgZGVmYXVsdFVzZXJNZXNzYWdlOiBQYXJ0aWFsPE1lc3NhZ2U+ID0ge1xuXHRcdFx0Li4udXNlck1lc3NhZ2UsXG5cdFx0XHRjb250ZW50OiBjbGVhblByb21wdCh1c2VyTWVzc2FnZS5jb250ZW50KSxcblx0XHRcdHNsdWc6IHRvU2x1Zyh1c2VyTWVzc2FnZS5jb250ZW50KSxcblx0XHRcdHJvbGU6ICd1c2VyJyxcblx0XHRcdG1lc3NhZ2VJZDogcmFuZG9tVGhyZWFkSWQuY3VycmVudCxcblx0XHRcdGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuXHRcdFx0YXVnbWVudGVkRnJvbTogbnVsbCxcblx0XHRcdGV4YW1wbGVzOiBbXSxcblx0XHRcdHRocmVhZElkLFxuXHRcdH1cblx0XHQvLyAhIE9wdGltaXN0aWMgd29uJ3QgdXBkYXRlIG9uIHRpbWUgZHVlIHRoZSBJRCdzIGFyZSBub3QgdG90YWxseSBmb3JtZWQgaGVuY2UsXG5cdFx0Ly8gISB3aGVuIGl0IHdhbnRzIHRvIGF0dGFjaCByZWxhdGVkIGNvbnRlbnQgaXQgY2FuJ3QgYmVjYXVzZSB0aGUgcmVmZXJlbmNlcyBkb2Vzbid0IGV4aXN0XG5cdFx0Ly8gISBhdCB0aGUgdGltZSB3ZSBwcmUtcG9wdWxhdGUgaW5mb3JtYXRpb24uXG5cdFx0Ly8gISBTbywgd2UgbmVlZCB0byB3YWl0IGZvciB0aGUgcmVzcG9uc2UgdG8gYmUgcHJvY2Vzc2VkIGFuZCB0aGVuIHVwZGF0ZSB0aGUgdGhyZWFkIHdpdGggdGhlIG5ldyBtZXNzYWdlLiAoY3VycmVudGx5IHdvcmtpbmcpXG5cdFx0Ly8gV2UgbmVlZCBhIHRlbXBvcmFsIHN0YXRlIG9iamVjdCB0aGF0IGNhbiBiZSByZXBsYWNlZCB3aXRoIHRoZSByZWFsIHN0YXRlIG9iamVjdCAobGlrZSBhIHJlZikgZm9yIHRoZSB0aHJlYWQgdG8gYmUgYWJsZSB0byB1cGRhdGUgaXQgb3B0aW1pc3RpY2FsbHlcblx0XHRjb25zdCBvcHRpbWlzdGljVGhyZWFkOiBUaHJlYWQgPSB7XG5cdFx0XHQuLi5hY3RpdmVUaHJlYWQsXG5cdFx0XHR0aHJlYWRJZCxcblx0XHRcdGNoYXRib3RJZDogY2hhdGJvdD8uY2hhdGJvdElkLFxuXHRcdFx0Y2hhdGJvdCxcblx0XHRcdGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuXHRcdFx0aXNBcHByb3ZlZDogZmFsc2UsXG5cdFx0XHRpc0Jsb2NrZWQ6IGZhbHNlLFxuXHRcdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdFx0bWVzc2FnZXM6IHVuaXFCeShcblx0XHRcdFx0Wy4uLmFsbE1lc3NhZ2VzLCBkZWZhdWx0VXNlck1lc3NhZ2VdLFxuXHRcdFx0XHR2ZXJpZnlEdXBsaWNhdGVNZXNzYWdlLFxuXHRcdFx0KSxcblx0XHRcdG1ldGFkYXRhOiB7XG5cdFx0XHRcdGF0dGFjaG1lbnRzOiB1bmlxQnkoXG5cdFx0XHRcdFx0W1xuXHRcdFx0XHRcdFx0Li4uKG1lc3NhZ2VBdHRhY2htZW50cy5jdXJyZW50IHx8IFtdKSxcblx0XHRcdFx0XHRcdC4uLihhY3RpdmVUaHJlYWQ/Lm1ldGFkYXRhPy5hdHRhY2htZW50cyB8fCBbXSksXG5cdFx0XHRcdFx0XSxcblx0XHRcdFx0XHQnaWQnLFxuXHRcdFx0XHQpLFxuXHRcdFx0fSxcblx0XHRcdHRocmVhZDogaXNDb250aW51b3VzVGhyZWFkID8gYWN0aXZlVGhyZWFkPy50aHJlYWQgfHwgbnVsbCA6IG51bGwsXG5cdFx0XHR1c2VySWQ6IHNlc3Npb24/LnVzZXIuaWQsXG5cdFx0fVxuXHRcdGNvbnN0IHRocmVhZCA9IGF3YWl0IHVwZGF0ZUFjdGl2ZVRocmVhZChvcHRpbWlzdGljVGhyZWFkKVxuXG5cdFx0dHJ5IHtcblx0XHRcdGF3YWl0IHR1bm5pbmdVc2VyQ29udGVudCh1c2VyTWVzc2FnZSwgdGhyZWFkKVxuXHRcdFx0Ly8gISBBdCB0aGlzIHBvaW50LCB0aGUgVUkgcmVzcG9uZCBhbmQgcHJvdmlkZXMgYSBmZWVkYmFjayB0byB0aGUgdXNlci4uLiBiZWZvcmUgaXQgaXMgbm93IGV2ZW4gc2hvd2luZyB0aGUgdXBkYXRlZCBhY3RpdmUgdGhyZWFkLCBldmVudCB0aG91Z2ggdGhhdCBpdCBkb2VzIHVwZGF0ZSB0aGUgYWN0aXZlIHRocmVhZC4uLlxuXHRcdFx0Ly8gVE9ETzogaW1wcm92ZSByZXNwb25zZSB2ZWxvY2l0eSBoZXJlIChzcGxpdCB0aGlzIGZuIHRvIHlldCBhbm90aGVyIGNiIGZuPyDwn6SUKVxuXHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKFxuXHRcdFx0XHQnRXJyb3IgcHJvY2Vzc2luZyB1c2VyIG1lc3NhZ2UuIFVzaW5nIG9nIG1lc3NhZ2UuIEVycm9yOiAnLFxuXHRcdFx0XHRlcnJvcixcblx0XHRcdClcblx0XHR9XG5cblx0XHRpZiAoIWlzT3BlblBvcHVwKSB7XG5cdFx0XHRzZXRJc09wZW5Qb3B1cCh0cnVlKVxuXHRcdH1cblx0XHRyZXR1cm4gYXdhaXQgYXBwZW5kTmV3TWVzc2FnZSh1c2VyTWVzc2FnZSwgY2hhdFJlcXVlc3RPcHRpb25zKVxuXHR9XG5cblx0Y29uc3QgZ2V0TWV0YWRhdGFMYWJlbHMgPVxuXHRcdC8vIGJpb21lLWlnbm9yZSBsaW50L2NvcnJlY3RuZXNzL3VzZUV4aGF1c3RpdmVEZXBlbmRlbmNpZXM6IEkgbmVlZCB0byBoZWFyIHRoZSBjaGF0Ym90IGFuZCBpc1Bvd2VyVXAgY2hhbmdlcyBvbmx5XG5cdFx0dXNlQ2FsbGJhY2soYXN5bmMgKCk6IFByb21pc2U8Q2hhdGJvdE1ldGFkYXRhRXhhbXBsZXM+ID0+IHtcblx0XHRcdGxldCBjaGF0TWV0YWRhdGE6IENoYXRib3RNZXRhZGF0YUNsYXNzaWZpY2F0aW9uIHwgdW5kZWZpbmVkXG5cdFx0XHR0cnkge1xuXHRcdFx0XHRzZXRMb2FkaW5nU3RhdGUoJ3BvbGlzaGluZycpXG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKCdpc1Bvd2VyVXAnLCBpc1Bvd2VyVXApXG5cdFx0XHRcdGNoYXRNZXRhZGF0YSA9IGF3YWl0IGdldENoYXRib3RNZXRhZGF0YShcblx0XHRcdFx0XHR7XG5cdFx0XHRcdFx0XHRjaGF0Ym90OiBjaGF0Ym90Py5jaGF0Ym90SWQgYXMgbnVtYmVyLFxuXHRcdFx0XHRcdFx0aXNQb3dlclVwLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0dXNlckNvbnRlbnRSZWYuY3VycmVudCxcblx0XHRcdFx0XHRjbGllbnRUeXBlIGFzIEFpQ2xpZW50VHlwZSxcblx0XHRcdFx0KVxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZygnRnVsbCByZXNwb25zZXMgZnJvbSBDaGF0Ym90TWV0YWRhdGE6JywgY2hhdE1ldGFkYXRhKVxuXG5cdFx0XHRcdC8vICogTG9hZGluZzogUG9saXNoaW5nIEFpIHJlcXVlc3QuLi4gJ3BvbGlzaGluZydcblx0XHRcdH0gY2F0Y2ggKGVycm9yKSB7XG5cdFx0XHRcdGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdldHRpbmcgY2hhdGJvdCBtZXRhZGF0YTonLCBlcnJvcilcblx0XHRcdFx0aWYgKGFwcENvbmZpZy5mZWF0dXJlcy5kZXZNb2RlKSB7XG5cdFx0XHRcdFx0Y3VzdG9tU29ubmVyKHsgdHlwZTogJ2Vycm9yJywgdGV4dDogKGVycm9yIGFzIEVycm9yKT8ubWVzc2FnZSB9KVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmIChjaGF0TWV0YWRhdGE/LmVycm9ycz8ubGVuZ3RoICYmIGFwcENvbmZpZy5mZWF0dXJlcy5kZXZNb2RlKSB7XG5cdFx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdFx0dHlwZTogJ2Vycm9yJyxcblx0XHRcdFx0XHR0ZXh0OiBgJHtjaGF0TWV0YWRhdGEuZG9tYWluTmFtZX06XFxuJHtjaGF0TWV0YWRhdGEuZXJyb3JzLmpvaW4oJy5cXG4nKX1gLFxuXHRcdFx0XHR9KVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gYXdhaXQgYWlFeGFtcGxlQ2xhc3NpZmljYXRpb24oe1xuXHRcdFx0XHRjaGF0TWV0YWRhdGEsXG5cdFx0XHRcdGN1c3RvbVNvbm5lcixcblx0XHRcdH0pXG5cdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvZXhoYXVzdGl2ZS1kZXBzXG5cdFx0fSwgW2NoYXRib3QsIGlzUG93ZXJVcF0pXG5cblx0Y29uc3QgYXBwZW5kQXNDb250aW51b3VzVGhyZWFkID0gYXN5bmMgKFxuXHRcdHVzZXJNZXNzYWdlOiBBaU1lc3NhZ2UgfCBDcmVhdGVNZXNzYWdlLFxuXHQpID0+IHtcblx0XHRjb25zdCBvcHRpbWlzdGljVXNlck1lc3NhZ2UgPSB7XG5cdFx0XHQuLi51c2VyTWVzc2FnZSxcblx0XHRcdGlkOiByYW5kb21UaHJlYWRJZC5jdXJyZW50LFxuXHRcdH1cblxuXHRcdGF3YWl0IGFwcGVuZFdpdGhNYkNvbnRleHRQcm9tcHRzKG9wdGltaXN0aWNVc2VyTWVzc2FnZSlcblxuXHRcdHJldHVybiBudWxsXG5cdH1cblxuXHRjb25zdCBzZW5kTWVzc2FnZUZyb21SZXNwb25zZSA9IGFzeW5jIChcblx0XHR7IGJ1bGxldENvbnRlbnQsIG1lc3NhZ2VJZCB9OiBTZW5kTWVzc2FnZUZyb21SZXNwb25zZU1lc3NhZ2VEYXRhLFxuXHRcdGNhbGxiYWNrPzogKCkgPT4gdm9pZCxcblx0KSA9PiB7XG5cdFx0Y29uc3QgZnVsbE1lc3NhZ2UgPSBidWxsZXRDb250ZW50XG5cdFx0Y2xpY2tlZENvbnRlbnRSZWYuY3VycmVudCA9IG1lc3NhZ2VJZFxuXG5cdFx0YXdhaXQgYXBwZW5kV2l0aE1iQ29udGV4dFByb21wdHMoe1xuXHRcdFx0aWQ6IHRocmVhZElkLFxuXHRcdFx0Y29udGVudDogZnVsbE1lc3NhZ2UsXG5cdFx0XHRyb2xlOiAndXNlcicsXG5cdFx0fSkuZmluYWxseShjYWxsYmFjaylcblx0fVxuXG5cdGNvbnN0IHRvZ2dsZVdlYlNlYXJjaCA9ICgpID0+IHtcblx0XHRzZXRXZWJTZWFyY2goIXdlYlNlYXJjaClcblx0fVxuXG5cdGNvbnN0IGFwcGVuZE5ld01lc3NhZ2UgPSBhc3luYyAoXG5cdFx0dXNlck1lc3NhZ2U6IEFpTWVzc2FnZSB8IENyZWF0ZU1lc3NhZ2UsXG5cdFx0Y2hhdE1lc3NhZ2VzT3B0aW9ucz86IENoYXRSZXF1ZXN0T3B0aW9ucyxcblx0KSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IGNoYXRib3RNZXRhZGF0YSA9IGF3YWl0IGdldE1ldGFkYXRhTGFiZWxzKClcblx0XHRcdGNvbnN0IHtcblx0XHRcdFx0Y2hlY2tzOiB7IGlzQ29udGludWluZ1RocmVhZCB9LFxuXHRcdFx0XHRwYXJhbXM6IHsgY29udGludW91c1RocmVhZElkIH0sXG5cdFx0XHR9ID0gZ2V0Q3VycmVudFNlYXJjaFBhcmFtcygpXG5cdFx0XHRjb25zdCBpc05ld1RocmVhZCA9XG5cdFx0XHRcdCgoIWFsbE1lc3NhZ2VzLmxlbmd0aCAmJiBpc05ld0NoYXQpIHx8IGlzQ29udGludWluZ1RocmVhZCkgJiYgY2hhdGJvdFxuXG5cdFx0XHRpZiAoYXBwQ29uZmlnLmZlYXR1cmVzLmRldk1vZGUpIHtcblx0XHRcdFx0Y29uc29sZS5pbmZvKFxuXHRcdFx0XHRcdCdCZWZvcmUgYXBwZW5kaW5nIGEgbmV3IG1lc3NhZ2UsIHdlIGNoZWNrIHRoZSBmb2xsb3dpbmcgdG8ga25vdyBpZiBpcyBuZXcgY2hhdCBvciBub3Q6ICcsXG5cdFx0XHRcdClcblx0XHRcdFx0Y29uc29sZS5sb2coJ2lzTmV3Q2hhdCBndWFyZCAtLT4gJywgaXNOZXdDaGF0KVxuXHRcdFx0XHRjb25zb2xlLmxvZygnYWxsTWVzc2FnZXMgLS0+ICcsIGFsbE1lc3NhZ2VzKVxuXHRcdFx0XHRjb25zb2xlLmxvZygnYWN0aXZlVGhyZWFkIC0tPiAnLCBhY3RpdmVUaHJlYWQpXG5cdFx0XHRcdGNvbnNvbGUubG9nKCdpc0NvbnRpbnVvdXNUaHJlYWQgLS0+ICcsIGlzQ29udGludWluZ1RocmVhZClcblx0XHRcdFx0Y29uc29sZS5sb2coXG5cdFx0XHRcdFx0J2lzTmV3VGhyZWFkIChjb21iaW5pbmcgc2V0IG9mIGNvbmRpdGlvbnMgd2hlbiB0aHJlYWRzIGFyZSBjcmVhdGVkIGFuZCBjb250aW51aW5nIGNvbnZlcnNhdGlvbiBpbiB0aGUgc2FtZSB1c2VyIHNlc3Npb24pIC0tPiAnLFxuXHRcdFx0XHRcdGlzTmV3VGhyZWFkLFxuXHRcdFx0XHQpXG5cdFx0XHR9XG5cblx0XHRcdGlmIChpc05ld1RocmVhZCkge1xuXHRcdFx0XHRjb25zdCB0aHJlYWRTbHVnID0gYXdhaXQgZ2VuZXJhdGVVbmlxdWVTbHVnKHVzZXJDb250ZW50UmVmLmN1cnJlbnQpXG5cblx0XHRcdFx0YXdhaXQgY3JlYXRlVGhyZWFkKHtcblx0XHRcdFx0XHR0aHJlYWRJZCxcblx0XHRcdFx0XHRzbHVnOiB0aHJlYWRTbHVnLFxuXHRcdFx0XHRcdGNoYXRib3RJZDogY2hhdGJvdC5jaGF0Ym90SWQsXG5cdFx0XHRcdFx0Ly8gbW9kZWw6IHNlbGVjdGVkTW9kZWwgYXMgTW9kZWxzRW51bUVudW0sXG5cdFx0XHRcdFx0cGFyZW50VGhyZWFkSWQ6IGlzQ29udGludWluZ1RocmVhZFxuXHRcdFx0XHRcdFx0PyAoY29udGludW91c1RocmVhZElkIGFzIHN0cmluZylcblx0XHRcdFx0XHRcdDogdW5kZWZpbmVkLFxuXHRcdFx0XHRcdGp3dDogc2Vzc2lvbj8udXNlcj8uaGFzdXJhSnd0LFxuXHRcdFx0XHR9KVxuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBjaGF0TWVzc2FnZXNUb0FwcGVuZCA9IHVuaXFCeShcblx0XHRcdFx0W1xuXHRcdFx0XHRcdC4uLnN5c3RlbVByb21wdHMsXG5cdFx0XHRcdFx0c2V0T3V0cHV0SW5zdHJ1Y3Rpb25Qcm9tcHQodXNlckNvbnRlbnRSZWYuY3VycmVudCksXG5cdFx0XHRcdFx0e1xuXHRcdFx0XHRcdFx0aWQ6IGBleGFtcGxlcy0ke25hbm9pZCgxMCl9YCxcblx0XHRcdFx0XHRcdHJvbGU6ICdzeXN0ZW0nIGFzICdkYXRhJyB8ICdzeXN0ZW0nIHwgJ3VzZXInIHwgJ2Fzc2lzdGFudCcsXG5cdFx0XHRcdFx0XHRjb250ZW50OiBleGFtcGxlc1Byb21wdChjaGF0Ym90TWV0YWRhdGEpLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdF0sXG5cdFx0XHRcdHZlcmlmeUR1cGxpY2F0ZU1lc3NhZ2UsXG5cdFx0XHQpXG5cdFx0XHRzZXRNZXNzYWdlcyhjaGF0TWVzc2FnZXNUb0FwcGVuZClcblxuXHRcdFx0Ly8gV2hhdCByZW1lZGllcyBhcmUgZ29vZCBmb3Igc3RyZXNzIHJlbGlldmU/XG5cdFx0XHRpZiAoYXBwQ29uZmlnLmZlYXR1cmVzLmRldk1vZGUpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coJ2NoYXRNZXNzYWdlc1RvQXBwZW5kIC0tPiAnLCBjaGF0TWVzc2FnZXNUb0FwcGVuZClcblx0XHRcdFx0Y29uc29sZS5sb2coJ0NoYXRib3QgbWV0YWRhdGEgLS0+ICcsIGNoYXRib3RNZXRhZGF0YSlcblx0XHRcdH1cblxuXHRcdFx0bGV0IHByZXZpb3VzQWlVc2VyTWVzc2FnZXM6IEFpTWVzc2FnZVtdID0gW11cblxuXHRcdFx0aWYgKGFjdGl2ZVRocmVhZD8udGhyZWFkPy5tZXNzYWdlcykge1xuXHRcdFx0XHRwcmV2aW91c0FpVXNlck1lc3NhZ2VzID0gYWN0aXZlVGhyZWFkLnRocmVhZC5tZXNzYWdlc1xuXHRcdFx0XHRcdC5tYXAoKG1zZykgPT4gKHtcblx0XHRcdFx0XHRcdGlkOiBtc2cubWVzc2FnZUlkLFxuXHRcdFx0XHRcdFx0cm9sZTogbXNnLnJvbGUgYXMgQWlNZXNzYWdlWydyb2xlJ10sXG5cdFx0XHRcdFx0XHRjb250ZW50OiBtc2cuY29udGVudCxcblx0XHRcdFx0XHRcdGNyZWF0ZWRBdDogbXNnLmNyZWF0ZWRBdCxcblx0XHRcdFx0XHR9KSlcblx0XHRcdFx0XHQuZmlsdGVyKChtc2cpID0+IG1zZy5yb2xlID09PSAndXNlcicpXG5cdFx0XHR9XG5cblx0XHRcdHNldExvYWRpbmdTdGF0ZSgnZ2VuZXJhdGluZycpXG5cdFx0XHRjb25zdCBhcHBlbmRSZXNwb25zZSA9IGF3YWl0IGFwcGVuZChcblx0XHRcdFx0e1xuXHRcdFx0XHRcdC4uLnVzZXJNZXNzYWdlLFxuXHRcdFx0XHRcdGNvbnRlbnQ6XG5cdFx0XHRcdFx0XHQhYWxsTWVzc2FnZXMubGVuZ3RoICYmIGlzTmV3Q2hhdCAmJiBjaGF0Ym90XG5cdFx0XHRcdFx0XHRcdD8gdXNlckNvbnRlbnRSZWYuY3VycmVudCAvLyBpbXByb3ZlZCB1c2VyIG1lc3NhZ2Vcblx0XHRcdFx0XHRcdFx0OiBmb2xsb3dpbmdRdWVzdGlvbnNQcm9tcHQoXG5cdFx0XHRcdFx0XHRcdFx0XHR1c2VyQ29udGVudFJlZi5jdXJyZW50LFxuXHRcdFx0XHRcdFx0XHRcdFx0cHJldmlvdXNBaVVzZXJNZXNzYWdlcy5jb25jYXQoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGFsbE1lc3NhZ2VzLFxuXHRcdFx0XHRcdFx0XHRcdFx0KSBhcyB1bmtub3duIGFzIE1lc3NhZ2VbXSxcblx0XHRcdFx0XHRcdFx0XHRcdGNsaWNrZWRDb250ZW50UmVmLmN1cnJlbnQsXG5cdFx0XHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Y2hhdE1lc3NhZ2VzT3B0aW9ucyxcblx0XHRcdClcblxuXHRcdFx0cmV0dXJuIGFwcGVuZFJlc3BvbnNlXG5cdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdHNldExvYWRpbmdTdGF0ZSh1bmRlZmluZWQpXG5cdFx0XHRzdG9wKClcblxuXHRcdFx0Y29uc29sZS5lcnJvcignRXJyb3IgYXBwZW5kaW5nIG5ldyBtZXNzYWdlOiAnLCBlcnJvcilcblx0XHRcdGN1c3RvbVNvbm5lcih7XG5cdFx0XHRcdHR5cGU6ICdlcnJvcicsXG5cdFx0XHRcdHRleHQ6ICdGYWlsZWQgdG8gc2VuZCB0aGUgbWVzc2FnZSB0byB0aGUgTWFzdGVyYm90LiBQbGVhc2UgdHJ5IGFnYWluLicsXG5cdFx0XHR9KVxuXG5cdFx0XHRyZXR1cm4gbnVsbFxuXHRcdH1cblx0fVxuXG5cdC8vIGNvbnNvbGUubG9nKCdsb2FkaW5nU3RhdGUgLS0+ICcsIGxvYWRpbmdTdGF0ZSlcblxuXHQvLyA/IHJldHVybiBbc3RhdGUsIGFjdGlvbnNdXG5cdHJldHVybiAoXG5cdFx0PE1CQ2hhdENvbnRleHQuUHJvdmlkZXJcblx0XHRcdHZhbHVlPXtbXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRpbnB1dCxcblx0XHRcdFx0XHRpc05ld0NoYXQsXG5cdFx0XHRcdFx0d2ViU2VhcmNoLFxuXHRcdFx0XHRcdGlzTG9hZGluZyxcblx0XHRcdFx0XHRhbGxNZXNzYWdlczogYWxsTWVzc2FnZXMgYXMgT3BlbkFpLlVJTWVzc2FnZVtdLFxuXHRcdFx0XHRcdGluaXRpYWxNZXNzYWdlczogaW5pdGlhbE1lc3NhZ2VzIGFzIE9wZW5BaS5VSU1lc3NhZ2VbXSxcblx0XHRcdFx0XHRuZXdDaGF0VGhyZWFkSWQ6IHRocmVhZElkLFxuXHRcdFx0XHR9LFxuXHRcdFx0XHR7XG5cdFx0XHRcdFx0YXBwZW5kV2l0aE1iQ29udGV4dFByb21wdHMsXG5cdFx0XHRcdFx0YXBwZW5kQXNDb250aW51b3VzVGhyZWFkLFxuXHRcdFx0XHRcdHNlbmRNZXNzYWdlRnJvbVJlc3BvbnNlLFxuXHRcdFx0XHRcdHRvZ2dsZVdlYlNlYXJjaCxcblx0XHRcdFx0XHRzZXRNZXNzYWdlcyxcblx0XHRcdFx0XHRzZXRJbnB1dCxcblx0XHRcdFx0XHRhcHBlbmQsXG5cdFx0XHRcdFx0cmVsb2FkLFxuXHRcdFx0XHRcdHN0b3AsXG5cdFx0XHRcdH0sXG5cdFx0XHRdfVxuXHRcdD5cblx0XHRcdHtjaGlsZHJlbn1cblx0XHQ8L01CQ2hhdENvbnRleHQuUHJvdmlkZXI+XG5cdClcbn1cblxuY29uc3QgTUJDaGF0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8TUJDaGF0SG9va0NhbGxiYWNrIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpXG5cbmV4cG9ydCB0eXBlIE1CQ2hhdEhvb2tDb25maWcgPSB7XG5cdHRocmVhZElkPzogc3RyaW5nXG5cdGNoYXRib3Q/OiBDaGF0Ym90XG59XG5cbmV4cG9ydCB0eXBlIE1CQ2hhdEhvb2tDYWxsYmFjayA9IFtNQkNoYXRIb29rU3RhdGUsIE1CQ2hhdEhvb2tBY3Rpb25zXVxuXG5leHBvcnQgdHlwZSBNQkNoYXRIb29rU3RhdGUgPSB7XG5cdGlucHV0OiBzdHJpbmdcblx0aXNOZXdDaGF0OiBib29sZWFuXG5cdHdlYlNlYXJjaDogYm9vbGVhblxuXHRpc0xvYWRpbmc6IGJvb2xlYW5cblx0YWxsTWVzc2FnZXM6IE9wZW5BaS5VSU1lc3NhZ2VbXVxuXHRpbml0aWFsTWVzc2FnZXM6IE9wZW5BaS5VSU1lc3NhZ2VbXVxuXHRuZXdDaGF0VGhyZWFkSWQ6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBNQkNoYXRIb29rQWN0aW9ucyA9IHtcblx0YXBwZW5kV2l0aE1iQ29udGV4dFByb21wdHM6IChcblx0XHR1c2VyTWVzc2FnZTogT3BlbkFpLlVJTWVzc2FnZSB8IENyZWF0ZU1lc3NhZ2UsXG5cdFx0Y2hhdFJlcXVlc3RPcHRpb25zPzogQ2hhdFJlcXVlc3RPcHRpb25zLFxuXHQpID0+IFByb21pc2U8c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZD5cblx0YXBwZW5kQXNDb250aW51b3VzVGhyZWFkOiAoXG5cdFx0dXNlck1lc3NhZ2U6IE9wZW5BaS5VSU1lc3NhZ2UgfCBDcmVhdGVNZXNzYWdlLFxuXHQpID0+IFByb21pc2U8c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZD5cblx0c2VuZE1lc3NhZ2VGcm9tUmVzcG9uc2U6IChcblx0XHRtZXNzYWdlRGF0YTogU2VuZE1lc3NhZ2VGcm9tUmVzcG9uc2VNZXNzYWdlRGF0YSxcblx0XHRjYWxsYmFjaz86ICgpID0+IHZvaWQsXG5cdCkgPT4gdm9pZFxuXHRhcHBlbmQ6IChcblx0XHRtZXNzYWdlOiBPcGVuQWkuVUlNZXNzYWdlIHwgQ3JlYXRlTWVzc2FnZSxcblx0XHRjaGF0UmVxdWVzdE9wdGlvbnM/OiBDaGF0UmVxdWVzdE9wdGlvbnMsXG5cdCkgPT4gUHJvbWlzZTxzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkPlxuXHRyZWxvYWQ6IChcblx0XHRjaGF0UmVxdWVzdE9wdGlvbnM/OiBDaGF0UmVxdWVzdE9wdGlvbnMsXG5cdCkgPT4gUHJvbWlzZTxzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkPlxuXHRzdG9wOiAoKSA9PiB2b2lkXG5cdHRvZ2dsZVdlYlNlYXJjaDogKCkgPT4gdm9pZFxuXHRzZXRJbnB1dDogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj5cblx0c2V0TWVzc2FnZXM6IChtZXNzYWdlczogT3BlbkFpLlVJTWVzc2FnZVtdKSA9PiB2b2lkXG59XG4iXSwibmFtZXMiOlsiZ2V0Q2hhdGJvdE1ldGFkYXRhIiwiZm9ybWF0U3lzdGVtUHJvbXB0cyIsImV4YW1wbGVzUHJvbXB0IiwiZm9sbG93aW5nUXVlc3Rpb25zUHJvbXB0Iiwic2V0RGVmYXVsdFVzZXJQcmVmZXJlbmNlc1Byb21wdCIsInNldE91dHB1dEluc3RydWN0aW9uUHJvbXB0IiwiYWlFeGFtcGxlQ2xhc3NpZmljYXRpb24iLCJwcm9jZXNzVXNlck1lc3NhZ2UiLCJjbGVhblByb21wdCIsImhhc1JlYXNvbmluZyIsInZlcmlmeUR1cGxpY2F0ZU1lc3NhZ2UiLCJnZXRVc2VySW5kZXhlZERCS2V5cyIsInVzZUNvbnRpbnVlR2VuZXJhdGlvbiIsInVzZUluZGV4ZWREQiIsInVzZU1vZGVsIiwidXNlUG93ZXJVcCIsInVzZVNpZGViYXIiLCJ1c2VUaHJlYWQiLCJ1c2VUaHJlYWRWaXNpYmlsaXR5IiwibG9nRXJyb3JUb1NlbnRyeSIsImdlbmVyYXRlVW5pcXVlU2x1ZyIsImdldENhbm9uaWNhbERvbWFpbiIsImNyZWF0ZVRocmVhZCIsImRlbGV0ZVRocmVhZCIsImdldFRocmVhZCIsInNhdmVOZXdNZXNzYWdlIiwidXNlQ2hhdCIsInRocm90dGxlIiwidW5pcUJ5IiwiYXBwQ29uZmlnIiwidG9TbHVnIiwibmFub2lkIiwidXNlU2Vzc2lvbiIsInVzZVBhcmFtcyIsInVzZVNlYXJjaFBhcmFtcyIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVmIiwidXNlU2V0U3RhdGUiLCJ1c2VTb25uZXIiLCJ1c2VNQkNoYXQiLCJjb250ZXh0IiwiTUJDaGF0Q29udGV4dCIsIkVycm9yIiwiTUJDaGF0UHJvdmlkZXIiLCJjaGlsZHJlbiIsInNlc3Npb24iLCJhY3RpdmVUaHJlYWQiLCJkYXRhIiwiaXNPcGVuUG9wdXAiLCJ3ZWJTZWFyY2giLCJsb2FkaW5nU3RhdGUiLCJzZXRXZWJTZWFyY2giLCJzZXRBY3RpdmVUaHJlYWQiLCJzZXRJc05ld1Jlc3BvbnNlIiwic2V0SXNPcGVuUG9wdXAiLCJzZXRBY3RpdmVUb29sIiwic2V0TG9hZGluZ1N0YXRlIiwiYWN0aXZlQ2hhdGJvdCIsIm5hdmlnYXRlVG8iLCJ1c2VyQ29udGVudFJlZiIsInJhbmRvbVRocmVhZElkIiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsImlzQ29udGludW91c1RocmVhZCIsInNldElzQ29udGludW91c1RocmVhZCIsImN1c3RvbVNvbm5lciIsImlzUG93ZXJVcCIsInNldElzQ3V0T2ZmIiwicGFyYW1zIiwic2VsZWN0ZWRNb2RlbCIsImNsaWVudFR5cGUiLCJtZXNzYWdlc0Zyb21EQiIsImlzTmV3Q2hhdCIsInNldFN0YXRlIiwiaXNJbml0TG9hZGVkIiwibWVzc2FnZXMiLCJjaGF0Ym90RGF0YSIsImNoYXRib3QiLCJjaGF0Ym90U3lzdGVtUHJvbXB0cyIsInByb21wdHMiLCJ1c2VyUHJlZmVyZW5jZXNQcm9tcHRzIiwidXNlckFuZEFzc2lzdGFudE1lc3NhZ2VzIiwibWFwIiwibSIsImlkIiwibWVzc2FnZUlkIiwicm9sZSIsImNvbnRlbnQiLCJjcmVhdGVkQXQiLCJzeXN0ZW1Qcm9tcHRzIiwibGVuZ3RoIiwiZmlsdGVyIiwicHJvbXB0IiwidW5kZWZpbmVkIiwiaW5pdGlhbE1lc3NhZ2VzIiwiY29uY2F0IiwidGhyZWFkSWQiLCJjdXJyZW50IiwicmVzb2x2ZVRocmVhZElkIiwiYWN0aXZlVGhyZWFkSWQiLCJzZWFyY2hQYXJhbXMiLCJtZXNzYWdlQXR0YWNobWVudHMiLCJjbGlja2VkQ29udGVudFJlZiIsImRiS2V5cyIsInVzZXIiLCJpbmRleGVkREJBY3Rpb25zIiwiZ2V0Q3VycmVudFNlYXJjaFBhcmFtcyIsInJlY2VudFNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsIndpbmRvdyIsImxvY2F0aW9uIiwic2VhcmNoIiwiY29udGludW91c1RocmVhZElkIiwiZ2V0IiwiY2hlY2tzIiwiaXNDb250aW51aW5nVGhyZWFkIiwiQm9vbGVhbiIsInVzZUNoYXRDb25maWciLCJib2R5IiwibW9kZWwiLCJpbnB1dCIsImlzTG9hZGluZyIsInN0b3AiLCJhcHBlbmQiLCJyZWxvYWQiLCJzZXRJbnB1dCIsInNldE1lc3NhZ2VzIiwib25SZXNwb25zZSIsInJlc3BvbnNlIiwic3RhdHVzIiwidHlwZSIsInRleHQiLCJzdGF0dXNUZXh0Iiwiand0IiwiaGFzdXJhSnd0IiwidXNlcklkIiwib25GaW5pc2giLCJtZXNzYWdlIiwib3B0aW9ucyIsImZpbmFsTWVzc2FnZSIsImZlYXR1cmVzIiwiZGV2TW9kZSIsImZpbmlzaFJlYXNvbiIsImZpbGVzIiwicGFydHMiLCJmaWxlIiwiYmFzZTY0IiwibWltZVR5cGUiLCJpc0N1dE9mZiIsImluY2x1ZGVzIiwiZXJyb3IiLCJsZXZlbCIsImV4dHJhIiwidGhyZWFkU2x1ZyIsInNsdWciLCJjaGF0Ym90TmFtZSIsIm5hbWUiLCJhdHRhY2htZW50cyIsImF0dCIsInNpemUiLCJjb250ZW50VHlwZSIsImFpQ2hhdFRocmVhZElkIiwidXNlck1lc3NhZ2VJZCIsImFzc2lzdGFudE1lc3NhZ2VJZCIsIm5ld0F0dGFjaG1lbnRzIiwiYXR0YWNobWVudCIsIm1lc3NhZ2VJZHMiLCJ1cGRhdGVJdGVtIiwiY29uc29sZSIsImFkZEl0ZW0iLCJuZXdCYXNlTWVzc2FnZSIsImN1cmF0ZWRQcmVVc2VyTWVzc2FnZVNsdWciLCJ0b0xvY2FsZUxvd2VyQ2FzZSIsInJlcGxhY2UiLCJhc3Npc3RhbnRNZXNzYWdlVGhpbmtpbmciLCJ0aGlua2luZyIsImZpbmQiLCJtc2ciLCJyZWFzb25pbmciLCJ1cGxvYWROZXdNZXNzYWdlcyIsInVzZXJNZXNzYWdlU2x1ZyIsImFzc2lzdGFudE1lc3NhZ2VTbHVnIiwibmV3VXNlck1lc3NhZ2UiLCJuZXdBc3Npc3RhbnRNZXNzYWdlIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwibm93IiwiZXhhbXBsZXMiLCJwYXJ0IiwiUHJvbWlzZSIsImFsbCIsIm5ld1RocmVhZE1lc3NhZ2VzIiwibmV3U2VhcmNoUGFyYW1zIiwidG9TdHJpbmciLCJkZWxldGUiLCJuZXdUaHJlYWQiLCJtZXRhZGF0YSIsInRocmVhZCIsInVwZGF0ZUFjdGl2ZVRocmVhZCIsImRvbWFpbiIsImNhdGVnb3J5IiwiY2F0ZWdvcmllcyIsInVybFR5cGUiLCJzaGFsbG93IiwibmF2aWdhdGlvblBhcmFtcyIsIm9uVG9vbENhbGwiLCJ0b29sQ2FsbCIsImxvZyIsInRvb2xOYW1lIiwib25FcnJvciIsImFsbE1lc3NhZ2VzIiwic29ydCIsImEiLCJiIiwidGltZUEiLCJnZXRUaW1lIiwidGltZUIiLCJyZXNldFN0YXRlIiwidXBkYXRlTmV3VGhyZWFkIiwiaXNOZXdDaGF0U3RhdGUiLCJpc1BlcnNvbmFsIiwidHVubmluZ1VzZXJDb250ZW50IiwidXNlck1lc3NhZ2UiLCJwcmV2aW91c0FpVXNlck1lc3NhZ2VzIiwidXNlclByb21wdCIsImFsbFVzZXJNZXNzYWdlcyIsImlzUHJlUHJvY2Vzc2luZyIsIm1hdGNoIiwiZm9ybURpc2FibGVkIiwiYXBwZW5kV2l0aE1iQ29udGV4dFByb21wdHMiLCJjaGF0UmVxdWVzdE9wdGlvbnMiLCJpbmZvIiwiZXhwZXJpbWVudGFsX2F0dGFjaG1lbnRzIiwiZGVmYXVsdFVzZXJNZXNzYWdlIiwiYXVnbWVudGVkRnJvbSIsIm9wdGltaXN0aWNUaHJlYWQiLCJjaGF0Ym90SWQiLCJpc0FwcHJvdmVkIiwiaXNCbG9ja2VkIiwiYXBwZW5kTmV3TWVzc2FnZSIsImdldE1ldGFkYXRhTGFiZWxzIiwiY2hhdE1ldGFkYXRhIiwiZXJyb3JzIiwiZG9tYWluTmFtZSIsImpvaW4iLCJhcHBlbmRBc0NvbnRpbnVvdXNUaHJlYWQiLCJvcHRpbWlzdGljVXNlck1lc3NhZ2UiLCJzZW5kTWVzc2FnZUZyb21SZXNwb25zZSIsImNhbGxiYWNrIiwiYnVsbGV0Q29udGVudCIsImZ1bGxNZXNzYWdlIiwiZmluYWxseSIsInRvZ2dsZVdlYlNlYXJjaCIsImNoYXRNZXNzYWdlc09wdGlvbnMiLCJjaGF0Ym90TWV0YWRhdGEiLCJpc05ld1RocmVhZCIsInBhcmVudFRocmVhZElkIiwiY2hhdE1lc3NhZ2VzVG9BcHBlbmQiLCJhcHBlbmRSZXNwb25zZSIsIlByb3ZpZGVyIiwidmFsdWUiLCJuZXdDaGF0VGhyZWFkSWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-mb-chat.tsx\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-power-up.tsx":
      /*!************************************!*\
  !*** ./lib/hooks/use-power-up.tsx ***!
  \************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            '__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PowerUpProvider: () => (/* binding */ PowerUpProvider),\n/* harmony export */   usePowerUp: () => (/* binding */ usePowerUp)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ PowerUpProvider,usePowerUp auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst PowerUpContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(undefined);\nfunction PowerUpProvider(param) {\n    let { children } = param;\n    _s();\n    const [isPowerUp, setIsPowerUp] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const togglePowerUp = react__WEBPACK_IMPORTED_MODULE_1__.useCallback({\n        "PowerUpProvider.useCallback[togglePowerUp]": ()=>{\n            setIsPowerUp({\n                "PowerUpProvider.useCallback[togglePowerUp]": (prev)=>{\n                    const newState = !prev;\n                    console.log(\'PowerUp: changing to: \', newState);\n                    return newState;\n                }\n            }["PowerUpProvider.useCallback[togglePowerUp]"]);\n        }\n    }["PowerUpProvider.useCallback[togglePowerUp]"], []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(PowerUpContext.Provider, {\n        value: {\n            isPowerUp,\n            togglePowerUp\n        },\n        children: children\n    }, void 0, false, {\n        fileName: "/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/lib/hooks/use-power-up.tsx",\n        lineNumber: 26,\n        columnNumber: 3\n    }, this);\n}\n_s(PowerUpProvider, "YYPVpv3PZvzv/4LnB1P2O47Yxnc=");\n_c = PowerUpProvider;\nfunction usePowerUp() {\n    _s1();\n    const context = react__WEBPACK_IMPORTED_MODULE_1__.useContext(PowerUpContext);\n    if (context === undefined) {\n        throw new Error(\'usePowerUp must be used within a PowerUpProvider\');\n    }\n    return context;\n}\n_s1(usePowerUp, "b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=");\nvar _c;\n$RefreshReg$(_c, "PowerUpProvider");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we\'re in a\n        // browser context before continuing.\n        if (typeof self !== \'undefined\' &&\n            // AMP / No-JS mode does not inject these helpers:\n            \'$RefreshHelpers$\' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we\'ll check if it\'s\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we\'ll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it\'s possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ob29rcy91c2UtcG93ZXItdXAudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFFOEI7QUFPOUIsTUFBTUMsK0JBQWlCRCxnREFBbUIsQ0FDekNHO0FBR00sU0FBU0MsZ0JBQWdCLEtBQTJDO1FBQTNDLEVBQUVDLFFBQVEsRUFBaUMsR0FBM0M7O0lBQy9CLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHUCwyQ0FBYyxDQUFDO0lBRWpELE1BQU1TLGdCQUFnQlQsOENBQWlCO3NEQUFDO1lBQ3ZDTzs4REFBYSxDQUFDSTtvQkFDYixNQUFNQyxXQUFXLENBQUNEO29CQUNsQkUsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQkY7b0JBQ3RDLE9BQU9BO2dCQUNSOztRQUNEO3FEQUFHLEVBQUU7SUFFTCxxQkFDQyw4REFBQ1gsZUFBZWMsUUFBUTtRQUN2QkMsT0FBTztZQUNOVjtZQUNBRztRQUNEO2tCQUVDSjs7Ozs7O0FBR0o7R0FyQmdCRDtLQUFBQTtBQXVCVCxTQUFTYTs7SUFDZixNQUFNQyxVQUFVbEIsNkNBQWdCLENBQUNDO0lBQ2pDLElBQUlpQixZQUFZZixXQUFXO1FBQzFCLE1BQU0sSUFBSWlCLE1BQU07SUFDakI7SUFDQSxPQUFPRjtBQUNSO0lBTmdCRCIsInNvdXJjZXMiOlsiL1VzZXJzL3NoZXJpZmYvRGVza3RvcC9iaXRjYXNoLWFwcHMvbWFzdGVyYm90cy9hcHBzL21hc3RlcmJvdHMuYWkvbGliL2hvb2tzL3VzZS1wb3dlci11cC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbnRlcmZhY2UgUG93ZXJVcENvbnRleHRUeXBlIHtcblx0aXNQb3dlclVwOiBib29sZWFuXG5cdHRvZ2dsZVBvd2VyVXA6ICgpID0+IHZvaWRcbn1cblxuY29uc3QgUG93ZXJVcENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0PFBvd2VyVXBDb250ZXh0VHlwZSB8IHVuZGVmaW5lZD4oXG5cdHVuZGVmaW5lZCxcbilcblxuZXhwb3J0IGZ1bmN0aW9uIFBvd2VyVXBQcm92aWRlcih7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG5cdGNvbnN0IFtpc1Bvd2VyVXAsIHNldElzUG93ZXJVcF0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSlcblxuXHRjb25zdCB0b2dnbGVQb3dlclVwID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuXHRcdHNldElzUG93ZXJVcCgocHJldikgPT4ge1xuXHRcdFx0Y29uc3QgbmV3U3RhdGUgPSAhcHJldlxuXHRcdFx0Y29uc29sZS5sb2coJ1Bvd2VyVXA6IGNoYW5naW5nIHRvOiAnLCBuZXdTdGF0ZSlcblx0XHRcdHJldHVybiBuZXdTdGF0ZVxuXHRcdH0pXG5cdH0sIFtdKVxuXG5cdHJldHVybiAoXG5cdFx0PFBvd2VyVXBDb250ZXh0LlByb3ZpZGVyXG5cdFx0XHR2YWx1ZT17e1xuXHRcdFx0XHRpc1Bvd2VyVXAsXG5cdFx0XHRcdHRvZ2dsZVBvd2VyVXAsXG5cdFx0XHR9fVxuXHRcdD5cblx0XHRcdHtjaGlsZHJlbn1cblx0XHQ8L1Bvd2VyVXBDb250ZXh0LlByb3ZpZGVyPlxuXHQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VQb3dlclVwKCkge1xuXHRjb25zdCBjb250ZXh0ID0gUmVhY3QudXNlQ29udGV4dChQb3dlclVwQ29udGV4dClcblx0aWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBFcnJvcigndXNlUG93ZXJVcCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgUG93ZXJVcFByb3ZpZGVyJylcblx0fVxuXHRyZXR1cm4gY29udGV4dFxufVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiUG93ZXJVcENvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidW5kZWZpbmVkIiwiUG93ZXJVcFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJpc1Bvd2VyVXAiLCJzZXRJc1Bvd2VyVXAiLCJ1c2VTdGF0ZSIsInRvZ2dsZVBvd2VyVXAiLCJ1c2VDYWxsYmFjayIsInByZXYiLCJuZXdTdGF0ZSIsImNvbnNvbGUiLCJsb2ciLCJQcm92aWRlciIsInZhbHVlIiwidXNlUG93ZXJVcCIsImNvbnRleHQiLCJ1c2VDb250ZXh0IiwiRXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-power-up.tsx\n',
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/hooks/use-thread-visibility.tsx":
      /*!*********************************************!*\
  !*** ./lib/hooks/use-thread-visibility.tsx ***!
  \*********************************************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThreadVisibilityProvider: () => (/* binding */ ThreadVisibilityProvider),\n/* harmony export */   useThreadVisibility: () => (/* binding */ useThreadVisibility)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _lib_constants_bots_names__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/constants/bots-names */ \"(app-pages-browser)/./lib/constants/bots-names.ts\");\n/* harmony import */ var _lib_constants_hasura__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/constants/hasura */ \"(app-pages-browser)/./lib/constants/hasura.ts\");\n/* harmony import */ var _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/hooks/use-sidebar */ \"(app-pages-browser)/./lib/hooks/use-sidebar.tsx\");\n/* harmony import */ var _services_hasura__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/services/hasura */ \"(app-pages-browser)/./services/hasura/index.ts\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/../../node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/../../node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _useSonner__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./useSonner */ \"(app-pages-browser)/./lib/hooks/useSonner.tsx\");\n/* __next_internal_client_entry_do_not_use__ useThreadVisibility,ThreadVisibilityProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst ThreadVisibilityContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_7___default().createContext(undefined);\nfunction useThreadVisibility() {\n    _s();\n    const context = react__WEBPACK_IMPORTED_MODULE_7___default().useContext(ThreadVisibilityContext);\n    if (!context) {\n        throw new Error('useThreadVisibilityContext must be used within a ThreadVisibilityProvider');\n    }\n    return context;\n}\n_s(useThreadVisibility, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// ? This depends on the client-side updates, not reading the server threads\n// ! TODO: Add initial server state to avoid flickering\nfunction ThreadVisibilityProvider(param) {\n    let { children } = param;\n    var _session_data_user, _session_data;\n    _s1();\n    const [isPublic, setIsPublic] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(false);\n    const [threadsState, setThreads] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)({\n        threads: [],\n        count: 0\n    });\n    const [isAdminMode, setIsAdminMode] = react__WEBPACK_IMPORTED_MODULE_7___default().useState(false);\n    const [isContinuousThread, setIsContinuousThread] = react__WEBPACK_IMPORTED_MODULE_7___default().useState(false);\n    const { customSonner } = (0,_useSonner__WEBPACK_IMPORTED_MODULE_8__.useSonner)();\n    const { activeCategory, selectedCategories } = (0,_lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_3__.useSidebar)();\n    const params = (0,next_navigation__WEBPACK_IMPORTED_MODULE_6__.useParams)();\n    const session = (0,next_auth_react__WEBPACK_IMPORTED_MODULE_5__.useSession)();\n    const jwt = session === null || session === void 0 ? void 0 : (_session_data = session.data) === null || _session_data === void 0 ? void 0 : (_session_data_user = _session_data.user) === null || _session_data_user === void 0 ? void 0 : _session_data_user.hasuraJwt;\n    // biome-ignore lint/correctness/useExhaustiveDependencies: not required here\n    (0,react__WEBPACK_IMPORTED_MODULE_7__.useEffect)({\n        \"ThreadVisibilityProvider.useEffect\": ()=>{\n            getThreadForUser();\n        }\n    }[\"ThreadVisibilityProvider.useEffect\"], [\n        jwt\n    ]);\n    const toggleVisibility = async (newIsPublic, threadId)=>{\n        let isPublic = !newIsPublic // original value is inverted\n        ;\n        let error = '';\n        try {\n            const updateThreadResponse = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_4__.updateThreadVisibility)({\n                isPublic: newIsPublic,\n                threadId,\n                jwt\n            });\n            if (!updateThreadResponse.success) {\n                throw new Error(updateThreadResponse.error || 'Failed to update thread visibility.\\nTry again later.');\n            }\n            setIsPublic(newIsPublic);\n            customSonner({\n                type: 'success',\n                text: \"Thread is now \".concat(newIsPublic ? 'public' : 'private', \"!\")\n            });\n            isPublic = newIsPublic;\n        } catch (err) {\n            console.error('Failed to update thread visibility:', err);\n            error = (err === null || err === void 0 ? void 0 : err.message) || 'An unknown error occurred while updating thread visibility.';\n            customSonner({\n                type: 'error',\n                text: error\n            });\n        }\n        return {\n            isPublic,\n            error\n        };\n    };\n    const getThreadForUser = async ()=>{\n        try {\n            var _session_data_user, _session_data, _session_data1;\n            if (!jwt || !(session === null || session === void 0 ? void 0 : (_session_data = session.data) === null || _session_data === void 0 ? void 0 : (_session_data_user = _session_data.user) === null || _session_data_user === void 0 ? void 0 : _session_data_user.id)) return;\n            const fetchedThreads = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_4__.getThreads)({\n                jwt,\n                userId: session === null || session === void 0 ? void 0 : (_session_data1 = session.data) === null || _session_data1 === void 0 ? void 0 : _session_data1.user.id\n            });\n            if (fetchedThreads) {\n                setThreads(fetchedThreads);\n            }\n        } catch (error) {\n            console.error('Error fetching threads:', error);\n        }\n    };\n    const isSameUser = (thread)=>{\n        var _session_data_user, _session_data, _session_data_user1, _session_data1;\n        if (!(session === null || session === void 0 ? void 0 : (_session_data = session.data) === null || _session_data === void 0 ? void 0 : (_session_data_user = _session_data.user) === null || _session_data_user === void 0 ? void 0 : _session_data_user.id)) return false;\n        return thread.userId === (session === null || session === void 0 ? void 0 : (_session_data1 = session.data) === null || _session_data1 === void 0 ? void 0 : (_session_data_user1 = _session_data1.user) === null || _session_data_user1 === void 0 ? void 0 : _session_data_user1.id);\n    };\n    const initiateDeleteThread = async (threadId)=>{\n        try {\n            var _session_data_user, _session_data, _session_data1;\n            if (!(session === null || session === void 0 ? void 0 : (_session_data = session.data) === null || _session_data === void 0 ? void 0 : (_session_data_user = _session_data.user) === null || _session_data_user === void 0 ? void 0 : _session_data_user.id) || !jwt) {\n                return {\n                    success: false,\n                    message: 'User session not found',\n                    error: 'User session not found. Please log in again.'\n                };\n            }\n            const deleteT = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_4__.deleteThread)({\n                threadId,\n                jwt,\n                userId: session === null || session === void 0 ? void 0 : (_session_data1 = session.data) === null || _session_data1 === void 0 ? void 0 : _session_data1.user.id\n            });\n            await getThreadForUser();\n            if (deleteT.success) {\n                return {\n                    success: true,\n                    message: 'Thread deleted successfully',\n                    error: null\n                };\n            }\n            return {\n                success: false,\n                message: deleteT.error || 'Failed to delete thread',\n                error: deleteT.error || 'Failed to delete thread'\n            };\n        } catch (error) {\n            console.error('Error deleting thread:', error);\n            return {\n                success: false,\n                message: 'Failed to delete thread',\n                error: error instanceof Error ? error.message : 'An unknown error occurred'\n            };\n        }\n    };\n    const loadUnapprovedThreads = async ()=>{\n        try {\n            if (!jwt) {\n                customSonner({\n                    type: 'error',\n                    text: 'Authentication required'\n                });\n                return;\n            }\n            const browseThreadGetParams = {\n                offset: 0,\n                limit: _lib_constants_hasura__WEBPACK_IMPORTED_MODULE_2__.PAGE_SIZE,\n                isAdminMode: true\n            };\n            const { chatbot, botSlug } = params;\n            if (activeCategory) {\n                browseThreadGetParams.categoryId = activeCategory;\n            } else {\n                // By default, it would fetch all the categories but since the userId is in the params,\n                // it will return threads that are only related to the user.\n                browseThreadGetParams.categoriesId = selectedCategories;\n            }\n            if (chatbot || botSlug) {\n                const botSlugs = await _lib_constants_bots_names__WEBPACK_IMPORTED_MODULE_1__.botNames;\n                const chatbotName = botSlugs.get(chatbot) || botSlugs.get(botSlug);\n                browseThreadGetParams.chatbotName = chatbotName;\n            }\n            const unapprovedThreads = await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_4__.getBrowseThreads)(browseThreadGetParams);\n            setThreads(unapprovedThreads);\n        } catch (error) {\n            console.error('Error fetching unapproved threads:', error);\n        }\n    };\n    const handleToggleAdminMode = async ()=>{\n        if (!isAdminMode) {\n            await loadUnapprovedThreads();\n        } else {\n            await getThreadForUser();\n        }\n        setIsAdminMode(!isAdminMode);\n    };\n    const adminApproveThread = async (threadId)=>{\n        try {\n            if (!session || !jwt) {\n                customSonner({\n                    type: 'error',\n                    text: 'User session not found. Please log in again.'\n                });\n                return;\n            }\n            await (0,_services_hasura__WEBPACK_IMPORTED_MODULE_4__.approveThread)({\n                threadId,\n                jwt\n            });\n            customSonner({\n                type: 'success',\n                text: 'Thread approved successfully.'\n            });\n            await loadUnapprovedThreads();\n        } catch (error) {\n            console.error('Error approving thread:', error);\n            customSonner({\n                type: 'error',\n                text: 'Failed to approve thread. Please try again.'\n            });\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThreadVisibilityContext.Provider, {\n        value: {\n            isPublic,\n            threadsState,\n            isAdminMode,\n            isContinuousThread,\n            isSameUser,\n            toggleVisibility,\n            adminApproveThread,\n            initiateDeleteThread,\n            handleToggleAdminMode,\n            setIsContinuousThread\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/sheriff/Desktop/bitcash-apps/masterbots/apps/masterbots.ai/lib/hooks/use-thread-visibility.tsx\",\n        lineNumber: 261,\n        columnNumber: 3\n    }, this);\n}\n_s1(ThreadVisibilityProvider, \"aVALWuTcWIxzwOIuthp9tFaX2Cc=\", false, function() {\n    return [\n        _useSonner__WEBPACK_IMPORTED_MODULE_8__.useSonner,\n        _lib_hooks_use_sidebar__WEBPACK_IMPORTED_MODULE_3__.useSidebar,\n        next_navigation__WEBPACK_IMPORTED_MODULE_6__.useParams,\n        next_auth_react__WEBPACK_IMPORTED_MODULE_5__.useSession\n    ];\n});\n_c = ThreadVisibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"ThreadVisibilityProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/hooks/use-thread-visibility.tsx\n",
          ),
        );

        /***/
      },

    /***/ "(app-pages-browser)/./lib/sentry.ts":
      /*!***********************!*\
  !*** ./lib/sentry.ts ***!
  \***********************/
      /***/ (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        eval(
          __webpack_require__.ts(
            "__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logErrorToSentry: () => (/* binding */ logErrorToSentry)\n/* harmony export */ });\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"(app-pages-browser)/../../node_modules/@sentry/core/build/esm/currentScopes.js\");\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/nextjs */ \"(app-pages-browser)/../../node_modules/@sentry/core/build/esm/exports.js\");\n\nconst APP_NAME = 'masterbots.ai' // Define the application name consistently\n;\n/**\n * Logs an error or message to Sentry with additional context.\n * Uses the @sentry/nextjs SDK, assuming it's already initialized via\n * the standard Next.js Sentry configuration files (instrumentation.ts, etc.).\n *\n * @param title A concise title for the error category or event (used as a tag).\n * @param options An object containing the error/value and optional context.\n * @example // 1. Catching a standard error\n * try {\n *  throw new Error(\"Database connection failed\");\n * } catch (err) {\n *  logErrorToSentry(\"Database Error\", {\n *    error: err,\n *    message: \"Failed to connect to primary database.\",\n *    level: 'fatal', // Set a specific severity\n *    extra: { attempt: 3, dbHost: 'db.example.com' },\n *    tags: { component: 'database-connector', critical: true }\n *  });\n * }\n * @example // 2. Logging a warning message without an Error object\n * logErrorToSentry(\"Configuration Warning\", {\n *  error: \"API key missing for optional service 'Analytics'\", // The value/issue being logged\n *  message: \"Optional analytics service disabled due to missing API key.\", // More descriptive message\n *  level: 'warning',\n *  extra: { service: 'Analytics', configChecked: 'env.local' },\n *  tags: { feature: 'optional-integrations' }\n * });\n * @example // 3. Logging an informational event\n * logErrorToSentry(\"User Action\", {\n *  error: \"User signup completed\", // Info being logged\n *  level: 'info',\n *  extra: { userId: 'usr_12345', plan: 'free' },\n *  tags: { flow: 'onboarding' }\n * });\n */ function logErrorToSentry(title, options) {\n    const { error, message, level = 'error', extra = {}, tags = {} } = options;\n    // Map Sentry level to console method\n    const consoleMethodMap = {\n        fatal: 'error',\n        error: 'error',\n        warning: 'warn',\n        log: 'log',\n        info: 'info',\n        debug: 'debug'\n    };\n    const consoleMethod = consoleMethodMap[level] || 'log' // Default to 'log' if level is somehow unexpected\n    ;\n    // Optional: Log locally for immediate visibility during development/debugging\n    // @ts-ignore\n    console[consoleMethod](\"[\".concat(APP_NAME, \"] Log [\").concat(title, \"]:\"), message || error, {\n        level,\n        extra,\n        tags\n    });\n    _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.withScope((scope)=>{\n        // Set the severity level for the event\n        scope.setLevel(level);\n        // Set standard tags\n        scope.setTag('app_name', APP_NAME);\n        scope.setTag('log_title', title) // Use the title as a searchable tag\n        ;\n        // Add any custom tags provided\n        for (const [key, value] of Object.entries(tags)){\n            scope.setTag(key, value);\n        }\n        // Add extra context data under a specific namespace\n        scope.setContext('Log Details', {\n            // Provide a fallback message if none is given\n            message: message || (error instanceof Error ? error.message : 'No specific message provided.'),\n            // Include all other extra data\n            ...extra\n        });\n        // Capture the error or message\n        if (error instanceof Error) {\n            // If it's a real Error object, capture it as an exception\n            _sentry_nextjs__WEBPACK_IMPORTED_MODULE_1__.captureException(error);\n        } else {\n            // If it's not an Error (e.g., a string or other value), capture it as a message.\n            // Construct a meaningful message string.\n            const syntheticMessage = \"[\".concat(APP_NAME, \"] \").concat(title, \": \").concat(message || String(error));\n            _sentry_nextjs__WEBPACK_IMPORTED_MODULE_1__.captureMessage(syntheticMessage, {\n                level: level,\n                // Include the original non-error value and any other extra data\n                extra: {\n                    original_value: error,\n                    ...extra\n                }\n            });\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/sentry.ts\n",
          ),
        );

        /***/
      },
  },
]);
