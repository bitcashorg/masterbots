{"kind":"FETCH","data":{"headers":{"content-encoding":"gzip","content-length":"5374","content-type":"application/json; charset=utf-8","date":"Mon, 23 Dec 2024 15:23:46 GMT","x-request-id":"a100283a-e10d-4481-ac93-d32d8c25a2a9"},"body":"","status":200,"url":"http://localhost:8080/v1/graphql"},"revalidate":31536000,"tags":[]}